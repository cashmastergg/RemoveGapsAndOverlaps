<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArcGIS.Desktop.Layouts</name>
    </assembly>
    <members>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Events.ActiveLayoutViewChangedEvent">
            <summary>
            Occurs when the active <see cref="T:ArcGIS.Desktop.Layouts.LayoutView">LayoutView</see> has changed.
            </summary> 
            <remarks>
            Reference <see cref="T:ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs">LayoutViewEventArgs</see> to get a list of arguments.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutEvents.cs" region="ActiveLayoutViewChangedEvent" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Events.ActiveLayoutViewChangedEvent.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Events.ActiveLayoutViewChangedEvent.Subscribe(System.Action{ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs},System.Boolean)">
            <summary>
            Subscribe to the ActiveLayoutViewChangedEvent.
            </summary>
            <param name="action">The delegate that gets executed when the event is published.</param>
            <param name="keepSubscriberAlive">When <c>false</c> the <see cref="T:ArcGIS.Core.Events.CompositePresentationEvent`1">CompositePresentationEvent</see>
            will maintain a weak delegate reference to the subscriber. Using a weak delegate reference relieves the subscriber from the need to unsubscribe to enable 
            proper garbage collection. The default is <c>false</c>.</param>
            <returns>A <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken </see> that uniquely identifies the added subscription.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Events.ActiveLayoutViewChangedEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs})">
            <summary>
            Removes the first subscriber matching the provided delegate from the subscribers' list.
            </summary>
            <param name="action">The delegate used when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Events.ActiveLayoutViewChangedEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
            Removes the subscriber matching the <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see>.
            </summary>
            <param name="token">The <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> returned when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Events.ActiveLayoutViewChangedEvent.Publish(ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs)">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Events.RefreshSymbolEvent.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Events.RefreshSymbolEventArgs.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Events.RefreshSymbolEventArgs.#ctor(ArcGIS.Core.CIM.CIMSymbolReference)">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.AviationNorthArrowPanelVM.TrueNorthLength">
            <summary>The TrueNorthLength property represents the length of true
            north arrow in Aviation North Arrow.</summary>
            <value>The TrueNorthLength property gets/sets the value of the double
            field, _trueNorthLength. Changes write back to CIMAviationArrow
            TrueNorthArrow.</value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.AviationNorthArrowPanelVM.MagneticNorthLength">
            <summary>The MagneticNorthLength property represents the length of
            magnetic north arrow in Aviation North Arrow.</summary>
            <value>The MagneticNorthLength property gets/sets the value of the
            double field, _MagneticNorthLength. Changes write back to
            CIMAviationArrow MagneticNorthArrow.</value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.AviationNorthArrowPanelVM.GridNorthLength">
            <summary>The GridNorthLength property represents the length of
            grid north arrow in Aviation North Arrow.</summary>
            <value>The GridNorthLength property gets/sets the value of the
            double field, _GridNorthLength. Changes write back to
            CIMAviationArrow GridNorthArrow.</value>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.AviationNorthArrowPanelVM.InitTrueNorthLength">
            <summary>
            Initializes the true north arrow length for TrueNorthLength. Extracts
            the arrow length in points and converts them to current page units for
            the UI.
            </summary>
            <returns>A Task to wait on while initializing the true north arrow
            length.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.AviationNorthArrowPanelVM.InitMagneticNorthLength">
            <summary>
            Initializes the magentic north arrow length for MagneticNorthLength.
            Extracts the arrow length in points and converts them to current page
            units for the UI.
            </summary>
            <returns>A Task to wait on while initializing the magentic north arrow
            length.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.AviationNorthArrowPanelVM.InitGridNorthLength">
            <summary>
            Initializes the grid north arrow length for GridNorthLength. Extracts
            the arrow length in points and converts them to current page units for
            the UI.
            </summary>
            <returns>A Task to wait on while initializing the grid north arrow
            length.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.AviationNorthArrowPanelVM.WriteTNLength(System.Double,ArcGIS.Core.CIM.CIMAviationArrow)">
            <summary>
            Writes back the true north arrow length to a CIMAviationArrow arrow
            and updates the UI.
            </summary>
            <param name="arrowLength">The north arrow's length in page
            units.</param>
            <param name="arrow">The north arrow.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.AviationNorthArrowPanelVM.WriteMNLength(System.Double,ArcGIS.Core.CIM.CIMAviationArrow)">
            <summary>
            Writes back the magnetic north arrow length to a CIMAviationArrow arrow
            and updates the UI.
            </summary>
            <param name="arrowLength">The magnetic arrow's length in page
            units.</param>
            <param name="arrow">The magnetic arrow.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.AviationNorthArrowPanelVM.WriteGNLength(System.Double,ArcGIS.Core.CIM.CIMAviationArrow)">
            <summary>
            Writes back the grid north arrow length to a CIMAviationArrow arrow
            and updates the UI.
            </summary>
            <param name="arrowLength">The grid arrow's length in page
            units.</param>
            <param name="arrow">The grid arrow.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.AviationNorthArrowPanelVM.WriteLength(System.Double,ArcGIS.Core.CIM.CIMAviationArrow)">
            <summary>
            Converts an arrow's length from page units to points and writes back
            the length of a CIMAviationArrow.
            </summary>
            <param name="arrowLength">The arrow's length in page units.</param>
            <param name="arrow">The CIMAviationArrow to write back to.</param>
            <returns>A Task to wait on while converting and writing the length of
            a CIMAviationArrow.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.ProfileFrameObstaclePanelVM.HasShadowObstaclesCalculated">
            <summary>
            Used to determine if we can show shadow checkbox
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.ProfileFrameObstaclePanelVM.HasPointSubstituteSymbol">
            <summary>
            Used to determine if we can show substitute symbols
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.ProfileFrameObstaclePanelVM.HasPolySubstituteSymbol">
            <summary>
            Used to determine if we can show substitute symbols
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.ProfileFrameObstaclePanelVM.EnablePenetratingCheckbox">
            <summary>
            Used to determine if we need to enable penetrating obstacles checkbox
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.ProfileFrameObstaclePanelVM.EnableShadowCheckbox">
            <summary>
            Used to determine if we need to enable Shadow obstacles checkbox
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.AttachmentPlacementPanel.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.CustomGridOptionsPanel">
            <summary>
            Interaction logic for CustomGridOptionsPanel.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.CustomGridOptionsPanel.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.GraticuleOptionsPanel">
            <summary>
            Interaction logic for GraticuleOptionsPanel.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.GraticuleOptionsPanel.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.GridComponentsList">
            <summary>
            Interaction logic for GridComponentsList.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.GridComponentsList.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.GridCornerVisibilityControl">
            <summary>
            Interaction logic for GridCornerVisibilityControl.xaml
            </summary>
            <summary>
            GridCornerVisibilityControl
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.GridCornerVisibilityControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.GridEdgeVisibilityControl">
            <summary>
            Interaction logic for GridEdgeVisibilityControl.xaml
            </summary>
            <summary>
            GridEdgeVisibilityControl
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.GridEdgeVisibilityControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.MeasuredGridOptionsPanel">
            <summary>
            Interaction logic for MeasuredGridOptionsPanel.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.MeasuredGridOptionsPanel.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.PlacementPanel.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.ReferenceGridOptionsPanel">
            <summary>
            Interaction logic for ReferenceGridOptionsPanel.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Panels.ReferenceGridOptionsPanel.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.DynamicTextControl">
            <summary>
            DynamicTextControl
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.DynamicTextControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup">
            <summary>
            Interaction logic for LineSymbolGroup.xaml
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup.SubElementProperty">
            <summary>
            <para>Specify the style tag being worked on.</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup.SubElementNameProperty">
            <summary>
            <para>Specify the human readable name of the symbol being worked on.</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup.DescriptionProperty">
            <summary>
            <para>Specify the tip for what the control is working on.</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup.SymbolProperty">
            <summary>
            Symbol - Associated Symbol
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup.SymbolCmdProperty">
            <summary>
            <para>Specify the symbol command</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup.SymbolHeaderProperty">
            <summary>
            <para>Specify the symbol tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup.ColorHeaderProperty">
            <summary>
            <para>Specify the color tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup.LineWidthHeaderProperty">
            <summary>
            <para>Specify the line width tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup.InnerSymbolProperty">
            <summary>
            Symbol - Associated Symbol
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup.ColorProperty">
            <summary>
            Symbol - Associated Color
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup.LineWidthProperty">
            <summary>
            Symbol - Associated Width
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.LineSymbolGroup.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup">
            <summary>
            Interaction logic for PointSymbolGroup.xaml
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup.SubElementProperty">
            <summary>
            <para>Specify the style tag being worked on.</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup.SubElementNameProperty">
            <summary>
            <para>Specify the human readable name of the symbol being worked on.</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup.DescriptionProperty">
            <summary>
            <para>Specify the tip for what the control is working on.</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup.SymbolProperty">
            <summary>
            Symbol - Associated Symbol
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup.SymbolCmdProperty">
            <summary>
            <para>Specify the symbol command</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup.SymbolHeaderProperty">
            <summary>
            <para>Specify the symbol tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup.ColorHeaderProperty">
            <summary>
            <para>Specify the color tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup.PointSizeHeaderProperty">
            <summary>
            <para>Specify the Point width tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup.InnerSymbolProperty">
            <summary>
            Symbol - Associated Symbol
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup.ColorProperty">
            <summary>
            Symbol - Associated Color
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup.PointSizeProperty">
            <summary>
            Symbol - Associated Width
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.PointSymbolGroup.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup">
            <summary>
            Interaction logic for PolygonSymbolGroup.xaml
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.SubElementProperty">
            <summary>
            <para>Specify the style tag being worked on.</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.SubElementNameProperty">
            <summary>
            <para>Specify the human readable name of the symbol being worked on.</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.DescriptionProperty">
            <summary>
            <para>Specify the tip for what the control is working on.</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.SymbolCmdProperty">
            <summary>
            <para>Specify the symbol command</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.SymbolHeaderProperty">
            <summary>
            <para>Specify the symbol tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.ColorHeaderProperty">
            <summary>
            <para>Specify the color tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.OutlineColorHeaderProperty">
            <summary>
            <para>Specify the color tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.OutlineWidthHeaderProperty">
            <summary>
            <para>Specify the line width tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.InnerSymbolProperty">
            <summary>
            Symbol - Associated Symbol
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.ColorProperty">
            <summary>
            Symbol - Associated Color
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.OutlineColorProperty">
            <summary>
            Symbol - Associated OutlineColor
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.OutlineWidthProperty">
            <summary>
            Symbol - Associated Width
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.SymbolProperty">
            <summary>
            Symbol - Associated Symbol
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.PolygonSymbolGroup.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.SymbolButton">
            <summary>
            Interaction logic for SymbolButton.xaml
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.SymbolButton.OnClickCmdProperty">
            <summary>
            OnClickCmd
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.SymbolButton.SymbolProperty">
            <summary>
            Symbol - Associated Symbol
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.SymbolButton.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup">
            <summary>
            Interaction logic for TextSymbolGroup.xaml
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup.SubElementProperty">
            <summary>
            <para>Specify the style tag being worked on.</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup.SubElementNameProperty">
            <summary>
            <para>Specify the human readable name of the symbol being worked on.</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup.DescriptionProperty">
            <summary>
            <para>Specify the tip for what the control is working on.</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup.SymbolProperty">
            <summary>
            Symbol - Associated Symbol
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup.SymbolCmdProperty">
            <summary>
            <para>Specify the symbol command</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup.SymbolHeaderProperty">
            <summary>
            <para>Specify the symbol tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup.ColorHeaderProperty">
            <summary>
            <para>Specify the color tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup.TextSizeHeaderProperty">
            <summary>
            <para>Specify the line width tip header</para>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup.InnerSymbolProperty">
            <summary>
            Symbol - Associated Symbol
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup.ColorProperty">
            <summary>
            Symbol - Associated Color
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup.TextSizeProperty">
            <summary>
            Symbol - Associated Width
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.TextSymbolGroup.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.ElementDockPane">
            <summary>
            Interaction logic for TOCDockPane.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.ElementDockPane.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.ExportDockPane">
            <summary>
            Interaction logic for TOCDockPane.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.ExportDockPane.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.WrapPanelRightDockingMarginConverter">
            <summary>
            The two export feedback textblocks are stacked using a WrapPanel.
            This margin converter is used to dock right text to the right.
            Case 1: if there is not enough horizontal space to keep both textblocks in a single row and a second row is expected, return set the left margin to zero so the two textblocks in two seperate are left aligned.
            Case 2: otherwise, allocate all unused horizontal space to the left margin so the last child will be docked to the right.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.Export.ExportDockPanePlugInVMBase._width">
            <summary>
            Width will be initialized with active map view width
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.Export.ExportDockPanePlugInVMBase._height">
            <summary>
            Height will be initialized with active map view height
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.Export.SavePresetDialogView">
            <summary>
            Interaction logic for SavePresetDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.Export.SavePresetDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.DockPanes.BindablePasswordBox.PasswordProperty">
            <summary>
            The password dependency property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.BindablePasswordBox.#cctor">
            <summary>
            Static constructor to initialize the dependency properties.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.BindablePasswordBox.#ctor">
            <summary>
            Saves the password changed callback and sets the child element to the password box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.BindablePasswordBox.Password">
            <summary>
            The password dependency property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.BindablePasswordBox.OnPasswordPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the password dependency property.
            </summary>
            <param name="d">the dependency object</param>
            <param name="eventArgs">the event args</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.BindablePasswordBox.OnPasswordChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the password changed event.
            </summary>
            <param name="sender">the sender</param>
            <param name="eventArgs">the event args</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.ExportDockPaneVM.IsLayoutPane(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <summary>
            Determines if the pane is a layout pane and not a report pane.
            </summary>
            <param name="pane">The pane to test.</param>
            <returns>true - it's a layout pane.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl">
            <summary>
            Interaction logic for MapSeriesExportOptions.xaml
            </summary>
            <summary>
            MapSeriesExportOptionsControl
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl.NoMapSeriesMessage">
            <summary>
            Message to display when NoMapSeriesOptions is set to ShowLabel and Layout does not contain a map series
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl.ExportOption">
            <summary>
            Indicates which export option has been checked by user
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl.WaitingOnPageIds">
            <summary>
            Indicates task to retrieve page ids is executing
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl.SelectedPageIDs">
            <summary>
            Array of page identifiers based on selected export option
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl.PageIds">
            <summary>
            Array of all page identifiers in map series
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl.PageRange">
            <summary>
            Custom page range
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl.InvalidPageRange">
            <summary>
            Indicates if Custom page range is valid or invalid.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl.OnMapSeriesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles change of local MapSeries dependency property
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl.OnLayoutEvent(ArcGIS.Desktop.Layouts.Events.LayoutEventArgs)">
            <summary>
            Handles changes to a map series in a layout
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl.OnMapSeriesChanged">
            <summary>
            Handles changes to MapSeries dependency property
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl.GetPageIds">
            <summary>
            Returns array of PageIds based on ExportOption selected
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.MapSeriesExportOptionsControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DockPanes.PrintDockPane">
            <summary>
            Interaction logic for PrintDockPane.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.PrintDockPane.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.DockPanes.PrintDockPaneVM.OpenPrinterProperties">
            <summary>
            Open printer properties dialog
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.AviationNorthArrow.GetStyleAsync">
            <exclude> </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.AviationNorthArrow.GetStyleType">
            <exclude> </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.ProfileFrame.GetObstacleCalculationOption(System.String)">
            <summary>
            Returns how the calculation was performed for selected
            obstacle layer. THis will help determine if Show Penetrating,
            Show shadow options are checked by default and also to
            enable/disable those options
            </summary>
            <param name="sSourceLayer"></param>
            <returns>All, Penetrating, Shadow</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.TOC.TOCControl">
            <summary>
            Interaction logic for TOCControl.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.TOC.TOCControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Utilities.ElementUtil.FilterMultilevel(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Filter the list to remove nested parents - i.e. the input list contains both
            the parent and its children - in which case we want _just the top most parent_
            </summary>
            <param name="elements"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Utilities.ElementUtil.VerifyGraphic(ArcGIS.Core.CIM.CIMGraphic,System.String)">
            <summary>
            Use to verify a graphic is correct. Note: this throws!!
            </summary>
            <param name="graphic"></param>
            <param name="errormsg"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Utilities.ElementUtil.ConstructGraphic(ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbol,ServiceContracts.LayoutElementType)">
            <summary>
            Use to construct the correct CIMGraphic from the given geometry and symbol.
            Note: this throws for unsupported geometry types!!
            </summary>
            <param name="geometry"></param>
            <param name="symbol"></param>
            <param name="elementType"></param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Utilities.ClipboardContents">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Utilities.PaperDescriptor.ToPageAsync">
            <summary>
            Uses the current Paper Descriptor to create a CIMPage.
            </summary>
            <returns>Task of CIMPage.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Utilities.PaperDescriptor.ToPage">
            <summary>
            Uses the current Paper Descriptor to create a CIMPage.
            </summary>
            <returns>The CIMPage</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">The function must be called on the worker thread.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Utilities.RichTextUtil.ConvertNumberToString(System.Int32,System.Boolean,System.String)">
            <summary>
            Convert a number to string, consisting of digits followed by the NumberSuffix character.
            </summary>
            <param name="number">Number to convert.</param>
            <param name="oneBased">True if there is no zero digit (e.g., alpha numbering).</param>
            <param name="numericSymbols">Set of digits (e.g., 0-9 or a-z).</param>
            <returns>Returns the number string as an array of characters.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Utilities.RichTextUtil.ConvertNumberToRomanString(System.Int32,System.Boolean)">
            <summary>
            Convert 1-based number to a Roman numeric string
            followed by NumberSuffix character.
            </summary>
            <remarks>
            Roman number is 1-based. The Roman numeric string is a series of symbols. Following
            is the list of symbols and its value.
            
                Symbol      Value
                    I           1
                    V           5  
                    X          10
                    L          50
                    C         100
                    D         500
                    M        1000
            
            The rule of Roman number prohibits the use of more than 3 consecutive identical symbol
            but using subtraction of symbol standing for multiples of 10, so the value 4 is written
            as IV (5-1) rather than IIII. 
            
            Due to the writing rule and the fact that the symbol represents not the numeral digit 
            but the value of the number. Roman number system cannot represent value larger than 3999.
            
            See, http://www.ccsn.nevada.edu/math/ancient_systems.htm
            
            However, there exists a more relaxing use of Roman numbers to represent values 4000 and  
            4999 by using 4 consecutive M. The value 4999 is than written as 'MMMMCMXCIX'. Such use
            however is not widely accepted.
            
            See, http://www.guernsey.net/~sgibbs/roman.html
            
            For values larger than 3999, an overscore is used on the symbol to indicate 1000 multiplication.
                                               ___
            So, value 7000 would be written as VII. This writing rule has a fair amount of disagreement
            since it is widely understood that it is not invented by the Romans and they rarely had a
            need for large numbers during their time. Furthermore, accepting this writing rule just
            for the sake of being able to write larger number would create a new limitation of the values
            greater than 3,999,999. Unicode 4.0 does not encode these overscore symbols.
            
            See, http://www.gwydir.demon.co.uk/jo/roman/number.htm
                 http://www.novaroma.org/via_romana/numbers.html
            
            Implementation-wise, IE adopts a general limitation of 3999 and simply convert the value
            into a regular numeric form.
            
            We'll follow the mainstream and adopt the 3999 limit. The fallback would also do would IE does.
            
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Utilities.RichTextUtil.AddRomanNumeric(System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            Convert number 0 - 9 into Roman numeric
            </summary>
            <param name="builder">string builder</param>
            <param name="number">number to convert</param>
            <param name="oneFiveTen">Roman numeric char for one five and ten</param>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Controls.ImportDialogOptionsView">
            <summary>
            Interaction logic for ImportOptionsView.xaml
            </summary>
            <summary>
            ImportDialogOptionsView
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Controls.ImportDialogOptionsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PositiveNumberRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Validation rule for text boxes.
            </summary>    
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Control.LayoutControl">
            <summary>
            Interaction logic for LayoutControl.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.LayoutControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Control.LayoutReadoutControl">
            <summary>
            Interaction logic for LayoutReadoutControl.xaml
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.LayoutReadoutControl.ActiveView">
            <summary>
            Gets or sets the ActiveView property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.LayoutReadoutControl.OnActiveViewChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raised when the ActiveViewProperty dependency property changes.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.LayoutReadoutControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Control.MapComboBox">
            <summary>
            Interaction logic for MapControl.xaml
            </summary>
            <summary>
            MapComboBox
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.MapComboBox.ViewModelProperty">
            <summary>
            ViewModel 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.MapComboBox.Only2DProperty">
            <summary>
            Only2D
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.MapComboBox.ShowNoneProperty">
            <summary>
            ShowNone - Show the None item
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.MapComboBox.MapURIProperty">
            <summary>
            MapURI - Selected MapURI
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.MapComboBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Control.MapFrameComboBox">
            <summary>
            Interaction logic for MapFrameControl.xaml
            </summary>
            <summary>
            MapFrameComboBox
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.MapFrameComboBox.ViewModelProperty">
            <summary>
            ViewModel 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.MapFrameComboBox.ShowNoneProperty">
            <summary>
            ShowNone - Show the None item
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.MapFrameComboBox.ShowMapSeriesProperty">
            <summary>
            ShowMapSeries - Show the None item
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.MapFrameComboBox.Only2DProperty">
            <summary>
            Only2D
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.MapFrameComboBox.ExclusionsProperty">
            <summary>
            Exclusions
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.MapFrameComboBox.MapFrameNameProperty">
            <summary>
            MapFrameName - Text for MapFrameName
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.MapFrameComboBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Control.MapTilingControl">
            <summary>
            Interaction logic for MapTilingControl.xaml
            </summary>
            <summary>
            MapTilingControl
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.MapTilingControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Control.PageSetupControl">
            <summary>
            Interaction logic for PageSetupControl.xaml
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.PageSetupControl.VM">
            <summary>
            Gets or sets the VMProperty property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PageSetupControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Control.PageMarginType">
            <summary>
            The type of page margins.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Control.PageMarginTypeInfo">
            <summary>
            Represent the information for a margin type
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PageMarginTypeInfo.#ctor(ArcGIS.Desktop.Internal.Layouts.Control.PageMarginType)">
            <summary>
            Constructs the PageMarginTypeInfo object.
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.PageMarginTypeInfo.Type">
            <summary>
            Gets and sets Type property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.PageMarginTypeInfo.DisplayText">
            <summary>
            Gets DisplayText property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PageMarginTypeInfo.UpdateValues(ArcGIS.Core.Internal.CIM.LinearUnit,ArcGIS.Core.CIM.CIMMargin@)">
            <summary>
            Updates the values from the current type
            </summary>
            <param name="unit"></param>
            <param name="margin">The margin values</param>
            <returns>Values Changed</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PageMarginTypeInfo.GetText">
            <summary>
            Get the display text for the type.
            </summary>
            <returns>The display text</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PageMarginTypeInfo.TypeFromValues(ArcGIS.Core.Internal.CIM.LinearUnit,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Get the margin type based on the values of the margin.
            </summary>
            <param name="unit">The unit of the values</param>
            <param name="top">The top value</param>
            <param name="bottom">The bottom value</param>
            <param name="left">The left value</param>
            <param name="right">The right value</param>
            <returns>The type for the values</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.PageSetupControlVM.UseMargins">
            <summary>
            Gets or sets the UseMargins property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.PageSetupControlVM.ShowVerticalMargins">
            <summary>
            Gets or sets the ShowVerticalMargins property.
            
            When this is true the control will display the margin controls vertically.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.PageSetupControlVM.ShowVerticalMarginControls">
            <summary>
            Shows the Vertical Controls
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.PageSetupControlVM.ShowHorizontalMarginControls">
            <summary>
            Shows the Horizontal Controls
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.PageSetupControlVM.Margins">
            <summary>
            Gets or sets the Margin property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.PageSetupControlVM.IsCustomMargin">
            <summary>
            Gets and sets the IsCustomMargin property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.PageSetupControlVM.MaxMargin">
            <summary>
            Gets and sets the Max margin values  property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.PageSetupControlVM.MarginTypes">
            <summary>
            Gets or sets the MarginType property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Control.PageSetupControlVM.SelectedMarginType">
            <summary>
            Gets or sets the SelectedMarginType property.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Control.PixelUtil">
            <summary>
            A helper class for DIP (Device Independent Pixels) conversion and scaling operations.
            </summary>
            
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PixelUtil.MmToPixels(System.Double)">
            <summary>
            Converts millimeters to DIP (Device Independant Pixels).
            </summary>
            <param name="mm">A millimeter value.</param>
            <returns>A DIP value.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PixelUtil.CmToPixels(System.Double)">
            <summary>
            Converts centimeters to DIP (Device Independant Pixels).
            </summary>
            <param name="cm">A centimeter value.</param>
            <returns>A DIP value.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PixelUtil.InToPixels(System.Double)">
            <summary>
            Converts inches to DIP (Device Independant Pixels).
            </summary>
            <param name="inch">An inch value.</param>
            <returns>A DIP value.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PixelUtil.PtToPixels(System.Double)">
            <summary>
            Converts font points to DIP (Device Independant Pixels).
            </summary>
            <param name="pt">A font point value.</param>
            <returns>A DIP value.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PixelUtil.PixelsToIn(System.Double)">
            <summary>
            Converts DIP (Device Independant Pixels) to inches.
            </summary>
            <param name="dip">A DIP value.</param>
            <returns>A centimeter value.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PixelUtil.PixelsToCm(System.Double)">
            <summary>
            Converts DIP (Device Independant Pixels) to centimeters.
            </summary>
            <param name="dip">A DIP value.</param>
            <returns>A centimeter value.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PixelUtil.PixelsToMm(System.Double)">
            <summary>
            Converts DIP (Device Independant Pixels) to millimeters.
            </summary>
            <param name="dip">A DIP value.</param>
            <returns>A millimeter value.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PixelUtil.PixelsToPt(System.Double)">
            <summary>
            Converts DIP (Device Independant Pixels) to points.
            </summary>
            <param name="dip">A DIP value.</param>
            <returns>A point value.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.PixelUtil.GetSystemDpiFactor">
            <summary>
            Gets the system DPI scale factor (compared to 96 dpi).
            From http://blogs.msdn.com/jaimer/archive/2007/03/07/getting-system-dpi-in-wpf-app.aspx
            Should not be called before the Loaded event (else XamlException mat throw)
            </summary>
            <returns>A System.Windows.Point object containing the X- and Y- scale factor.</returns>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.RulerControl.VMProperty">
            <summary>
            ViewModel 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.RulerControl.LayoutViewInternalProperty">
            <summary>
            View - Associated view
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.RulerControl.IsVerticalProperty">
            <summary>
            IsVertical - Draw vertical
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.RulerControl.IsOnRightProperty">
            <summary>
            IsOnRight - Marker show rulers marked by this for right to left languages.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.RulerControl.ZoomProperty">
            <summary>
            Zoom - Current scale in double format
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.RulerControl.PageMinProperty">
            <summary>
            PageMin - Leftmost value of ruler
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.RulerControl.PageMaxProperty">
            <summary>
            PageMax - Right most value of ruler
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.RulerControl.SmallestRulerDivisionProperty">
            <summary>
            SmallestRulerDivision - Smallest allowable ruler division
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.RulerControl.CursorPixelsProperty">
            <summary>
            CursorPixels - Location of the cursor in pixel space
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.RulerControl.UnitsProperty">
            <summary>
            Units - Units in PECode format
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.RulerControl.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Participates in rendering operations.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.RulerControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Control.StyleGalleryControl">
            <summary>
            Interaction logic for MapControl.xaml
            </summary>
            <summary>
            StyleGalleryControl
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.StyleGalleryControl.ViewModelProperty">
            <summary>
            ViewModel 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.Control.StyleGalleryControl.StyleItemTypeProperty">
            <summary>
            StyleItemType
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Control.StyleGalleryControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Dialogs.CoordinateSystemView">
            <summary>
            Interaction logic for CoordinateSystemView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Dialogs.CoordinateSystemView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Dialogs.CustomLabelSchemeDialogView">
            <summary>
            Interaction logic for CustomLabelSchemeWindow.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Dialogs.CustomLabelSchemeDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Dialogs.DeleteMapFrameDialogView">
            <summary>
            Interaction logic for DeleteMapFrameDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Dialogs.DeleteMapFrameDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Dialogs.ExtentDialogView">
            <summary>
            Interaction logic for ExtentDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Dialogs.ExtentDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Dialogs.FieldsPickerDialogView">
            <summary>
            Interaction logic for FieldsPickerDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Dialogs.FieldsPickerDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Dialogs.GridToFeaturesDialogView">
            <summary>
            Interaction logic for GridToFeaturesDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Dialogs.GridToFeaturesDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Dialogs.NewGuideDialogView">
            <summary>
            Interaction logic for NewGuideDialog.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Dialogs.NewGuideDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Dialogs.PasteSpecialDialogView">
            <summary>
            Interaction logic for PasteSpecialDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Dialogs.PasteSpecialDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Dialogs.ReplaceMapFrameDialogView">
            <summary>
            Interaction logic for ReplaceMapFrameDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Dialogs.ReplaceMapFrameDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Dialogs.StringPickerDialogView">
            <summary>
            Interaction logic for StringPickerDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Dialogs.StringPickerDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Dialogs.TableTextDialogView">
            <summary>
            Interaction logic for TableTextDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Dialogs.TableTextDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Dialogs.TextDialogView">
            <summary>
            Interaction logic for TextStringDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Dialogs.TextDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.IInternalLayoutsModule">
            <summary>
            This interface is not for public use and is used internally by the system to implement support for other esri modules.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.LatLongControlSettings">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.LatLongControlSettings.ShowCardinalDirection">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.LatLongControlSettings.DisplayType">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.LayoutViewInternal.Layout">
            <summary>
            Reference to the Layout model
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.LayoutViewInternal._mapFrameActivated">
            <summary>
            Check if there's an activated map frame.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Layouts.LayoutViewInternal._defaultMapFrame">
            <summary>
            Default MapFrame
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.LayoutViewInternal.DefaultMapFrameExists">
            <summary>
            Check if there's a default map frame.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.LayoutExtensions">
            <summary>
            Give the project an intuitive way to access project items in specific containers without having to know how to get a container
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.GetResourceString(System.String,System.String[])">
            <summary>
              Returns the formatted resource string.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.Exception_ErrorFMT">
            <summary>
              Returns the formatted resource string.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ProjectErrorOnRemoveLayoutFMT">
            <summary>
            Used when we fail to remove a layout from the current project
            0 - The name of layout being removed
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.MSDFile_Desc">
            <summary>
            MSD file description for the file filters of the import Layout window
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.MXDFile_Desc">
            <summary>
            MXD file description for the file filters of the import Layout window
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ArcGISFiles_Desc">
            <summary>
            ArcGIS files description for the file filters of the import Layout window
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.Layout_ErrorLoad">
            <summary>
            Used when loading the layout
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ProjectErrorOnImportLayoutFMT">
            <summary>
            Used when we fail to import a layout document into the current project
            0 - The layout file being imported
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ISO">
            <summary>
            Metric measurement system
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ProjectRemoveLayoutConf">
            <summary>
            Confirmation before the layout is removed from the TOC.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ProjectDeleteLayoutConf">
            <summary>
            Confirmation before the layout is deleted from the catalog.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ExportDescriptionBmp">
            <summary>
            Description for the BMP file type displayed in the save as type combo box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ExportDescriptionEmf">
            <summary>
            Description for the EMF file type displayed in the save as type combo box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ExportDescriptionEps">
            <summary>
            Description for the EPS file type displayed in the save as type combo box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ExportDescriptionGif">
            <summary>
            Description for the GIF file type displayed in the save as type combo box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ExportDescriptionJpg">
            <summary>
            Description for the JPG file type displayed in the save as type combo box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ExportDescriptionPdf">
            <summary>
            Description for the PDF file type displayed in the save as type combo box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ExportDescriptionPng">
            <summary>
            Description for the PNG file type displayed in the save as type combo box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ExportDescriptionSvg">
            <summary>
            Description for the SVG file type displayed in the save as type combo box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ExportDescriptionTga">
            <summary>
            Description for the TGA file type displayed in the save as type combo box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ExportDescriptionTif">
            <summary>
            Description for the TIFF file type displayed in the save as type combo box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ExportDescriptionAix">
            <summary>
            Description for the AIX file type displayed in the save as type combo box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.TestPageDescription">
            <summary>
            Used to create a test PageDescriptor representing an aribirary test page.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.TestPageID">
            <summary>
            Used to create a test PageDescriptor representing an aribirary test page.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.SelectFromPrinter">
            <summary>
            Select a page from printer.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.PopulatingPrinterProperties">
            <summary>
            Used to notify that the properties of the printer are being populated.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.PageDescription">
            <summary>
            Format string for page descriptions ("420 mm x 500 mm")
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.DeleteMapWarning">
            <summary>
            Warning that appears when a user attempts to delete a map that's being used on a layout.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.Warning">
            <summary>
            MessageBox caption used by DeleteMapWarning
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.SymbolInches">
            <summary>
            Symbol for inches.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.OperationMoveElements">
            <summary>
            Move elements
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ElementText">
            <summary>
            The default text for a text element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.AlignToZero">
            <summary>
            Align to zero.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.LoadingMapViews">
            <summary>
            Used in the layout ribbon, by the zoom to map view gallery.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ZoomToMapViewDisabled">
            <summary>
            Used in the layout ribbon, when zoom to map view is disabled.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.GalleryBackgrounds">
            <summary>
            Style gallery search string
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.GalleryBorders">
            <summary>
            Style gallery search string
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.GalleryShadows">
            <summary>
            Style gallery search string
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.SizeOptions">
            <summary>
            `
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.FieldSum">
            <summary>
            F
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.ExportDescriptionSvgz">
            <summary>
            Description for the SVGZ file type displayed in the save as type combo box.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.PrinterFileFilter">
            <summary>
            Do not translate *.prn
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.PageSizeFormatInches">
            <summary>
            PageWidth SymbolInches x PageHeight SymbolInches
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Properties.Resources.PageSizeFormat">
            <summary>
            PageWidth units x PageHeight units
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.PropertyPages.ColorManagementView">
            <summary>
            Interaction logic for ColorManagementView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.PropertyPages.ColorManagementView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.PropertyPages.GeneralLayoutPropertiesPage">
            <summary>
            Interaction logic for GeneralLayoutPropertiesPage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.PropertyPages.GeneralLayoutPropertiesPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.PropertyPages.LayoutBackstagePageView">
            <summary>
            Interaction logic for UserControl1.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.PropertyPages.LayoutBackstagePageView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.PropertyPages.LayoutOptionsView">
            <summary>
            Interaction logic for LayoutOptionsView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.PropertyPages.LayoutOptionsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.PropertyPages.MapSeriesPage">
            <summary>
            Interaction logic for SeriesView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.PropertyPages.MapSeriesPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.PropertyPages.PageQueryStandaloneTableView">
            <summary>
            Interaction logic for PageQueryStandaloneTableView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.PropertyPages.PageQueryStandaloneTableView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.PropertyPages.PageQueryView">
            <summary>
            Interaction logic for PageQueryView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.PropertyPages.PageQueryView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.PropertyPages.PageSetupPage">
            <summary>
            Interaction logic for PageSetupPage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.PropertyPages.PageSetupPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.PropertyPages.PrinterSettingsDialogView">
            <summary>
            Interaction logic for PrinterSettingsDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.PropertyPages.PrinterSettingsDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.PropertyPages.BookmarkSeriesView">
            <summary>
            BookmarkSeriesView
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.PropertyPages.BookmarkSeriesView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.PropertyPages.SpatialSeriesView">
            <summary>
            SpatialSeriesView
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.PropertyPages.SpatialSeriesView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.PropertyPages.TextAndGraphicsBackStageView">
            <summary>
            Interaction logic for UserControl1.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.PropertyPages.TextAndGraphicsBackStageView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Aviation.LocalResources.AviationRes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Aviation.LocalResources.AviationRes.GetResourceString(System.String,System.String[])">
            <summary>
              Returns the formatted resource string.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Aviation.LocalResources.AviationRes.CenterlineProtrudingTerrain">
            <summary>
              Returns the formatted resource string.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Topographic.LocalResources.TopographicRes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Topographic.LocalResources.TopographicRes.GetResourceString(System.String,System.String[])">
            <summary>
              Returns the formatted resource string.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Layouts.Topographic.LocalResources.TopographicRes.DeclinationDate">
            <summary>
              Returns the formatted resource string.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Ribbon.EditVerticesToolbarButtonBase">
            Sub-buttons of the Edit Vertices tool.   These populate the mini-toolbar.
            
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Ribbon.FinishSketchButton">
            Command buttons used with vertex editing
            
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Ribbon.SizeAndPositionControl">
            <summary>
            Interaction logic for SizeAndPositionControl.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Ribbon.SizeAndPositionControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.Ribbon.TransparencySliderView">
            <summary>
            Interaction logic for TransparencySliderView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.Ribbon.TransparencySliderView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.TopoNorthArrow.GetStyleAsync">
            <exclude> </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Layouts.TopoNorthArrow.GetStyleType">
            <exclude> </exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.DynamicTextUpdater">
            <summary>
            Logic to refresh dynamic text on layout window
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.LegendUpdater">
            <summary>
            Logic to refresh charts
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.ViewUpdater">
            <summary>
            Forward generic element events to Layout
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.BookmarksUpdater">
            <summary>
            Forward generic element events to Layout
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Layouts.ElementSelectionUpdater">
            <summary>
            Forward generic element events to Layout
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportDescriptionViewRes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportDescriptionViewRes.GetResourceString(System.String,System.String[])">
            <summary>
              Returns the formatted resource string.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportDescriptionViewRes.CreditsHeader">
            <summary>
              Returns the formatted resource string.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.GetResourceString(System.String,System.String[])">
            <summary>
              Returns the formatted resource string.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.AlternateBackgroundColorCheckBoxLabel">
            <summary>
              Returns the formatted resource string.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CategoryDetails">
            <summary>
            The TOCcategory for detail elements.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CategoryGroupFooter">
            <summary>
            The TOCcategory for group footers elements.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CategoryGroupHeader">
            <summary>
            The TOCcategory for group header elements.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CategoryPageFooter">
            <summary>
            The TOCcategory for page footer elements.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CategoryPageHeader">
            <summary>
            The TOCcategory for page header elements.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CategoryReport">
            <summary>
            The TOCcategory for report section elements.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CategoryReportFooter">
            <summary>
            The TOCcategory for report footer elements.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CategoryReportHeader">
            <summary>
            The TOCcategory for report header elements.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CopyingReport">
            <summary>
            Message displayed in a progressor window, while a areport is being copied.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CopyingReportErrorFMT">
            <summary>
            Used to display a message box, if we fail to copy a report.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CreatingReport">
            <summary>
            Message displayed in a progressor window, while a new report is being created.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.DataReports">
            <summary>
            The data type report. Used to group reports in the new report gallery.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ExportProgressFmt">
            <summary>
            Status message displayed, while exporting a report.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.FormatNameFmt">
            <summary>
            String to generate the Format name for elements (ex, Format Details)
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.MapMemberReportNameFMT">
            <summary>
            The default name for a layer or standalone table report.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.NoElementSelected">
            <summary>
            Message displayed on the Element dock pane, when not report element is selected.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.OperationRenameReport">
            <summary>
            Title for the rename operation. This is displayed in the undo stack.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.OperationsCategoryReport">
            <summary>
            The category for report operations. This is displayed in the undo stack.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.PrintError">
            <summary>
            Message displayed, when we fail to print a report.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.PrintProgress">
            <summary>
            Message displayed when a report is being printed.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.RemoveReportErrorFMT">
            <summary>
            Used to display a message box, if we fail to remove a report from the project.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.RemovingReport">
            <summary>
            Message displayed in a progressor window, while a new report is being removed.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.RenameErrorDuplicateName">
            <summary>
            Used by the exception thrown, when a duplicate name is applied to a report project item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.RenameReportErrorFMT">
            <summary>
            Used to display a message box, if we fail to rename a report.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.RenamingReport">
            <summary>
            Message displayed in a progressor window, while a new report is being renamed.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.Report">
            <summary>
            The default name of a report project item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ReportDetails">
            <summary>
            Title for the details report section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ReportFooter">
            <summary>
            Title for the report footer report section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ReportGroupFooter">
            <summary>
            Title for the group footer report section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ReportGroupHeader">
            <summary>
            Title for the group header report section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ReportHeader">
            <summary>
            Title for the report heade report section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ReportPageFooter">
            <summary>
            Title for the page footer report section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ReportPageHeader">
            <summary>
            Title for the page header report section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ReportSection">
            <summary>
            Title for the report section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ReportTextNumberFormat">
            <summary>
            Label for the number format in the Report dynamic text dialog.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ReportTextNumberFormatPreview">
            <summary>
            The tooltip header for the number format preview text box
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CopyingReports">
            <summary>
            Message displayed in a progressor window, while multiple reports are being copied.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CopyingReportsErrorFmt">
            <summary>
            Displayed when we fail to copy reports
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.CopyingReportStatusFmt">
            <summary>
            Status displayed when copying reports.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ReportProjectItemDisplayType">
            <summary>
            Report project item DisplayType
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ReportRelateSection">
            <summary>
            Title for the related report section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ExportError">
            <summary>
            Message displayed, when we fail to export a report.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.LocalResources.ReportRes.ExportErrorFmt">
            <summary>
            Message format to display the export error message at the bottom of the Export Pane.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogView">
            <summary>
            Interaction logic for ReportGroupFieldDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogViewModel.Title">
            <summary>
            The title for the control
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogViewModel.Caption">
            <summary>
            The title for the control
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogViewModel.FieldProperties">
            <summary>
            The fields for the report data source.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogViewModel.SortItems">
            <summary>
            The sort directions
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogViewModel.SelectedSortItem">
            <summary>
            Gets or sets the SelectedSortItem property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogViewModel.IsSortAscending">
            <summary>
            Indicates that the selected sort is Ascending.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogViewModel.IsCaseSensitiveSort">
            <summary>
            Indicates that the selected sort is case sensitive.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogViewModel.DialogResult">
            <summary>
            The dialog result
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogViewModel.HasAvailableGroupFields">
            <summary>
            Indicates that the source has group fields to chose from
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogViewModel.IsOkEnabled">
            <summary>
            Property indicating the OK button can be clicked.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogViewModel.OnOk">
            <summary>
            Called when the OK button is clicked.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportGroupFieldDialogViewModel.OnCancel">
            <summary>
            Called when the Cancel button is clicked.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogView">
            <summary>
            Interaction logic for ReportTextDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextProperties">
            <summary>
            The support report text properties
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportDynamicText">
             <summary>
             - type: report
            
              - property: value - Handles field values and expressions
                -         field: field name
            
              - property: count, min, max, mean, sum, stddev, median
                -         field: field name
                
              - property: current-page
              
              - property: total-pages
            
             </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportDynamicText.#ctor(ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextProperties,System.String)">
            <summary>
            Creates a Report Dynamic Text object
            </summary>
            <param name="property">The Property</param>
            <param name="fieldName">The field name</param>
            <exception cref="T:System.ArgumentException">The field name is not valid.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportDynamicText.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates a Report DYnamic Text object from properties
            </summary>
            <param name="props">Dictionary of properties</param>
            <exception cref="T:System.ArgumentException">The properties are not valid for report text.</exception>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportDynamicText.Property">
            <summary>
            The type of Text
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportDynamicText.IsTextFieldProperty">
            <summary>
            Determines if the current property can be used with text fields.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportDynamicText.FieldName">
            <summary>
            The FieldName for the text
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportDynamicText.DynamicText">
            <summary>
            The encoded dynamic text
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportDynamicText.IsValid">
            <summary>
            Gets and sets the IsValid property. It determines if the object is fully initialized.
            
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportDynamicText.CheckForReportText(ArcGIS.Desktop.Reports.Report,System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMElement})">
            <summary>
            Checks elements for dynamic reportText and returns Elementproperties for the found ones.
            </summary>
            <param name="report"></param>
            <param name="cimElements"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportDynamicText.GetReportExpressionFields(ArcGIS.Desktop.Reports.Report,ArcGIS.Core.CIM.CIMElement)">
            <summary>
            Returns CIMReportElementFieldProperties for each field in an arcade expression.
            </summary>
            <param name="report"></param>
            <param name="cimElement"></param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Dialogs.FieldFormatInfo">
            <summary>
            Class to hold field information
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel">
            <summary>
            View Model for the ReportText dialog.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.IsStatistic">
            <summary>
            Indicates we are editing statistics
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.IsCountStat">
            <summary>
            Indicates we are editing a count statistic
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.IsPageValue">
            <summary>
            Gets and sets the IsPageValue property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.IsNumericField">
            <summary>
            Indicates that the selected field is numeric
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.IsDateField">
            <summary>
            Indicates that the selected field is a date.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.IsDynamicPicture">
            <summary>
            Indicates that we are editing a dynamic picture
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.ShowNumberFormats">
            <summary>
            Shows the number control labels
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.ShowNumericFormats">
            <summary>
            Shows the numeric format combo.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.ShowDateFormat">
            <summary>
            Shows the date format combo.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.Title">
            <summary>
            The title for the control
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.Caption">
            <summary>
            The title for the control
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.Types">
            <summary>
            The type of items
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.SelectedType">
            <summary>
            Gets or sets the SelectedType property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.Token">
            <summary>
            The dynamic text token - xml tag
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.FieldProperties">
            <summary>
            The fields for the report data source.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.NumberProperties">
            <summary>
            Gets and sets NumberProperties property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.DateNumberProperties">
            <summary>
            Gets and sets DateNumberProperties property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.DialogResult">
            <summary>
            The dialog result
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.IsValid">
            <summary>
            Indicates that the text is valid
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportTextDialogViewModel.IsOkEnabled">
            <summary>
            Property indicating the OK button can be clicked.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportUpdateRelateDialogView">
            <summary>
            Interaction logic for ReportUpdateRelateDialogView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportUpdateRelateDialogView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportUpdateRelateDialogViewModel.RelateList">
            <summary>
            The relates
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportUpdateRelateDialogViewModel.SelectedRelate">
            <summary>
            Gets or sets the SelectedRelate property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportUpdateRelateDialogViewModel.DialogResult">
            <summary>
            The dialog result
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportUpdateRelateDialogViewModel.IsOkEnabled">
            <summary>
            Property indicating the OK button can be clicked.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportUpdateRelateDialogViewModel.OnOk">
            <summary>
            Called when the OK button is clicked.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Dialogs.ReportUpdateRelateDialogViewModel.OnCancel">
            <summary>
            Called when the Cancel button is clicked.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ReportElementProperties">
            <summary>
            Contains report related properties for any element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportElementProperties.Element">
            <summary>
            The Element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportElementProperties.ReportSection">
            <summary>
            Gets and sets the ReportSection property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportElementProperties.ParentSection">
            <summary>
            Gets and sets the ParentSection of the element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportElementProperties.FieldProperties">
            <summary>
            Gets and sets the FieldProperties property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportProjectItemContainer.CreateItem(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new report project item and adds it to the container.
            </summary>
            <param name="name">Name for the report.</param>
            <param name="path">The path to the report.</param>
            <param name="containerType">The container for the report.</param>
            <param name="data">Additional data for the report.</param>
            <returns>The created report project item.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportProjectItemContainer.Current">
            <summary>
            The current active reports container.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportProjectItemContainer.FindProjectItemByReport(ArcGIS.Desktop.Reports.Report)">
            <summary>
            Finds a report item by report.
            </summary>
            <param name="report">The report to search for.</param>
            <returns>The found report item or null.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportProjectItemContainer.FindProjectItemByName(System.String)">
            <summary>
            Finds a report item by name.
            </summary>
            <param name="name">Name of the report item.</param>
            <returns>The found report item or null.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportProjectItemContainer.FindProjectItemByPath(System.String)">
            <summary>
            Finds a report item by name.
            </summary>
            <param name="uri">Uri of the report item.</param>
            <returns>The found report item or null.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportProjectItemContainer.CreateReportItem(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new report project item and adds it to the container.
            </summary>
            <param name="name">Name for the report.</param>
            <param name="path">The path to the report.</param>
            <param name="containerType">The container for the report.</param>
            <param name="data">Additional data for the report.</param>
            <returns>The created report project item.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportColorManagementPropPage">
            <summary>
            Interaction logic for ReportColorManagementPropPage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportColorManagementPropPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportDescriptionView">
            <summary>
            Interaction logic for ReportDescriptionView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportDescriptionView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportGeneralPropPage">
            <summary>
            Interaction logic for ReportGeneralPropPage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportGeneralPropPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportGroupSortPropPage">
            <summary>
            Interaction logic for ReportGroupSortPropPage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportGroupSortPropPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportPageSetupPropPage">
            <summary>
            Interaction logic for ReportPageSetupPropPage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportPageSetupPropPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportSourcePropPage">
            <summary>
            Interaction logic for ReportSourcePropPage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportSourcePropPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportSourcePropPageViewModel.GetNewSourceItem">
            <summary>
            Displays the browse dialog and get a new source
            </summary>
            <returns>New Source information</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportSourcePropPageViewModel.GetSourceItemInfo(ArcGIS.Desktop.Internal.Core.BrowseEnvironment)">
            <summary>
            Gets the map member or data connection for the browse environment result.
            </summary>
            <param name="browseEnvironment">A browse environment containing the result from the browse dialog</param>
            <returns>Tuple with the map member or data connections</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.PropertyPages.ReportSourcePropPageViewModel.SetNewDataSource(System.Tuple{ArcGIS.Desktop.Mapping.MapMember,ArcGIS.Core.CIM.CIMDataConnection})">
            <summary>
            Validates and set the new data source
            </summary>
            <param name="sourceInfo"></param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ReportExtensions">
            <summary>
            Class to extend existing external objects.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.GetReportPane(ArcGIS.Desktop.Framework.PaneCollection,System.String)">
            <summary>
            Get the open report pane for a given report path.
            </summary>
            <param name="panes">The PaneCollection that is being extended.</param>
            <param name="reportUri">The uri of the report to find.</param>
            <returns>The found pane or null.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.GetReportPanes(ArcGIS.Desktop.Framework.PaneCollection,System.String)">
            <summary>
            Get all the open report panes for a given report path.
            </summary>
            <param name="panes">The PaneCollection that is being extended.</param>
            <param name="reportUri">The uri of the report to find.</param>
            <returns>The list of open reports. If reportUri is not provided, returns list of all report panes.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.IsReportItem(ESRI.ArcGIS.ItemIndex.ItemInfoValue)">
            <summary>
            Checks to see if the ItemInfoValue has the report type Id.
            </summary>
            <param name="iiv">The ItemInfoValuebeing extended.</param>
            <returns>True - it's a report item.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.IsReportItem(ArcGIS.Desktop.Core.Item)">
            <summary>
            Checks to see if the Item is a report item
            </summary>
            <param name="item">The item to check.</param>
            <returns>True, it's Report item.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.GetDatConnection(ArcGIS.Desktop.Core.Item)">
            <summary>
            Gets the dataconnection for an items. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="item"></param>
            <returns>The CIMDataConnection</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.GetDatConnectionAsync(ArcGIS.Desktop.Core.Item)">
            <summary>
            Gets the dataconnection for an items.
            </summary>
            <param name="item"></param>
            <returns>Awaitable task of the CIMDataConnection</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.FindReport(ArcGIS.Desktop.Layouts.Layout)">
            <summary>
            Finds the report for a layout.
            </summary>
            <param name="layout">The layout to search for.</param>
            <returns>The report or null.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.QueryElementBounds(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Gets the bounds of an element. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="element">element</param>
            <returns>The bounding envelope</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.QueryElementBoundsAsync(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Gets the bounds of an element.
            </summary>
            <param name="element">element</param>
            <returns>Task of the bounding envelope</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.IsGroupElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Determines if the element is a Report header or footer.
            </summary>
            <param name="element">The element to extend</param>
            <returns>Is not null and a report header or footer element.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.IsGroupElement(ArcGIS.Desktop.Layouts.Element,System.String)">
            <summary>
            Determines if the element is a Report header or footer for field.
            </summary>
            <param name="element">The element to extend</param>
            <param name="groupFieldName">The field name</param>
            <returns>Is not null and a report header or footer element.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.GetGroupFieldName(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            The the group field name if the element is a group header or footer.
            </summary>
            <param name="element">The element to extend</param>
            <returns>The group field name or null</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.IsDetailsElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Determines if the element section is the details section.
            </summary>
            <param name="element">The element to extend</param>
            <returns>Is not null and a report details element.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.IsRelatedReportElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Determines if the element section is a related report section.
            </summary>
            <param name="element">The element to extend</param>
            <returns>Is not null and a related report element.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.IsSupplementalPageSectionElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Determines if the element section is a supplemental page report section.
            </summary>
            <param name="element">The element to extend</param>
            <returns>Is not null and a page section report element.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.IsTopReportSectionElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Determines if the element section is a main report section.
            </summary>
            <param name="element">The element to extend</param>
            <returns>Is not null and a report section or supplemental page element.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.Clone(ServiceContracts.Placement)">
            <summary>
            Clones the values in a Placement structure.
            </summary>
            <param name="placement">Placement to clone.</param>
            <returns>The new Placement.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.FindReportSection(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Gets the parent report section for an element.
            </summary>
            <param name="element">The element to get the section for.</param>
            <returns>ReportSectionElement element.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.GetSafeValue``2(System.Collections.Generic.Dictionary{``0,``1},``0)">
            <summary>
            Gets the value for a given key from a dictionary
            </summary>
            <typeparam name="K">The key type</typeparam>
            <typeparam name="V">The value type</typeparam>
            <param name="props">The dictionary</param>
            <param name="key">The key to search for</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.IsReportStatistic(ArcGIS.Core.CIM.FieldStatisticsFlag)">
            <summary>
            Determines of the value is a supported statistic
            </summary>
            <param name="stat">The enum value</param>
            <returns>It is supported.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportExtensions.IsReportSource(ArcGIS.Desktop.Mapping.MapMember)">
            <summary>
            Checks to see if the map member data can be use in reports.
            </summary>
            <param name="mapMember">The map member to check</param>
            <returns>True - Supported</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.IReportHook">
            <summary>
            Interface for reports to add functionality.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ReportHook">
            <summary>
            Class handles element state property requests. This used to maintain selected Element state.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportHook.Current">
            <summary>
            The active instance of the report hook.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportHook.ActivateHookOnLayout">
            <summary>
            Activates the report hook on the layout module.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportHook.ArcGIS#Desktop#Internal#Reports#IReportHook#HasElementDockPaneSelection">
            <summary>
            Checks to see if the selected element should be displayed in the layout element dock-pane.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ReportLayoutState">
            <summary>
            Class used to hold layout state while a report pane is active.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportLayoutState.QueryFromLayout">
            <summary>
            Loads the current state from the layout objects.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportLayoutState.ApplyToLayout">
            <summary>
            Applies the current state to the layout objects.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.RestoreReportInfo">
            <summary>
            Used to hold the state of the report. Used to restore the report state in undo operations.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.RestoreReportInfo.#ctor(ArcGIS.Desktop.Reports.Report,System.String,System.Boolean)">
            <summary>
            Constructs the RestoreReportInfo object.
            </summary>
            <param name="report"></param>
            <param name="reportSectionName"></param>
            <param name="heightChanged"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.RestoreReportInfo.Restore">
            <summary>
            Applies the current state to the native tier.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportFieldChanges.ReportSectionName">
            <summary>
            Gets and sets ReportSectionName property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportFieldChanges.ReportFieldsXml">
            <summary>
            Gets and sets ReportFieldsXml  property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportFieldChanges.SectionNames">
            <summary>
            Gets and sets SectionNames property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportFieldChanges.SectionFieldPropertiesXml">
            <summary>
            Gets and sets SectionFieldPropertiesXml property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportFieldChanges.HasChanges">
            <summary>
            Gets and sets HasChanges property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportFieldChanges.AddReportSectionChange(System.String,System.String)">
            <summary>
            Sets the changes to the main report section.
            </summary>
            <param name="reportSectionName">Main Report section name.</param>
            <param name="reportFieldsXml">The xml of the fields for the report section.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportFieldChanges.AddSectionChange(System.String,System.String)">
            <summary>
            Adds a section change to the collections
            </summary>
            <param name="sectionName">The name of the section.</param>
            <param name="sectionFieldPropertiesXml">The field properties for the section.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportFieldChanges.ApplyChanges(System.Int32,System.String)">
            <summary>
            Applies the current changes to native tier.  This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="projectID">The project id</param>
            <param name="reportUri">The path to the report</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportFieldChanges.ApplyChangesAsync(System.Int32,System.String)">
            <summary>
            Applies the current changes to native tier.
            </summary>
            <param name="projectID">The project id</param>
            <param name="reportUri">The path to the report</param>
            <returns>Task that can waited on.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ElementPlacementChange">
            <summary>
            Class represents placement change information.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Reports.ElementPlacementChange.ElementName">
            <summary>
            The name of the element
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Reports.ElementPlacementChange.OldPlacement">
            <summary>
            The old placement
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Reports.ElementPlacementChange.NewPlacement">
            <summary>
            The new placement
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ElementPlacementChange.HeightChanged">
            <summary>
            Indicates that the height changed
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ElementPlacementChange.PositionChanged">
            <summary>
            Indicates that the x or y position changed
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ElementPlacementChange.RotationChanged">
            <summary>
            Indicates that the rotation changed
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ElementPlacementChange.SizeChanged">
            <summary>
            Indicates that the height or width changed
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ElementPlacementChange.WidthChanged">
            <summary>
            Indicates that the width changed
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ElementPlacementChange.XChanged">
            <summary>
            Indicates that the x position changed
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ElementPlacementChange.YChanged">
            <summary>
            Indicates that the y position changed
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.CIMDefinitionChange">
            <summary>
            Represent XML change info for a CIMObject
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Reports.CIMDefinitionChange.OldDefinitionXml">
            <summary>
            The old XML definition
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Reports.CIMDefinitionChange.NewDefinitionXml">
            <summary>
            The new XML definition
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ReportSetExternalPageOperation">
            <summary>
            Represents the set external page operation.
            This operation takes the current page and calculates the editing dimensions of the layout.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ReportDataSourceOperation">
            <summary>
            Represents the set report data source operation.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ReportSetRelatedDataSourceOperation">
            <summary>
            Represents the set report data source operation.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ReportPaneView">
            <summary>
            Interaction logic for ReportPaneView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportPaneView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ReportPaneViewModel">
            <summary>
            The report pane
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportPaneViewModel.ViewState">
            <summary>
            The view state of the pane.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportPaneViewModel.ReportViewInternal">
            <summary>
            The Report view.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportPaneViewModel.Report">
            <summary>
            The Report.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportPaneViewModel.UpdateStates">
            <summary>
            Updates the state for the pane.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportPaneViewModel.OnActiveReportSectionChanged(ArcGIS.Desktop.Reports.Report,ArcGIS.Desktop.Reports.ReportSectionElement,ArcGIS.Desktop.Reports.ReportSectionElement)">
            <summary>
            Called when the active report section changes.
            </summary>
            <param name="report"></param>
            <param name="previousSection"></param>
            <param name="activeSection"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportPaneViewModel.Active">
            <summary>
            Gets the active report pane.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Reports.ReportConstants.SectionOverlayElementPrefix">
            <summary>
            The prefix for frame polygons display on top of sections
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.StringConstants">
            <summary>
            Generic strings
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Reports.StringConstants.TrueLowerCase">
            <summary>
            "true" string
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Reports.StringConstants.IsEmpty">
            <summary>
            "IsEmpty" string
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.SetNewElementFieldProperties(ArcGIS.Core.CIM.CIMReportElementFieldProperties,ArcGIS.Desktop.Reports.ReportSectionElement)">
            <summary>
            Sets the temporary Field Information for inserting new Field and Stat elements.
            
            The element name is set to: ReportConstants.NewFieldOrStatElementTempName.
            </summary>
            <param name="fieldProperties">Field information</param>
            <param name="reportSection">Report section for element</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.HasNewElementFieldProperties">
            <summary>
            Determines if the the new element field properties have been set.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.GetNewElementFieldProperties">
            <summary>
            Sets the temporary Field Information for inserting new Field and Stat elements.
            
            The element name is set to: ReportConstants.ReportNewElementTempName.
            </summary>
            <returns>The insert field properties.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.PlacementToBoundsAsync(ServiceContracts.Placement)">
            <summary>
            Converts a Placement to bounds
            </summary>
            <param name="p">Placement to convert</param>
            <returns>Task of Envelope</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.PlacementToBounds(ServiceContracts.Placement)">
            <summary>
            Converts a Placement to bounds
            </summary>
            <param name="p">Placement to convert</param>
            <returns>Envelope</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.PlacementToBoundsSimple(ServiceContracts.Placement)">
            <summary>
            Converts a Placement to bounds, but does not rotate the envelope.
            </summary>
            <param name="p">Placement to convert</param>
            <returns>Envelope</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.RotateEnvelope(ArcGIS.Core.Internal.CIM.EnvelopeN,ServiceContracts.Placement)">
            <summary>
            Rotates an Envelope by the Placement rotation.
            </summary>
            <param name="e"></param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.BlindCatchHandler(System.Exception)">
            <summary>
            Logs the exception blindly caught
            </summary>
            <param name="e">Exception being ignored</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.BlindCatchHandler(System.Action)">
            <summary>
            Executes an Action and ignores exceptions.
            </summary>
            <param name="action">Action to execute</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.BlindCatchNonAwait(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Executes an threaded function, does not wait for it to complete and ignores exceptions thrown.
            </summary>
            <param name="function">Function to execute.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.BlindCatchHandler(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Executes an threaded function and ignores exceptions thrown.
            </summary>
            <param name="function">The function to execute.</param>
            <returns>Task to wait for.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.BlindCatchHandler``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Executes a template threaded function and ignores exceptions thrown.
            </summary>
            <typeparam name="T">Return type</typeparam>
            <param name="function">Function to execute.</param>
            <returns>Task to wait for.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.BlindCatchQTHandler(System.Action)">
            <summary>
            Executes an threaded function and ignores exceptions thrown.
            </summary>
            <param name="action">The action to execute.</param>
            <returns>Task to wait for.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.BlindCatchQTHandler``1(System.Func{``0})">
            <summary>
            Executes a template threaded function and ignores exceptions thrown.
            </summary>
            <typeparam name="T">Return type</typeparam>
            <param name="function">Function to execute.</param>
            <returns>Task to wait for.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.BlindCatchStartOnUIThread(System.Action)">
            <summary>
            Executes a function on the UI thread and ignores the exception thrown.
            </summary>
            <param name="action">The function to execute.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.LogError(System.String,System.Boolean)">
            <summary>
            Writes an Error message to the debug trace and to the Pro event log, when eneabled.
            </summary>
            <param name="message">Message to log. Reports: is pre-pended to the message.</param>
            <param name="flush">Flag indicating that the event should be flushed immediately to disk.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.LogInfo(System.String,System.Boolean)">
            <summary>
            Writes an Information message to the debug trace and to the Pro event log, when eneabled.
            </summary>
            <param name="message">Message to log. Reports: is pre-pended to the message.</param>
            <param name="flush">Flag indicating that the event should be flushed immediately to disk.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.LogWarning(System.String,System.Boolean)">
            <summary>
            Writes a Warning message to the debug trace and to the Pro event log, when eneabled.
            </summary>
            <param name="message">Message to log. Reports: is pre-pended to the message.</param>
            <param name="flush">Flag indicating that the event should be flushed immediately to disk.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.WriteToLog(ArcGIS.Desktop.Framework.Utilities.EventLog.EventType,System.String,System.Boolean)">
            <summary>
            Writes a message to the debug trace and to the Pro event log, when eneabled.
            </summary>
            <param name="type">The type of message to write.</param>
            <param name="message">Message to log. Reports: is pre-pended to the message.</param>
            <param name="flush">Flag indicating that the event should be flushed immediately to disk.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.EnsureNotNaN(System.Double@,System.Double)">
            <summary>
            Ensures the a double value is not NaN.
            </summary>
            <param name="value">Value to verify.</param>
            <param name="defaultIfNaN">Value to set, when the value is null.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.ValidatePageRange(System.String,System.Boolean)">
            <summary>
            Validates a page range string.
            </summary>
            <param name="range">The string to validate.</param>
            <param name="allowEmpty">Allow empty strings.</param>
            <returns>The error message or empty if valid.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.MakeServiceCall(System.Action,System.Boolean)">
            <summary>
            Calls the report service and translates the report exception.
            </summary>
            <param name="serviceCall">Action to call.</param>
            <param name="checkMainThread">Will throw an exception if the method is not call from the main CIM thread.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportUtilities.MakeServiceCall``1(System.Func{``0},System.Boolean)">
            <summary>
            Calls the report service and translates the report exception.
            </summary>
            <typeparam name="T">The return type of the Function.</typeparam>
            <param name="serviceCall">The function to call.</param>
            <param name="checkMainThread">Will throw an exception if the method is not call from the main CIM thread.</param>
            <returns>The value of type T.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportFieldInfo.GroupFields">
            <summary>
            The groups fields for the report source
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportFieldInfo.ReportFields">
            <summary>
            The fields that are supported by reports.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportFieldInfo.InvalidFields">
            <summary>
            The fields that are not supported by reports.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ReportElementClippboardContents">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ReportViewInternal">
            <summary>
            The report view
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportViewInternal.Report">
            <summary>
            The report
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportViewInternal.ReportPane">
            <summary>
            The view's parent pane.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportViewInternal.ReportDocViewSelectedSection">
            <summary>
            The Report document view's selected section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportViewInternal.Active">
            <summary>
            The view for the active report Pane..
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportViewInternal.SelectAllElements">
            <summary>
            Selects all elements in the active Section.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportViewInternal.ZoomToActiveSection">
            <summary>
            Zoom to the active section
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.ReportViewInternal.EnsureInActiveSection(System.String,ArcGIS.Desktop.Internal.DesktopService.INativePropertySet)">
            <summary>
            Makes sure that the sketch is in the active section.
            </summary>
            <param name="geometryXML">The geometry xml.</param>
            <param name="attributes">Sketch properties</param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands">
            <summary>
            Class handles commands for reports
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.OnOpenReportView">
            <summary>
            Handles the DAML binging for opening the view for a report project item.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.OnDeleteReport">
            <summary>
            Handles the DAML binging for deleting a report project item.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.OnOpenReportProperties">
            <summary>
            Handles the DAML binging for displaying the report properties.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.OnInsertGroup">
            <summary>
            Handles the DAML binding for added a new group.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.OnRemoveGroup">
            <summary>
            Handles the DAML binding for removing a group.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.OnRemoveRelatedReport">
            <summary>
            Handles the DAML binding for removing a related report.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.OnExportReport">
            <summary>
            Handles the DAML binding for exporting the active report.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.CanOnExportReport">
            <summary>
            Determines if the report can be exported.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.OnSelectAll">
            <summary>
            Handles the DAML binding for selecting all elements in a section.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.ZoomToActiveSection">
            <summary>
            Zooms the report to the active section
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.ReportProperties">
            <summary>
            Open the report properties of the document
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.ReportSectionProperties">
            <summary>
            Open the report properties of the section
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.ReportPageSetupProperties">
            <summary>
            Open the report properties with Page Setup page active
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.ReportRelateProperties">
            <summary>
            Open the report properties with Page Setup page active
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.ReportSelectPageFromPrinter">
            <summary>
            Opens the printers page dialog and set the active reports page.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.RemoveReportSupplementalPage">
            <summary>
            Handles the DAML binding for removing a supplemental page from a report.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.OpenLayoutPageProperties">
            <summary>
            Handles the DAML binding for opening the properties of the layout from a report layout page.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.CanRemoveReportSection">
            <summary>
            Handles the DAML binding for removing a report section from a report.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.CreateAndOpenReportAsync(System.String,ArcGIS.Core.CIM.CIMReportDataSource,ArcGIS.Core.CIM.CIMPage,ArcGIS.Core.CIM.CIMReportElementFieldProperties[],System.String,System.String)">
            <summary>
            Creates and opens a report.
            </summary>
            <param name="name">The name of the report.</param>
            <param name="reportDataSource">Object defining data source, fields, and definition query for the report.</param>
            <param name="page">The page definition for the report.</param>
            <param name="statProperties">An array CIMReportElementFieldProperties that includes the statatistics that will be used in the footer sections.</param>
            <param name="templatePath">The path to the report template.</param>
            <param name="styling">The name of the report styling.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.CopyReportAsync(System.String)">
            <summary>
            Copies a report.
            </summary>
            <param name="reportUri">Report uri of report to copy.</param>
            <returns>The new report.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.CopyReportItemsAsync(ESRI.ArcGIS.ItemIndex.ItemInfoValue[])">
            <summary>
            Copies the report items to the current project.
            </summary>
            <param name="items">Array of report items to copy.</param>
            <returns>Awaitable task.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.LoadReportModelAsync(System.String,ArcGIS.Desktop.Framework.Threading.Tasks.Progressor)">
            <summary>
            Loads a report model from the native side.
            </summary>
            <param name="reportPath">Uri of the report</param>
            <param name="progressor">Progressor to update.</param>
            <returns>The loaded report</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.RemoveReportAsync(System.String)">
            <summary>
            Closes all panes and removes the report from the native project.
            </summary>
            <param name="reportUri">The uri of the report to remove.</param>
            <returns>Awaitable task.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.SetReportName(ArcGIS.Desktop.Reports.Report,System.String)">
            <summary>
            Sets the name of a report.
            </summary>
            <param name="report">The report to rename.</param>
            <param name="name">The new name for the report.</param>
            <returns>True - Renamed.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportCommands.SetReportNameAsync(ArcGIS.Desktop.Reports.Report,System.String)">
            <summary>
            Sets the name of a report.
            </summary>
            <param name="report">The report to rename.</param>
            <param name="name">The new name for the report.</param>
            <returns>True - Renamed.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextItemExtenstion">
            <summary>
            Represents extensions for the DynamicTextItems.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextItemExtenstion.GetLookupKey(ArcGIS.Desktop.Internal.Layouts.Ribbon.DynamicTextItem)">
            <summary>
            Gets a lookup key to compare with the supported items
            </summary>
            <param name="item">The dynamic item to get the key for.</param>
            <returns>The key to compare with the supported items.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextItemExtenstion.UpdateForReportGallery(ArcGIS.Desktop.Internal.Layouts.Ribbon.DynamicTextItem)">
            <summary>
            Update the text and default expressions for items that say layout
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextGalleryHelper">
            <summary>
            Represents a class used to filter report the report dynamic text gallery
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextGalleryHelper.#ctor(System.Collections.Generic.List{ArcGIS.Desktop.Internal.Layouts.Ribbon.DynamicTextItem})">
            <summary>
            Constructs the ReportDynamicTextGalleryHelper object.
            </summary>
            <param name="items">List of DynamicTextItem items for catalog.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextGalleryHelper.LookupAndAddItem(System.Collections.Generic.List{ArcGIS.Desktop.Internal.Layouts.Ribbon.DynamicTextItem},System.String,System.String)">
            <summary>
            Looks up the desired item, updates it for the report gallery and adds it to the target collection.
            </summary>
            <param name="target">The target list to receive the updated found item.</param>
            <param name="group">The group of the item</param>
            <param name="title">The title of the item/</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextGalleryHelper.CreateLookupKey(System.String,System.String)">
            <summary>
            Create a lookup string for a group and title.
            </summary>
            <param name="group">The name of the group</param>
            <param name="title">The title of the item</param>
            <returns>The combined key</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextItem">
            <summary>
            Represents ReportDynamicTextItem item. Used to provide a sample.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextItem.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Constructs the ReportDynamicTextItem.
            </summary>
            <param name="group"></param>
            <param name="title"></param>
            <param name="tooltip"></param>
            <param name="token"></param>
            <param name="prefix"></param>
            <param name="suffix"></param>
            <param name="hasColumns"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextItem.Sample">
            <summary>
            Gets and sets Sample property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextItem.UpdateTextWithSample">
            <summary>
            If the sample is not empty, updates the current Text with the Sample Text.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextGallery">
            <summary>
            Represents the Dynamic text Items supported by reports.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextGallery.Init">
            <summary>
            This method is called the first time the drop down of the gallery is clicked. 
            It's used to load the parsed and unparsed dynamic text list.
            
            We override here to rearrange and filter the lists.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextGallery.Fill">
            <summary>
            This method is called every time the drop down of the gallery is clicked. 
            It's used to update the current state of some of the items.
            
            This method can be used to further filter the collection, depending on context.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportDynamicTextGallery.AddItems">
            <summary>
            The items have been prepared and are being added to the gallery.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatColor">
            <summary>
            Interaction logic for ReportFormatColor.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatColor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatExclusion">
            <summary>
            Interaction logic for ReportFormatExclusion.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatExclusion.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatExclusionViewModel.IsValidRange(System.String)">
            <summary>
            Check to see that there is no error in the page range.
            </summary>
            <param name="range">The page range</param>
            <returns>True if valid, false otherwise.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatGeneral">
            <summary>
            Interaction logic for ReportFormatGeneral.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatGeneral.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatGeneralViewModel.CoverPage">
            <summary>
            Gets or sets the CoverPage property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatGeneralViewModel.ShowCoverPageCheckbox">
            <summary>
            Gets or sets the ShowCoverPageCheckbo property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatGeneralViewModel.RepeatOnEverypageTip">
            <summary>
            Gets or sets the RepeatOnEverypageTip property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatGeneralViewModel.RepeatOnEverypageTipHeader">
            <summary>
            Gets or sets the RepeatOnEverypageTipHeade property.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatSize">
            <summary>
            Interaction logic for ReportFormatSize.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportFormatSize.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewFieldElementToolBase">
            <summary>
            Tool handles the insertion of a TextField Element
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewFieldElementTool">
            <summary>
            Tool handles the insertion of a TextField Element
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewAvgElementTool">
            <summary>
            Tool handles the insertion of a Average (Mean) Statistic Text Element
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewCountElementTool">
            <summary>
            Tool handles the insertion of a Count Statistic Text Element
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewMaxElementTool">
            <summary>
            Tool handles the insertion of a Max Statistic Text Element
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewMinElementTool">
            <summary>
            Tool handles the insertion of a Min Statistic Text Element
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewStdDevElementTool">
            <summary>
            Tool handles the insertion of a Standard Deviation Statistic Text Element
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewSumElementTool">
            <summary>
            Tool handles the insertion of a Sum Statistic Text Element
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportNewMedianElementTool">
            <summary>
            Tool handles the insertion of a Median Statistic Text Element
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportPageSizeGallery">
            <summary>
            Represents the report page size gallery
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Ribbon.ReportPageOrientationGallery">
            <summary>
            Represents the report page orientation gallery
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.TOC.ReportTOCControlViewModel">
            <summary>
            Implements the report TOC
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.TOC.ReportTOCControlViewModel.ReportView">
            <summary>
            The Report view associated with the TOC
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.TOC.ReportTOCDropHandler">
            <summary>
            Handles the drag and drop behavior in the TOC.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.TOC.ReportTOCElementItemViewModelFactory">
            <summary>
            Class construct TOC report element view models.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.TOC.ReportTOCElementViewModel">
            <summary>
            Class for report elements.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.TOC.ReportTOCElementViewModel.LoadChildrenAsync">
            <summary>
            Called when the TOC group is expanded.
            </summary>
            <returns>A wait-able task.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.TOC.ReportTOCOrderDrawingViewModel">
            <summary>
            The report Drawing order report TOC view.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.TOC.ReportTOCOrderTypeViewModel">
            <summary>
            The order by type report TOC view.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.ReportsWizardData">
            <summary>
            Represents data for report creation.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.ReportsWizardData.ReportTemplate">
            <summary>
            Gets or sets the ReportTemplate property.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardDataPage">
            <summary>
            Interaction logic for ReportsWizardDataPage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardDataPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardDesignPage">
            <summary>
            Interaction logic for ReportsWizardDesignPage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardDesignPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardDesignPageVM.Dispose(System.Boolean)">
            <summary>
            Disposes the current object
            </summary>
            <param name="disposing">True when being called from an IDisposable.Dispose method. False when called from the finalizer and in the GC Finalizer's thread.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardDockPane">
            <summary>
            Interaction logic for TOCDockPane.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardDockPane.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardFieldSortControl">
            <summary>
            Interaction logic for ReportsWizardFieldSortControl.xaml
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardFieldSortControl.ControlDataContext">
            <summary>
            Gets or sets the ControlDataContext property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardFieldSortControl.FieldHeaderContent">
            <summary>
            Gets or sets the FieldHeaderContent property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardFieldSortControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardFieldPropItemVM.Dispose(System.Boolean)">
            <summary>
            Disposes the current object
            </summary>
            <param name="disposing">True when being called from an IDisposable.Dispose method. False when called from the finalizer and in the GC Finalizer's thread.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardFieldSortControlVM.Dispose(System.Boolean)">
            <summary>
            Disposes the current object
            </summary>
            <param name="disposing">True when being called from an IDisposable.Dispose method. False when called from the finalizer and in the GC Finalizer's thread.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardFieldSortControlVM.UpdateSortItemsErrorState">
            <summary>
            Checks to see if duplicate items are used. If so each item's IsError is set.
            </summary>
            <returns>True, if an error is found. False, if no error is found.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardHomePage">
            <summary>
            Interaction logic for ReportsWizardHomePage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardHomePage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardOrganizePage">
            <summary>
            Interaction logic for ReportsWizardOrganizePage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardOrganizePage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Reports.Wizard.ReportsWizardOrganizePageVM.Dispose(System.Boolean)">
            <summary>
            Disposes the current object
            </summary>
            <param name="disposing">True when being called from an IDisposable.Dispose method. False when called from the finalizer and in the GC Finalizer's thread.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Mapping.Controls.SnappingControl.LayoutSnappingTrayView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.Events.LayoutViewEventHint">
            <summary>
            Specifies the type of <see cref="T:ArcGIS.Desktop.Layouts.LayoutView">LayoutView</see> events.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.LayoutViewEventHint.Opened">
            <summary>
            A new <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> pane has been opened.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.LayoutViewEventHint.Activated">
            <summary>
            A <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> pane has been activated.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.LayoutViewEventHint.ExtentChanged">
            <summary>
            A <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see>'s extent has changed.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.LayoutViewEventHint.PauseDrawingChanged">
            <summary>
            A <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> pause drawing changed.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.LayoutViewEventHint.DrawingComplete">
            <summary>
            A <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> finished drawing.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.LayoutViewEventHint.Deactivated">
            <summary>
            A <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> pane has been deactivated.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.LayoutViewEventHint.Closing">
            <summary>
            A <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> pane is closing.  Set Cancel to true to prevent closing.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.LayoutViewEventHint.Closed">
            <summary>
            A <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> pane has been closed.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs">
            <summary>
            Provides data for the <see cref="T:ArcGIS.Desktop.Layouts.Events.LayoutViewEvent">LayoutViewEvent</see>.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs.#ctor(ArcGIS.Desktop.Layouts.LayoutView,ArcGIS.Desktop.Layouts.Events.LayoutViewEventHint,System.Nullable{System.Boolean})">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs.LayoutView">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Layouts.LayoutView">LayoutView</see> that is associated with the event.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs.Hint">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Layouts.Events.LayoutViewEventHint">LayoutViewEventHint type</see> of event.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs.DrawingPaused">
            <summary>
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs.Cancel">
            <summary>
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.Events.LayoutViewEvent">
            <summary>
            Occurs when the <see cref="T:ArcGIS.Desktop.Layouts.LayoutView">LayoutView</see> is initialized, activated or its extent is changed.
            </summary>
            <remarks>
            Reference <see cref="T:ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs">LayoutViewEventArgs</see> to get a list of arguments.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutEvents.cs" region="LayoutViewEvent" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutViewEvent.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutViewEvent.Subscribe(System.Action{ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs},System.Boolean)">
            <summary>
            Subscribe to the LayoutViewEvent.
            </summary>
            <param name="action">The delegate that gets executed when the event is published.</param>
            <param name="keepSubscriberAlive">When <c>false</c> the <see cref="T:ArcGIS.Core.Events.CompositePresentationEvent`1">CompositePresentationEvent</see>
            will maintain a weak delegate reference to the subscriber. Using a weak delegate reference relieves the subscriber from the need to unsubscribe to enable 
            proper garbage collection. The default is <c>false</c>.</param>
            <returns>A <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken </see>that uniquely identifies the added subscription.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutViewEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs})">
            <summary>
            Removes the first subscriber matching the provided delegate from the subscribers' list.
            </summary>
            <param name="action">The delegate used when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutViewEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
            Removes the subscriber matching the <see cref="T:ArcGIS.Core.Events.SubscriptionToken"/>.
            </summary>
            <param name="token">The <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken </see> returned when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutViewEvent.Publish(ArcGIS.Desktop.Layouts.Events.LayoutViewEventArgs)">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.Events.LayoutEvent">
            <summary>
            Occurs when the active <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> is changed.
            </summary>
            <remarks>
            Reference <see cref="T:ArcGIS.Desktop.Layouts.Events.LayoutEventArgs">LayoutEventArgs</see> to get a list of arguments.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutEvents.cs" region="LayoutEvent" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutEvent.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutEvent.Subscribe(System.Action{ArcGIS.Desktop.Layouts.Events.LayoutEventArgs},System.Boolean)">
            <summary>
            Subscribe to the LayoutEvent.
            </summary>
            <param name="action">The delegate that gets executed when the event is published.</param>
            <param name="keepSubscriberAlive">When <c>false</c> the <see cref="T:ArcGIS.Core.Events.CompositePresentationEvent`1">CompositePresentationEvent</see>
            will maintain a weak delegate reference to the subscriber. Using a weak delegate reference relieves the subscriber from the need to unsubscribe to enable 
            proper garbage collection.  The default is <c>false</c>.</param>
            <returns>A <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> that uniquely identifies the added subscription.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Layouts.Events.LayoutEventArgs})">
            <summary>
            Removes the first subscriber matching the provided delegate from the subscribers' list. 
            </summary>
            <param name="action">The delegate used when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
            Removes the subscriber matching the <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see>.
            </summary>
            <param name="token">The <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> returned when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutEvent.Publish(ArcGIS.Desktop.Layouts.Events.LayoutEventArgs)">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.Events.LayoutEventHint">
            <summary>
            Specifies the available <see cref="T:ArcGIS.Desktop.Layouts.Events.LayoutEvent"/> hints
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.LayoutEventHint.PropertyChanged">
            <summary>
            Property changed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.LayoutEventHint.PageChanged">
            <summary>
            Page changed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.LayoutEventHint.MapSeriesRefreshed">
            <summary>
            Map series refreshed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.LayoutEventHint.MapSeriesPageChanged">
            <summary>
            Map series page changed
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.Events.LayoutEventArgs">
            <summary>
            Provides the data for the <see cref="T:ArcGIS.Desktop.Layouts.Events.LayoutEvent">LayoutEvent</see>.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutEventArgs.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.LayoutEventArgs.#ctor(ArcGIS.Desktop.Layouts.Events.LayoutEventHint,ArcGIS.Desktop.Layouts.Layout,ArcGIS.Core.CIM.CIMPage)">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Events.LayoutEventArgs.Layout">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout </see> that was changed.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Events.LayoutEventArgs.Hint">
            <summary>
            Gets the layout event hint for this event
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Events.LayoutEventArgs.OldPage">
            <summary>
            Gets the original layout <see cref="T:ArcGIS.Core.CIM.CIMPage"/>
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.Events.ElementEvent">
            <summary>
            Occurs when an <see cref="T:ArcGIS.Desktop.Layouts.Element">Element</see> style is changed. 
            </summary>
            <remarks>
            This event is specific to changes to an element's style. For listening to general changes to the element's properties, 
            use <see cref="T:ArcGIS.Desktop.Layouts.Events.ElementEvent"> ElementsUpdatedEvent</see> instead.
            Reference <see cref="T:ArcGIS.Desktop.Layouts.Events.ElementEventArgs">ElementEventArgs</see> to get a list of arguments.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutEvents.cs" region="ElementEvent" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.ElementEvent.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.ElementEvent.Subscribe(System.Action{ArcGIS.Desktop.Layouts.Events.ElementEventArgs},System.Boolean)">
            <summary>
            Subscribe to the ElementEvent.
            </summary>
            <param name="action">The delegate that gets executed when the event is published.</param>
            <param name="keepSubscriberAlive">When <c>false</c> the <see cref="T:ArcGIS.Core.Events.CompositePresentationEvent`1">CompositePresentationEvent</see>
            will maintain a weak delegate reference to the subscriber. Using a weak delegate reference relieves the subscriber from the need to unsubscribe to enable 
            proper garbage collection. The default is <c>false</c>.</param>
            <returns>A <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> that uniquely identifies the added subscription.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.ElementEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Layouts.Events.ElementEventArgs})">
            <summary>
            Removes the first subscriber matching the provided delegate from the subscribers' list.
            </summary>
            <param name="action">The delegate used when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.ElementEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
            Removes the subscriber matching the <see cref="T:ArcGIS.Core.Events.SubscriptionToken"/>.
            </summary>
            <param name="token">The <see cref="T:ArcGIS.Core.Events.SubscriptionToken"/> returned when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.ElementEvent.Publish(ArcGIS.Desktop.Layouts.Events.ElementEventArgs)">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.Events.ElementEventHint">
            <summary>
            Specifies the available <see cref="T:ArcGIS.Desktop.Layouts.Events.ElementEvent"/> hints
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.ElementEventHint.ElementAdded">
            <summary>
            Element added
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.ElementEventHint.ElementRemoved">
            <summary>
            Element removed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.ElementEventHint.PropertyChanged">
            <summary>
            Property changed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.ElementEventHint.SelectionChanged">
            <summary>
            Selection changed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.ElementEventHint.StyleChanged">
            <summary>
            Style changed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.ElementEventHint.PlacementChanged">
            <summary>
            Placement changed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.ElementEventHint.MapFrameNavigated">
            <summary>
            Mapframe navigated
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.ElementEventHint.MapFrameActivated">
            <summary>
            Mapframe activated
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Events.ElementEventHint.MapFrameDeactivated">
            <summary>
            Mapframe deactivated
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.Events.ElementEventArgs">
            <summary>
            Provides data for the <see cref="T:ArcGIS.Desktop.Layouts.Events.ElementEvent">ElementEvent</see>.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.ElementEventArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Events.ElementEventArgs.#ctor(ArcGIS.Desktop.Layouts.Events.ElementEventHint,ArcGIS.Desktop.Mapping.IElementContainer)">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Events.ElementEventArgs.Hint">
            <summary>
            Gets the event hint.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Events.ElementEventArgs.Container">
            <summary>
            Gets the element container.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Events.ElementEventArgs.Elements">
            <summary>
            Gets the list of elements that have been updated.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.AttachmentFrame">
            <summary>
            Represents an AttachmentFrame element on a report.
            </summary>
            <remarks>
            There are currently no additional members
            </remarks>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.AttachmentFrame.GetStyleType">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.BookmarkMapSeries">
            <summary>
            Bookmark Map Series is a means to create a series of map pages based
            off of Bookmark features.
            </summary>
            <summary>
            Bookmark Map Series is a means to create a series of map pages based off of Bookmark features.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.BookmarkMapSeries.Bookmarks">
            <summary>
            Gets or Sets the name of the specified page.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.BookmarkMapSeries.ScaleRounding">
            <summary>
            Gets or Sets the specified value to which the scale rounds to.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.BookmarkMapSeries.ExtentOptions">
            <summary>
            Gets or Sets the extent fitting options.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.BookmarkMapSeries.MarginType">
            <summary>
            Gets or Sets tye type of margins.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.BookmarkMapSeries.MarginUnits">
            <summary>
            Gets or Sets the units of the margin.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.BookmarkMapSeries.Margin">
            <summary>
            Gets or Sets the value of the margin.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ChartFrame">
            <summary>
            Represents a ChartFrame element on a page layout.
            </summary>
            <remarks>
            There are currently no additional members but this class can be used to determine the type of 
            <see cref="T:ArcGIS.Desktop.Layouts.MapSurround">MapSurround</see>.
            </remarks> 
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.Element">
            <summary>
            Represents an abstract page layout element.
            </summary>
            <remarks>
            There are many types of elements.  This class exposes members that are common to all layout elements.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Find an element on a layout" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Update an elements transparency" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Clone an element" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Get element selection count" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Set element selection" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Clear the selection in a layout" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Delete an element or elements on a layout" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Element.Name">
            <summary>
            Gets the name of the element.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetName(System.String)">
            <summary>
            Sets the name of the element.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="name"><see cref="T:System.String">String</see></param>
            <remarks>All elements on a layout must have a unique name so they can be easily referenced.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_SetName" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Element.IsVisible">
            <summary>
            Gets the visibility of an element.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean">Boolean</see> 
            </value>
            <remarks>Returns <c>true</c> if an element is checked on in the table of contents.</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetVisible(System.Boolean)">
            <summary>
            Sets the visibility of an element on a page layout. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="isVisible"><see cref="T:System.Boolean">Boolean</see></param>
            <remarks>A value of <c>true</c> displays the element on the page layout.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_SetVisible" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Element.IsLocked">
            <summary>
            Gets the locked state of an element.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean">Boolean</see> 
            </value>
            <remarks>Returns <c>true</c> if an element is checked on in the table of contents.</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetLocked(System.Boolean)">
            <summary>
            Sets the locked state of an element on a page layout. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="isLocked"><see cref="T:System.Boolean">Boolean</see></param>
            <remarks>A value of <c>true</c> displays the element on the page layout.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_SetLocked" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetX">
            <summary>
            Gets the X position of the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns>Returns a <see cref="T:System.Double">Double</see></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetX" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetX(System.Double)">
            <summary>
            Sets the X position of the element. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <remarks>Placement for an element contained in graphics layer requires the
            mapview be active. To change the element X and Y consider <see cref="M:ArcGIS.Desktop.Layouts.Element.SetAnchorPoint(ArcGIS.Core.Geometry.Coordinate2D)"/></remarks>
            <param name="x"><see cref="T:System.Double">Double</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">This element requires its mapview to be active</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetX" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetY">
            <summary>
            Gets the Y position of the element. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <returns>Returns a <see cref="T:System.Double">Double</see></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method  must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetY" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetY(System.Double)">
            <summary>
            Sets the Y position of the element. This method must be called on the MCT.  Use QueuedTask.Run. 
            </summary>
            <param name="y"><see cref="T:System.Double">Double</see></param>
            <remarks>Placement for an element contained in graphics layer requires the
            mapview be active. To change the element X and Y consider <see cref="M:ArcGIS.Desktop.Layouts.Element.SetAnchorPoint(ArcGIS.Core.Geometry.Coordinate2D)"/></remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">This element requires its mapview to be active</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetY" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetWidth">
            <summary>
            Gets the width of the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns>Returns a <see cref="T:System.Double">Double</see></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetWidth" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetWidth(System.Double)">
            <summary>
            Sets the width of the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="width"><see cref="T:System.Double">Double</see></param>
            <remarks>Placement for an element contained in graphics layer requires the
            mapview be active</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">This element requires its mapview to be active</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetWidth" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetHeight">
            <summary>
            Gets the height of the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns>Returns a <see cref="T:System.Double">Double</see></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetHeight" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetHeight(System.Double)">
            <summary>
            Sets the height of the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="height"><see cref="T:System.Double">Double</see></param>
            <remarks>Placement for an element contained in graphics layer requires the
            mapview be active</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">This element requires its mapview to be active</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetHeight" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetAnchor">
            <summary>
            Gets the anchor position of the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns>Returns an <see cref="T:ArcGIS.Core.CIM.Anchor">Anchor</see></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetAnchor" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetAnchor(ArcGIS.Core.CIM.Anchor)">
            <summary>
            Sets the anchor position of the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="anchor"><see cref="T:ArcGIS.Core.CIM.Anchor">Anchor</see></param>
            <remarks>Placement for an element contained in graphics layer requires the
            mapview be active.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">This element requires its mapview to be active</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetAnchor" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetLockedAspectRatio">
            <summary>
            Gets the locked aspect ratio value of the element. If This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns>Returns a <see cref="T:System.Boolean">Boolean</see></returns>
            <remarks>Returns <c>true</c> if an element has maintain aspect ratio enabled.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetLockedAspectRatio" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetLockedAspectRatio(System.Boolean)">
            <summary>
            Sets the locked aspect ratio value of the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="lockedAspectRatio"><see cref="T:System.Boolean">Double</see></param>
            <remarks>When set to <c>true</c>, this means if element width is set, then the element
            height will be automatically adjusted appropriately.  The same is true if height
            were modified, then width would automatically be adjusted.<br/>
            Placement for an element contained in graphics layer requires the mapview be active.
            </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">This element requires its mapview to be active</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetLockedAspectRatio" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetRotation">
            <summary>
            Gets the rotation value for the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <remarks>Rotation is in degrees. A positive rotation is counter-clockwise.
            </remarks>
            <returns>Returns a <see cref="T:System.Double">Double</see></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetRotation" lang="CS"></code>
            </example> 
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetRotation(System.Double)">
            <summary>
            Sets the rotation value for the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="rotation"><see cref="T:System.Double">Double</see></param>
            <remarks>Positive values rotate the element counter-clockwise, negative values
            rotate the element clockwise.<br/>
            Placement for an element contained in graphics layer requires the mapview
            be active.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">This element requires its mapview to be active</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetRotation" lang="CS"></code>
            </example> 
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetAnchorPoint">
            <summary>
            Get the element anchor point location.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <remarks>Refer to <see cref="T:ArcGIS.Core.CIM.Anchor"/> to determine the relative anchor
            <i>position</i> which can be one of 9 possible positions</remarks>
            <returns><see cref="T:ArcGIS.Core.Geometry.Coordinate2D"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetAnchorPoint(ArcGIS.Core.Geometry.Coordinate2D)">
            <summary>
            Sets the element anchor point to the X and Y location specified.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <remarks>Placement for an element contained in graphics layer requires the
            mapview be active.<br/>. Use <see cref="M:ArcGIS.Desktop.Layouts.Element.SetX(System.Double)"/> and <see cref="M:ArcGIS.Desktop.Layouts.Element.SetY(System.Double)"/>
            to change the anchor point X and Y individually. Changing the element anchor point
            location does not change its anchor <i>position</i> relative to its element. Anchor
            position is modified via <see cref="M:ArcGIS.Desktop.Layouts.Element.SetAnchor(ArcGIS.Core.CIM.Anchor)"/>.</remarks>
            <param name="anchorPoint">The new anchor point location</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">This element requires its mapview to be active</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetBounds(System.Boolean)">
            <summary>
            Gets the bounding box for the element.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="rotated">True to retrieve the rotated bounds</param>
            <remarks>Bounds always reflect the element extent in a non-rotated orientation.
            If element rotation is non-zero, use graphicBounds = <b>true</b> to return the
            minimum bounding box enclosing the element in its rotated position</remarks>
            <returns><see cref="T:ArcGIS.Core.Geometry.Envelope"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetCustomProperty(System.String)">
            <summary>
            Gets a Custom Property value for the element. 
            </summary>
            <returns>Returns a <see cref="T:System.string">string</see> based on the key that is provided.</returns>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetCustomProperty" lang="CS"></code>
            </example> 
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Element.CustomProperties">
            <summary>
            Gets the Custom Properties for the element. 
            </summary>
            <returns>Returns a <see cref="T:System.Collections.Generic.IList`1"/> or empty list if there are no
            custom properties</returns>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetCustomProperty" lang="CS"></code>
            </example> 
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetCustomProperty(System.String,System.String)">
            <summary>
            Sets a CustomProperty value for the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="key"><see cref="T:System.string">String</see></param>
            <param name="value"><see cref="T:System.string">String</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <remarks>
            This method was created so developers have a way to uniquely assign a value or multiple values to an element that can not be changed in the UI and
            therefore provides a predictable way to find an element.  Each entry has a key/value pair and you find the value using the 
            <see cref="M:ArcGIS.Desktop.Layouts.Element.GetCustomProperty">GetCustomProperty</see> method.  You can overwrite values simply be reentering the
            same key with a different value.  There are no methods to remove keys.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_SetCustomProperty" lang="CS"></code>
            </example> 
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetCustomProperty(System.String[],System.String[])">
            <summary>
            Sets multiple CustomProperty values for the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="keys"><see cref="T:System.string">String</see></param>
            <param name="values"><see cref="T:System.string">String</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <remarks>
            This method was created so developers have a way to uniquely assign a value or multiple values to an element that can not be changed in the UI and
            therefore provides a predictable way to find an element.  Each entry has a key/value pair and you find the value using the 
            <see cref="M:ArcGIS.Desktop.Layouts.Element.GetCustomProperty">GetCustomProperty</see> method.  You can overwrite values simply be reentering the
            same key with a different value.  There are no methods to remove keys.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_SetCustomProperty" lang="CS"></code>
            </example> 
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetCustomProperties(System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMStringMap})">
            <summary>
            Sets multiple CustomProperty values for the element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="customProperties">The collection of custom properties</param>
            <remarks>
            This method was created so developers have a way to uniquely assign a value or multiple values to an element that can not be changed in the UI and
            therefore provides a predictable way to find an element. You can overwrite values simply be reentering the
            same key with a different value in the input collection.  There are no methods to remove keys.
            </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetDefinition">
            <summary>
            Returns the element's CIM definition.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns><see cref="T:ArcGIS.Core.CIM.CIMElement"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetDefinition" lang="CS"></code>
            </example> 
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetDefinition(ArcGIS.Core.CIM.CIMElement)">
            <summary>
            Applies the changes made to a modified <see cref="T:ArcGIS.Core.CIM.CIMElement">CIMElement</see> back to the element on the page layout. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="cimElement"><see cref="T:ArcGIS.Core.CIM.CIMElement">CIMElement</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_GetSetDefinition" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.Equals(ArcGIS.Desktop.Mapping.IElement)">
            <exclude>
            
            </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.Equals(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Evaluates whether the elements are equal based on <see cref="P:ArcGIS.Desktop.Layouts.Element.Name"/> 
            </summary>
            <param name="other">The other element to be compared</param>
            <returns>True if they are equal</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.ToString">
            <exclude>
            
            </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetTOCPositionAbsolute(ArcGIS.Desktop.Mapping.IElementContainer,System.Boolean)">
            <summary>
            Sets the position of an element either at the top or bottom of the layout TOC or a group element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="targetContainer">Reference to a <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> or a <see cref="T:ArcGIS.Desktop.Layouts.GroupElement">GroupElement</see></param>
            <param name="isTop"><see cref="T:System.Boolean">Boolean</see></param>
            <remarks>If set to <c>true</c>, the element is placed at the top of the layout TOC or the top position in a group element.  Elements can be easily moved into or out of groups.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_SetTOCPositionAbsolute" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetTOCPositionRelative(ArcGIS.Desktop.Mapping.IElement,System.Boolean)">
            <summary>
            Sets the position of an element either above or below a reference element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="targetElement"> An existing IElement in the layout TOC. </param>
            <param name="isAbove">Set to true to place the target above the reference element</param>
            <remarks>The reference element can either be at the root level of the layout TOC or an element
            in a group element. Elements can be easily moved into or out of groups.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_SetTOCPositionRelative" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetTOCPositionRelative(ArcGIS.Desktop.Layouts.Element,System.Boolean)">
            <summary>
            Sets the position of an element either above or below a reference element. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="targetElement"> An existing Element in the layout TOC. </param>
            <param name="isAbove">Set to true to place the target above the reference element</param>
            <remarks>The reference element can either be at the root level of the layout TOC or an element
            in a group element. Elements can be easily moved into or out of groups.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_SetTOCPositionRelative" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Element.IsExpandedInTOC">
            <summary>
            Gets or sets if a group element is expanded in the contents pane.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean">Boolean</see> 
            </value>
            <remarks>Returns <c>true</c> if an element is expanded on in the table of contents.</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.ConvertToGraphics">
            <summary>
            Convert the element to graphics.  This method must be called on the MCT. Use QueuedTask.Run.  
            </summary>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <remarks>If the element cannot be converted then null is returned. Refer to <see cref="P:ArcGIS.Desktop.Layouts.Element.CanConvertToGraphics"/><br/>.
            The element is removed from the layout and the new graphic elements are added in its place.</remarks>
            <returns>
            The list result will contain just one, selected <see cref="T:ArcGIS.Desktop.Layouts.GroupElement">GroupElement</see>
            that contains all the individual element within it.
            </returns>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Element_ConvertToGraphics" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Element.CanConvertToGraphics">
            <summary>
            Gets whether the given element can be converted to graphics
            </summary>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Layouts.Element.ConvertToGraphics"/></remarks>
            <returns>True if the element can be converted otherwise false</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetParent(System.Boolean)">
            <summary>
            Gets the parent of this element.
            </summary>
            <param name="topMost">If true then the top most parent or 'container' is returned</param>
            <remarks>Parents can be one of:
            <see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/><br/>
            <see cref="T:ArcGIS.Desktop.Layouts.Layout"/><br/>
            <see cref="T:ArcGIS.Desktop.Mapping.GraphicsLayer"/><br/>
            </remarks>
            <returns><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer"></see></returns>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Element.ZOrder">
            <summary>
            Gets the Z order of the element relative to its parent
            </summary>
            <remarks>A z-order of 0 is equivalent to the bottom. A z-order equal to
            the number of child elements (minus 1) is equivalent to the top (relative
            to its parent.)</remarks>
            <returns>O based Z order index</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetGeometry">
            <summary>
            Returns a <see cref="T:ArcGIS.Core.Geometry.Geometry">Geometry</see> which is a CIM representation of the GraphicElement shape.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns><see cref="T:ArcGIS.Core.Geometry.Geometry"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetGeometry(ArcGIS.Core.Geometry.Geometry)">
            <summary>
            Applies the changes made to a <see cref="T:ArcGIS.Core.CIM.CIMGraphic">CIMGraphic</see> back to the GraphicElement. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="geometry"><see cref="T:ArcGIS.Core.CIM.Geometry.Geometry">CIMGraphic</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MethodSnippets.cs" region="GraphicElement_SetGeometry" lang="CS"></code>
            </example>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Element._isAspectRatioDisabled">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.#ctor(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Desktop.Mapping.IElementContainer)">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Element.CIMElement">
            <summary>
            The element's CIM representation. This is a lightweight version; certain properties (e.g. geometries) are omitted.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetXML">
            <summary>Get the CIM definition for the element.</summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.SetXML(System.String)">
            <summary>Initialize the element based on the CIM definition.</summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.QueryPlacement(ServiceContracts.ElementPlacementOptions,System.Boolean)">
            <summary>
            Queries this element's Placement.
            </summary>
            <param name="options"></param>
            <param name="reproject">Indicates map graphics should be projected to the map's coordinate system.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetStyleAsync">
            <exclude> </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetStyleType">
            <exclude> </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.CompareTo(System.Object)">
            <summary>
            Compare Elements by name.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.Equals(System.Object)">
            <summary>
            Determines whether the specified element is equivalent to the current element.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Element.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.MapSurroundType">
            <summary>
            Specifies the available map surround types
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSurroundType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSurroundType.NorthArrow">
            <summary>
            North arrow
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSurroundType.ScaleBar">
            <summary>
            Scale bar
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSurroundType.Legend">
            <summary>
            Legend
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSurroundType.Table">
            <summary>
            Table
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSurroundType.Chart">
            <summary>
            Chart
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSurroundType.ElevationGuideBar">
            <summary>
            Elevation guide bar
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSurroundType.SlopeGuide">
            <summary>
            Slope guide
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSurroundType.TerrainObstacleProfile">
            <summary>
            Terrain obstacle profile
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSurroundType.MeterReferenceGuide">
            <summary>
            Meter reference guide
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSurroundType.CruisingAltitudeDiagram">
            <summary>
            Cruising Altitude Diagram
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSurroundType.Attachment">
            <summary>
            Attachment
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.MapFrameType">
            <summary>
            Specifies the available map frame types
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapFrameType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapFrameType.PolygonMapFrame">
            <summary>
            Polygon map frame
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapFrameType.RectangleMapFrame">
            <summary>
            Rectangular map frame
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapFrameType.CircleMapFrame">
            <summary>
            Circular map frame
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapFrameType.EllipseMapFrame">
            <summary>
            Elliptical map frame
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.MapSurroundInfo">
            <summary>
            Base class for map surround properties for use with <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory"/>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapSurroundInfo.#ctor(ArcGIS.Desktop.Layouts.MapSurroundType)">
            <summary>
            Constructor
            </summary>
            <param name="surroundType">Provide the type of surround</param>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSurroundInfo.MapFrameName">
            <summary>
            Gets and sets the (associated) Map Frame name
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSurroundInfo.MapMemberUri">
            <summary>
            Gets and sets the associated map member URI
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSurroundInfo.MapSurroundType">
            <summary>
            Gets and sets the map surround type: <see cref="P:ArcGIS.Desktop.Layouts.MapSurroundInfo.MapSurroundType"/>
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.TableFrameInfo">
            <summary>
            Table frame properties for use with <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory"/>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.TableFrameInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.TableFrameInfo.#ctor(System.String,System.String,System.String[])">
            <summary>
            For compatibility with "old" TableFrameInfo
            </summary>
            <param name="mapFrameName"></param>
            <param name="mapMemberUri"></param>
            <param name="fieldNames"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.TableFrameInfo.FieldNames">
            <summary>
            Gets and sets the list of field names for the table frame
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.TableFrameInfo.TableFrameStyleItem">
            <summary>
            Gets and sets the table frame style: <see cref="T:ArcGIS.Desktop.Mapping.TableFrameStyleItem"/>
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ChartFrameInfo">
            <summary>
            Chart frame properties for use with <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory"/>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ChartFrameInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ChartFrameInfo.#ctor(System.String,System.String,System.String)">
             <summary>
            For compatibility with "old" ChartFrameInfo
             </summary>
             <param name="mapFrameName"></param>
             <param name="mapMemberUri"></param>
             <param name="chartName"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ChartFrameInfo.ChartName">
            <summary>
            Gets and sets the name of the chart
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ScaleBarInfo">
            <summary>
            Scale bar properties for use with <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory"/>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ScaleBarInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ScaleBarInfo.ScaleBarStyleItem">
            <summary>
            Gets and sets the scale bar style: <see cref="T:ArcGIS.Desktop.Mapping.ScaleBarStyleItem"/>
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.NorthArrowInfo">
            <summary>
            North arrow properties for use with <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory"/>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.NorthArrowInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.NorthArrowInfo.NorthArrowStyleItem">
            <summary>
            Gets and sets the north arrow style item: <see cref="T:ArcGIS.Desktop.Mapping.NorthArrowStyleItem"/>
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LegendInfo">
            <summary>
            frame properties for use with <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory"/>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LegendInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LegendInfo.LegendStyleItem">
            <summary>
            Gets and sets the legend style item: <see cref="T:ArcGIS.Desktop.Mapping.LegendStyleItem"/>
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.MeterReferenceGuideInfo">
            <summary>
            Meter Reference Guide properties for use with <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory"/>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MeterReferenceGuideInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MeterReferenceGuideInfo.#ctor(System.String,ArcGIS.Core.CIM.MapProductSpecType)">
            <summary>
            For compatibility with "old" MeterReferenceGuideInfo
            </summary>
            <param name="mapFrameName"></param>
            <param name="specType"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MeterReferenceGuideInfo.MapProductSpecType">
            <summary>
            Gets and sets the <see cref="P:ArcGIS.Desktop.Layouts.MeterReferenceGuideInfo.MapProductSpecType"/>
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ProfileFrameInfo">
            <summary>
            Profile frame properties for use with <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory"/>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ProfileFrameInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ProfileFrameInfo.#ctor(System.String,System.String)">
            <summary>
            For compatibility with "old" ProfileFrameInfo
            </summary>
            <param name="mapFrameName"></param>
            <param name="layerUri"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ProfileFrameInfo.RunwayCenterlineID">
            <summary>
            Gets and sets the runway centerline id
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ProfileFrameInfo.Specification">
            <summary>
            Gets and sets the specification
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ProfileFrameInfo.Specifications">
            <summary>
            Gets and sets the collection of specifications
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ProfileFrameInfo.PointObstacles">
            <summary>
            Gets and sets the collection of point obstacles
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ProfileFrameInfo.PolyObstacles">
            <summary>
            Gets and sets the collection of polygon obstacles
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.SlopeGuideInfo">
            <summary>
            Slope guide properties for use with <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory"/>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.SlopeGuideInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.SlopeGuideInfo.#ctor(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            For compatibility with "old" SlopeGuideInfo
            </summary>
            <param name="mapFrameName"></param>
            <param name="layerUri"></param>
            <param name="contourField"></param>
            <param name="contourInterval"></param>
            <param name="mapScale"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SlopeGuideInfo.ContourIntervalField">
            <summary>
            Gets and sets the contour interval field
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SlopeGuideInfo.ContourInterval">
            <summary>
            Gets and sets the contour interval
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SlopeGuideInfo.MapScale">
            <summary>
            Gets and sets the mapscale
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ElevationGuideBarInfo">
            <summary>
            Elevation guide properties for use with <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory"/>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElevationGuideBarInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElevationGuideBarInfo.#ctor(System.String,System.String)">
            <summary>
            For compatibility with "old" ElevationGuideBarInfo
            </summary>
            <param name="mapFrameName"></param>
            <param name="layerUri"></param>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ElementInfo">
            <summary>
            Associated element properties for use when creating elements
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementInfo.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementInfo.CreateElementInfo(System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMStringMap})">
            <summary>
            Create an ElementInfo with the specified custom properties
            </summary>
            <param name="customProperties">Custom properties</param>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.ElementInfo"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementInfo.CreateElementInfo(ArcGIS.Core.CIM.Anchor,System.Nullable{System.Double},System.Double)">
            <summary>
            Create an ElementInfo with the specified settings
            </summary>
            <param name="anchor">Placement</param>
            <param name="rotation">Rotation</param>
            <param name="cornerRounding">Corner rounding</param>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.ElementInfo"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementInfo.CreateElementInfo(ArcGIS.Core.CIM.Anchor,System.Nullable{System.Double},System.Double,System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMStringMap})">
            <summary>
            Create an ElementInfo with the specified settings
            </summary>
            <param name="anchor">Placement</param>
            <param name="rotation">Rotation</param>
            <param name="cornerRounding">Corner rounding</param>
            <param name="customProperties">Custom properties</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementInfo.CreateElementInfos(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMStringMap}})">
            <summary>
            Create a collection of ElementInfos, one per custom properties collection
            </summary>
            <param name="customProperties">List/Array of Custom property collections</param>
            <returns><see cref="T:System.Collections.Generic.IList`1"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementInfo.CreateElementInfos(ArcGIS.Core.CIM.Anchor,System.Nullable{System.Double},System.Double,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMStringMap}})">
            <summary>
            Create a collection of ElementInfos, one per custom properties collection
            </summary>
            <remarks>Each elementInfo will be initialized with the same anchor, rotation, and cornerRounding</remarks>
            <param name="anchor">Placement</param>
            <param name="rotation">Rotation</param>
            <param name="cornerRounding">Corner rounding</param>
            <param name="customProperties">List/Array of Custom property collections</param>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ElementInfo.CustomProperties">
            <summary>
            Gets and sets any associated custom properties
            </summary>
            <remarks>Custom properties, if provided, must be either strings or serializable to string</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ElementInfo.Anchor">
            <summary>
            Gets and sets the default element anchor placement for layout elements. Use this
            property to override the default placement.
            </summary>
            <remarks>Anchor placement is applied before any other properties on the ElementInfo.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ElementInfo.Rotation">
            <summary>
            Gets and sets the default element rotation for elements. Use this
            property to override the default rotation
            </summary>
            <remarks>Rotation is applied <b>after</b> any element anchor placement
            (if specified) has been applied.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ElementInfo.CornerRounding">
            <summary>
            Gets and sets corner rounding for elements.
            </summary>
            <remarks>Corner rounding should be specified as a <b>percentage</b>
            greater than 0.0 and up to, and including, 50.0 percent. Negative values
            will be ignored. A value greater than 50.0 will default to 50.0.
            Corner rounding is applied <b>after</b> any element anchor placement (if specified)
            has been applied.<br/>Corner rounding can be applied to the following predefined
            shapes:<br/>
            <ul>
            <li><see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Rectangle"/></li>
            <li><see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.RoundedRectangle"/>*</li>
            <li><see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Triangle"/></li>
            <li><see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.RightTriangle"/></li>
            <li><see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Cross"/></li>
            <li><see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.X"/></li>
            </ul>
            Specifying a corner rounding for any other shape type will be ignored.
            </remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.IElementFactory">
            <summary>
            Provides method signatures for creating the different types of elements.
            </summary>
            <remarks>Elements can be created in an <see cref="T:ArcGIS.Desktop.Mapping.IElementContainer"/> to
            include Layouts, Graphics Layers, and Group Elements</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IElementFactory.CreateGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.CIM.CIMGraphic,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/> based on the input <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/>
            and element properties.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="cimGraphic">The input graphic</param>
            <param name="elementName">Element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>Refer to <see cref="T:ArcGIS.Desktop.Layouts.GraphicFactory"/> for creating <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IElementFactory.CreateGraphicElements(ArcGIS.Desktop.Mapping.IElementContainer,System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMGraphic},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.ElementInfo})">
            <summary>
            Create <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/> based on the input <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/> collection
            and element properties.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="cimGraphics">The input graphic collection</param>
            <param name="elementNames">Element names (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfos">Additional element properties (optional)</param>
            <remarks>The number of Element names and ElementInfos must either match the input number of
            CIMGraphics or be null. Refer to <see cref="T:ArcGIS.Desktop.Layouts.GraphicFactory"/> for creating
            <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></remarks>
            <returns><see cref="T:System.Collections.Generic.IList`1"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IElementFactory.CreateGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbol,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/> based on the input geometry
            and associated symbol and properties (optional).
            </summary>
            <remarks>Use <see cref="M:ArcGIS.Desktop.Layouts.IElementFactory.CreateGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.CIM.CIMGraphic,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)"/>
            if you are using a graphic previously created, eg via:
            <see cref="M:ArcGIS.Desktop.Layouts.GraphicFactory.CreateSimpleGraphic(ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbol)"/></remarks>
            <param name="elementContainer">The parent element container</param>
            <param name="geometry">The geometry to be used for the graphic element</param>
            <param name="symbol">The symbol to be used for the graphic element (optional)</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IElementFactory.CreateTextGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Desktop.Layouts.TextType,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMTextSymbol,System.String,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Creates a text graphic based on the input geometry, symbol, and text and
            other optional parameters.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="textType">The type of text graphic to create</param>
            <param name="geometry">The geometry for the resulting graphic</param>
            <param name="textSymbol">The text symbol to be used with the graphic (optional)</param>
            <param name="text">The text string (optional)</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>For:<br/>
            <ul>
              <li>TextType.PointText use a point</li>
              <li>TextType.SplinedText use a polyline (straight or curved)</li>
              <li>TextType.CircleParagraph use a circle (polygon) or point</li>
              <li>TextType.EllipseParagraph use an ellipse (polygon) or point</li>
              <li>TextType.RectangleParagraph use an envelope or point</li>
              <li>TextType.PolygonParagraph use a polygon or point</li>
            </ul>
            If a point is used as the input for the paragraph text types, a default element extent
            is applied.<br/>Use <see cref="M:ArcGIS.Desktop.Layouts.IElementFactory.CreateGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.CIM.CIMGraphic,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)"/>
            if you want to use a text graphic previously created, eg via:
            <see cref="M:ArcGIS.Desktop.Layouts.GraphicFactory.CreateSimpleTextGraphic(ArcGIS.Desktop.Layouts.TextType,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMTextSymbol,System.String)"/></remarks>
            <returns>A <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IElementFactory.CreatePredefinedShapeGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Desktop.Layouts.PredefinedShape,ArcGIS.Core.Geometry.MapPoint,System.Double,System.Double,ArcGIS.Core.CIM.CIMPolygonSymbol,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a polygon graphic of the specified <see cref="T:ArcGIS.Desktop.Layouts.PredefinedShape"/> using
            the provided location, optional size dimensions, and symbol.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="shapeType">The shape type of the graphic</param>
            <param name="location">The location of the graphic</param>
            <param name="width">The width of the graphic bounding box (optional)</param>
            <param name="height">The height of the graphic bounding box (optional)</param>
            <param name="polySymbol">The symbol to be used with the graphic (optional)</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>If neither a width or height is provided, the dimensions of the graphic bounding box will
            use a predefined system default. If only one of width or height is provided then the dimensions
            will be assumed to be equal. Negative width and height values will be treated the same as if they
            were missing. When generating a circle (i.e. <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Circle"/>)
            width is used as the circle <b>diameter</b>. When generating an ellipse
            (i.e. <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Ellipse"/>) width and height are assumed to be the
            length of the two axis - major/minor depending on which dimension is the longest.</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IElementFactory.CreatePredefinedShapeGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Desktop.Layouts.PredefinedShape,ArcGIS.Core.Geometry.Envelope,ArcGIS.Core.CIM.CIMPolygonSymbol,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a polygon graphic of the specified <see cref="T:ArcGIS.Desktop.Layouts.PredefinedShape"/> using
            the provided location, optional size dimensions, and symbol.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="shapeType">The shape type of the graphic</param>
            <param name="bounds">The graphic bounding box</param>
            <param name="polySymbol">The symbol to be used with the graphic (optional)</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IElementFactory.CreateArrowGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Polyline,ArcGIS.Desktop.Layouts.ArrowInfo,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create an arrow graphic based on the provided geometry and <see cref="T:ArcGIS.Desktop.Layouts.ArrowInfo"/>
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="arrowLine">The arrow geometry</param>
            <param name="arrowInfo">The arrow info or "description"</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <returns><see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IElementFactory.CreatePictureGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Geometry,System.String,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Creates a picture graphic element based on the input geometry and symbol.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="frameOrLocation">The picture graphic envelope (frame) or center point</param>
            <param name="url">The url of the image to use</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
            <remarks>If a point is specified, the picture frame is sized to the extent of the content.
            If an envelope is specified, the content is sized to fit the extent of the frame.</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IElementFactory.CreateMapFrameElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Geometry,ArcGIS.Desktop.Mapping.Map,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a map frame element based on the input map frame polygon and map URI.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="frameOrLocation">The map frame location, envelope, or polygon</param>
            <param name="map">The map (to be) associated with the frame</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>Graphic layers are not valid containers for map frames.<br/>If a point is
            provided as the frame geometry then a default extent will be applied.</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.MapFrame"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IElementFactory.CreateMapSurroundElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Geometry,ArcGIS.Desktop.Layouts.MapSurroundInfo,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a map surround element based on the geometry and associated
            map surround and element properties.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="frameOrLocation">The map surround frame envelope or center point</param>
            <param name="surroundInfo">Associated surround properties</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>Graphic layers are not valid containers for surrounds. The frameOrLocation can be either
            a <see cref="T:ArcGIS.Core.Geometry.MapPoint"/> or <see cref="T:ArcGIS.Core.Geometry.Envelope"/>. A default extent will be calculated if
            a map point is provided (rather than an envelope).</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.MapSurround"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IElementFactory.CreateGroupElement(ArcGIS.Desktop.Mapping.IElementContainer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element},System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a group element from the input element collection and element
            properties.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="elements">The collection of elements to be grouped (optional)</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="groupElementInfo">Additional element properties (optional)</param>
            <remarks>Only elements contained within the provided elementContainer will be added to the group element.
            If elements is null or an empty collection then an empty GroupElement will be created.</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IElementFactory.CreateElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.CIM.CIMElement,System.Boolean)">
            <summary>
            Creates an element using the corresponding <see cref="T:ArcGIS.Core.CIM.CIMElement"/> definition.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> or <see cref="T:ArcGIS.Desktop.Layouts.GroupElement">GroupElement</see></param>
            <param name="cimElement">The cimElement to be created</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.Element"/></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ElementFactory">
            <summary>
            Provides methods to create the different types of elements.
            </summary>
            <remarks>Elements can be created in an <see cref="T:ArcGIS.Desktop.Mapping.IElementContainer"/> to
            include Layouts, Graphics Layers, and Group Elements</remarks>
            <example>
            Below are several examples on how to create different layout elements.  For specific examples for each element type, look at the corresponding element class example.
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create point graphic with symbology" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create line graphic with symbology" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create rectangle graphic with simple symbology" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create text element with basic font properties" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create rectangle text with more advanced symbol settings" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a new picture element with advanced symbol settings" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a map frame and zoom to a bookmark" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a legend for a specific map frame" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ElementFactory.Instance">
            <summary>
            Provides access to helper functions that create layout elements.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.CIM.CIMGraphic,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/> based on the input <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/>
            and element properties. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="cimGraphic">The input graphic</param>
            <param name="elementName">Element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>Refer to <see cref="T:ArcGIS.Desktop.Layouts.GraphicFactory"/> for creating <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/>.If the element container
            is a <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> then the element gets added to the root level of the layout TOC
            at the top most position.  If the element container is a <see cref="T:ArcGIS.Desktop.Layouts.GroupElement">GroupElement</see> then it
            gets added to the group at the topmost position.</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: graphic</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbol,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/> based on the input geometry
            and associated symbol and properties (optional). This method must be
            called on the MCT.  Use QueuedTask.Run.
            </summary>
            <remarks>Use <see cref="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.CIM.CIMGraphic,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)"/>
            if you are using a graphic previously created, eg via:
            <see cref="M:ArcGIS.Desktop.Layouts.GraphicFactory.CreateSimpleGraphic(ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbol)"/></remarks>
            <param name="elementContainer">The parent element container</param>
            <param name="geometry">The geometry to be used for the graphic element</param>
            <param name="symbol">The symbol to be used for the graphic element (optional)</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>Refer to <see cref="T:ArcGIS.Desktop.Layouts.GraphicFactory"/> for creating a <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: graphic</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateGraphicElements(ArcGIS.Desktop.Mapping.IElementContainer,System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMGraphic},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.ElementInfo})">
            <summary>
            Create <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/> based on the input <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/> collection
            and element properties. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="cimGraphics">The input graphic collection</param>
            <param name="elementNames">Element names (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfos">Additional element properties (optional)</param>
            <remarks>The number of Element names and ElementInfos must either match the input number of
            CIMGraphics or be null. Refer to <see cref="T:ArcGIS.Desktop.Layouts.GraphicFactory"/> for creating
            <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></remarks>
            <returns><see cref="T:System.Collections.Generic.IList`1"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: graphic</exception>
            <exception cref="T:System.ArgumentException">Number of elementNames does not match the number of graphics</exception>
            <exception cref="T:System.ArgumentException">Number of elementInfos does not match the number of graphics</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateTextGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Desktop.Layouts.TextType,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMTextSymbol,System.String,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Creates a text graphic element based on the input geometry, symbol, text and
            other optional parameters. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="textType">The type of text graphic to create</param>
            <param name="geometry">The geometry for the resulting graphic</param>
            <param name="textSymbol">The text symbol to be used with the graphic (optional)</param>
            <param name="text">The text string (optional)</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>For:<br/>
            <ul>
              <li>TextType.PointText use a point</li>
              <li>TextType.SplinedText use a polyline (straight or curved)</li>
              <li>TextType.CircleParagraph use a circle (polygon) or point</li>
              <li>TextType.EllipseParagraph use an ellipse (polygon) or point</li>
              <li>TextType.RectangleParagraph use an envelope or point</li>
              <li>TextType.PolygonParagraph use a polygon or point</li>
            </ul>
            If a point is used as the input for the paragraph text types, a default element extent
            is applied.<br/>Use <see cref="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.CIM.CIMGraphic,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)"/>
            if you want to use a text graphic previously created, eg via:
            <see cref="M:ArcGIS.Desktop.Layouts.GraphicFactory.CreateSimpleTextGraphic(ArcGIS.Desktop.Layouts.TextType,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMTextSymbol,System.String)"/></remarks>
            <returns>A <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreatePredefinedShapeGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Desktop.Layouts.PredefinedShape,ArcGIS.Core.Geometry.MapPoint,System.Double,System.Double,ArcGIS.Core.CIM.CIMPolygonSymbol,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a polygon graphic of the specified <see cref="T:ArcGIS.Desktop.Layouts.PredefinedShape"/> using
            the provided location, optional size dimensions, and symbol. This method must be
            called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="shapeType">The shape type of the graphic</param>
            <param name="location">The location of the graphic</param>
            <param name="width">The width of the graphic bounding box (optional)</param>
            <param name="height">The height of the graphic bounding box (optional)</param>
            <param name="polySymbol">The symbol to be used with the graphic (optional)</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>If neither a width or height is provided, the dimensions of the graphic bounding box will
            use a predefined system default. If only one of width or height is provided then the dimensions
            will be assumed to be equal. Negative width and height values will be treated the same as if they
            were missing. When generating a circle (i.e. <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Circle"/>)
            width is used as the circle <b>diameter</b>. When generating an ellipse
            (i.e. <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Ellipse"/>) width and height are assumed to be the
            length of the two axis - major/minor depending on which dimension is the longest.</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreatePredefinedShapeGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Desktop.Layouts.PredefinedShape,ArcGIS.Core.Geometry.Envelope,ArcGIS.Core.CIM.CIMPolygonSymbol,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a polygon graphic of the specified <see cref="T:ArcGIS.Desktop.Layouts.PredefinedShape"/> using
            the provided location, optional size dimensions, and symbol. This method must be
            called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="shapeType">The shape type of the graphic</param>
            <param name="bounds">The graphic bounding box</param>
            <param name="polySymbol">The symbol to be used with the graphic (optional)</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateArrowGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Polyline,ArcGIS.Desktop.Layouts.ArrowInfo,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create an arrow graphic based on the provided geometry and <see cref="T:ArcGIS.Desktop.Layouts.ArrowInfo"/>.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="arrowLine">The arrow geometry</param>
            <param name="arrowInfo">The arrow info or "description"</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreatePictureGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Geometry,System.String,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Creates a picture graphic element based on the input geometry and symbol.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="frameOrLocation">The picture graphic envelope (frame) or center point</param>
            <param name="url">The url of the image to use</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <returns>A <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
            <remarks>If a point is specified, the picture frame is sized to the extent of the content.
            If an envelope is specified, the content is sized to fit the extent of the frame.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
            <exception cref="T:System.ArgumentException">invalid geometry type</exception>
            <exception cref="T:System.ArgumentException">empty or null url</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateMapFrameElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Geometry,ArcGIS.Desktop.Mapping.Map,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a map frame element based on the input map frame polygon and map URI.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="frameOrLocation">The map frame location (point), envelope, or polygon</param>
            <param name="map">The map (to be) associated with the frame</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>Graphic layers are not valid containers for map frames. If the element
            container is a <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> then the element gets added to the
            root level of the layout TOC at the top most position. If the element container is
            a <see cref="T:ArcGIS.Desktop.Layouts.GroupElement">GroupElement</see> then it gets added to the group at the
            topmost position.<br/>If a point is provided as the frame geometry then a default extent
            will be applied.</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.MapFrame"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">Empty or null geometry</exception>
            <exception cref="T:System.ArgumentException">frameOrLocation - invalid geometry type</exception>
            <exception cref="T:System.ArgumentException">null map</exception>
            <exception cref="T:System.ArgumentException">elementContainer must be a layout or group element (on a layout)</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateAttachmentFrameElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,System.String,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create an attachment based on the frame envelope, attachment url, and
            element properties. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="frame">Attachment frame envelope</param>
            <param name="url">Attachment content url</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>Graphic layers are not valid containers for attachment frames</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.Element"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">Empty or null geometry</exception>
            <exception cref="T:System.ArgumentException">Empty or null url string</exception>
            <exception cref="T:System.ArgumentException">elementContainer must be a layout or group element (on a layout)</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateAttachmentFrameElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Polygon,System.String,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create an attachment based on the frame polygon, attachment url, and
            element properties. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="frame">Attachment frame polygon</param>
            <param name="url">Attachment content url</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>Graphic layers are not valid containers for attachment frames</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.AttachmentFrame"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">Empty or null geometry</exception>
            <exception cref="T:System.ArgumentException">Empty or null url string</exception>
            <exception cref="T:System.ArgumentException">elementContainer must be a layout or group element (on a layout)</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateMapSurroundElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Geometry,ArcGIS.Desktop.Layouts.MapSurroundInfo,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a map surround element based on the geometry and associated
            map surround and element properties.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="frameOrLocation">The map surround frame or page location</param>
            <param name="surroundInfo">Associated surround properties</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties (optional)</param>
            <remarks>Graphic layers are not valid containers for surrounds. The frameOrLocation can be either
            a <see cref="T:ArcGIS.Core.Geometry.MapPoint"/> or <see cref="T:ArcGIS.Core.Geometry.Envelope"/>. A default extent will be calculated if
            a map point is provided (rather than an envelope). Note: a given scale bar or north arrow
            may not fill a specified envelope depending on map scale, aspect ratio, etc, etc.</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.MapSurround"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">Empty or null geometry</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: surroundInfo</exception>
            <exception cref="T:System.ArgumentException">frameOrLocation must be a point or envelope</exception>
            <exception cref="T:System.ArgumentException">elementContainer must be a layout or group element (on a layout)</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateGroupElement(ArcGIS.Desktop.Mapping.IElementContainer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element},System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Create a group element from the input element collection and element
            properties. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="elementContainer">The parent element container</param>
            <param name="elements">The collection of elements to be grouped (optional)</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <param name="groupElementInfo">Additional element properties for the group element (optional)</param>
            <remarks>Only elements contained within the provided elementContainer will be added to the group element.
            If elements is null or an empty collection then an empty GroupElement will be created.</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.CIM.CIMElement,System.Boolean)">
            <summary>
            Creates an element using the corresponding <see cref="T:ArcGIS.Core.CIM.CIMElement"/> definition.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> or <see cref="T:ArcGIS.Desktop.Layouts.GroupElement">GroupElement</see></param>
            <param name="cimElement">The cimElement to be created</param>
            <param name="select">Select after create flag (default is true) (optional)</param>
            <remarks>cimElement cannot be of type <see cref="T:ArcGIS.Core.CIM.CIMGroupElement"/> or a NotSupportedException will
            be thrown. Use <see cref="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateGroupElement(ArcGIS.Desktop.Mapping.IElementContainer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element},System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)"/></remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.Element"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: cimElement</exception>
            <exception cref="T:System.NotSupportedException">Use ElementFactory.CreateGroupElement(...) to create a group element.</exception>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.GraphicElement">
            <summary>
            Represents a graphic element on a page layout.
            </summary>
            <remarks>
            <para>
            Graphic elements are a type of <see cref="T:ArcGIS.Desktop.Layouts.Element">Element</see> and include inserted graphic points, lines, or area shapes.
            <see cref="T:ArcGIS.Desktop.Layouts.PictureElement">PictureElement</see> and <see cref="T:ArcGIS.Desktop.Layouts.TextElement">TextElement</see> are 
            also a type of graphic element.
            </para>
            <para>
            The <see cref="P:ArcGIS.Desktop.Layouts.GraphicElement.Graphic">Graphic</see> property returns a CIM representation of the graphic specific attributes 
            for a GraphicElement. This may provide additional, finer grained properties exposed in the CIM that are not exposed in the managed API. 
            <see cref="M:ArcGIS.Desktop.Layouts.GraphicElement.SetGraphic">SetGraphic</see> applies the changes made to a modified 
            <see cref="T:ArcGIS.Core.CIM.CIMGraphic">CIMGraphic</see> back to the GraphicElement.
            </para>
            <para>
            The <see cref="M:ArcGIS.Desktop.Layouts.GraphicElement.Clone">Clone</see> method allows you to duplicate existing graphic elements on your page layout. 
            This can be useful where you may have a variable number of pictures, for example, on each page in the map series.  Rather than authoring a layout with 
            all possibilities, a single picture element can be cloned and updated the appropriate number of times to reference a different set of pictures on disk 
            for each page in the series.
            </para>
            </remarks>
            <example>
            The following examples demonstrate how to work with a GraphicElement on a page layout.
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\GraphicElementClass.cs" region="CIMGraphic" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\GraphicElementClass.cs" region="CloneGraphic" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicElement.Clone(System.String)">
            <summary>
            Generates a cloned copy of an existing GraphicElement on a page layout.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <remarks>The <c>suffix</c> parameter is an optional string that is used to tag each newly created GraphicElement. The new element will get the same 
            element name as the parent graphic plus the suffix value along with a numeric sequencer.  This makes it possible, if needed, to find and remove unwanted cloned items.</remarks>
            <param name="suffix"><see cref="T:System.String">String</see></param>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement</see></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics count limit of 4000 elements. One or more elements cannot be created.</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics size limit of 10 MB. One or more elements cannot be created.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MethodSnippets.cs" region="GraphicElement_Clone" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicElement.GetGraphic">
            <summary>
            Returns a <see cref="T:ArcGIS.Core.CIM.CIMGraphic">CIMGraphic</see> which is a CIM representation of the graphic specific attributes for a GraphicElement.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns><see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicElement.SetGraphic(ArcGIS.Core.CIM.CIMGraphic)">
            <summary>
            Applies the changes made to a <see cref="T:ArcGIS.Core.CIM.CIMGraphic">CIMGraphic</see> back to the GraphicElement. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="cimGraphic"><see cref="T:ArcGIS.Core.CIM.CIMGraphic">CIMGraphic</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MethodSnippets.cs" region="GraphicElement_SetGraphic" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.GraphicElement.CanSupportCornerRounding">
            <summary>
            Gets whether the Graphic Element can support corner rounding or not
            </summary>
            <remarks>The following shapes support corner rounding:<br/>
            <ul>
            <li>Polygons (with no arcs or curves)</li>
            <li>PredefinedShape.Rectangle</li>
            <li>PredefinedShape.RoundedRectangle*</li>
            <li>PredefinedShape.Triangle</li>
            <li>PredefinedShape.RightTriangle</li>
            <li>PredefinedShape.Cross</li>
            <li>PredefinedShape.X</li>
            </ul>
            *A RoundedRectangle is a predefined shape based off a Rectangle with a default
            corner rounding already applied.</remarks>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.GraphicElement.CornerRounding">
            <summary>
            Gets the corner rounding
            </summary>
            <remarks>Corner rounding is specified as a percentage from 0.0% to 50.0%.
            If <see cref="P:ArcGIS.Desktop.Layouts.GraphicElement.CanSupportCornerRounding"/> returns false, 0.0 is always returned</remarks>
            <returns><see cref="T:System.Double"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicElement.SetCornerRounding(System.Double)">
            <summary>
            Set corner rounding. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <remarks>Corner rounding is specified as a percentage from 0.0 to 50.0.
            If <see cref="P:ArcGIS.Desktop.Layouts.GraphicElement.CanSupportCornerRounding"/> returns false then no corner
            rounding will be applied. If the cornerRounding percentage specified
            is &lt; 0.0 it will be rounded up to 0.0. If the cornerRounding percentage
            specified is &gt;50.0 then it will be rounded down to 50.0.<br/>
            A difference of less than 0.01 with the existing rounding value (if any) is
            ignored.</remarks>
            <param name="cornerRounding"></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicElement.GetStyleAsync">
            <exclude> </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicElement.GetStyleType">
            <exclude> </exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.PredefinedShape">
            <summary>
            Specifies the available predefined shape types
            </summary>
            <remarks>Refer to <see cref="T:ArcGIS.Desktop.Layouts.GraphicFactory"/> and <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory"/></remarks>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.PredefinedShape.None">
            <summary>
            None- default
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.PredefinedShape.Rectangle">
            <summary>
            Rectangle - i.e. an Envelope, also a type of Polygon
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.PredefinedShape.Circle">
            <summary>
            Circle - a type of polygon
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.PredefinedShape.Ellipse">
            <summary>
            Ellipse - a type of polygon
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.PredefinedShape.Triangle">
            <summary>
            Triangle shaped polygon
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.PredefinedShape.RightTriangle">
            <summary>
            RightTriangle shaped polygon
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.PredefinedShape.Cross">
            <summary>
            Cross shaped polygon
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.PredefinedShape.X">
            <summary>
            X shaped polygon
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.PredefinedShape.RoundedRectangle">
            <summary>
            RoundedRectangle shaped polygon
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.PredefinedShape.HalfCircle">
            <summary>
            Half or "Semi" circle shaped polygon
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.PredefinedShape.Cloud">
            <summary>
            Cloud shaped polygon
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.TextType">
            <summary>
            Specifies the available CIMGraphic text types
            </summary>
            <remarks>Refer to <see cref="T:ArcGIS.Desktop.Layouts.GraphicFactory"/> and <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory"/></remarks>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.TextType.None">
            <summary>
            None- default
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.TextType.PointText">
            <summary>
            Point text
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.TextType.SplinedText">
            <summary>
            Text splined along a line or curve
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.TextType.CircleParagraph">
            <summary>
            Circle paragraph text
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.TextType.EllipseParagraph">
            <summary>
            Ellipse paragraph text
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.TextType.RectangleParagraph">
            <summary>
            Rectangle paragraph text
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.TextType.PolygonParagraph">
            <summary>
            Polygon paragraph text
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ArrowStyle">
            <summary>
            Specifies the available arrow style
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.ArrowStyle.Line">
            <summary>
            Straight or curved depending on line geometry
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.ArrowStyle.Block">
            <summary>
            Block arrow
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ArrowInfo">
            <summary>
            Specifies the characteristics of an arrow graphic for use with the
            <see cref="T:ArcGIS.Desktop.Layouts.GraphicFactory"/>
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.ArrowInfo.DefaultArrowStyleName">
            <summary>
            Default style used for the arrowhead marker symbol lookup
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.ArrowInfo.DefaultArrowHeadKey">
            <summary>
            Default arrowhead style item key for the arrow symbol lookup
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.ArrowInfo.DefaultArrowHeadKeys">
            <summary>
            Available arrowhead style item keys
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ArrowInfo.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ArrowInfo.ArrowStyle">
            <summary>
            Gets and sets the arrow style
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ArrowInfo.ArrowOnBothEnds">
            <summary>
            Gets and sets whether the arrow should have an arrow placed
            at both ends or not.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ArrowInfo.ArrowHeadKey">
            <summary>
            Gets and sets the arrowhead key for the respective arrow
            head marker from the <see cref="F:ArcGIS.Desktop.Layouts.ArrowInfo.DefaultArrowStyleName"/>
            </summary>
            <remarks>Supported arrowhead keys are in the <see cref="F:ArcGIS.Desktop.Layouts.ArrowInfo.DefaultArrowHeadKeys"/>
            collection. The arrowhead key controls the style of arrowhead to be created. Currently
            arrowhead keys are limited to the arrowhead keys found in <see cref="F:ArcGIS.Desktop.Layouts.ArrowInfo.DefaultArrowStyleName"/>.
            The arrowhead automatically defaults to <see cref="F:ArcGIS.Desktop.Layouts.ArrowInfo.DefaultArrowHeadKey"/> unless it is set
            to a different value (from the <see cref="F:ArcGIS.Desktop.Layouts.ArrowInfo.DefaultArrowHeadKeys"/> list). Attempting to set
            ArrowHeadKey to a key value <b>not</b> within the <see cref="F:ArcGIS.Desktop.Layouts.ArrowInfo.DefaultArrowHeadKeys"/>
            collection will throw an <see cref="T:System.InvalidOperationException"/></remarks>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ArrowInfo.ArrowStyleName">
            <summary>
            Gets the name of the style used when creating the arrow
            </summary>
            <remarks>The default style is set to <see cref="F:ArcGIS.Desktop.Layouts.ArrowInfo.DefaultArrowStyleName"/></remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ArrowInfo.ArrowSizePoints">
            <summary>
            The size of the arrow head in points
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ArrowInfo.LineWidthPoints">
            <summary>
            The width of the arrow line in points
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.IGraphicFactory">
            <summary>
            Provides a mechanism for creating <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/>. The
            CIMGraphic is typically used to create a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IGraphicFactory.CreateSimpleGraphic(ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbol)">
            <summary>
            Creates a point, line, polygon or text graphic based on the input geometry and symbol.
            </summary>
            <param name="geometry">The geometry for the resulting graphic</param>
            <param name="symbol">The symbol to be used with the graphic (optional)</param>
            <remarks></remarks>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IGraphicFactory.CreateSimpleTextGraphic(ArcGIS.Desktop.Layouts.TextType,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMTextSymbol,System.String)">
            <summary>
            Creates a text graphic based on the input geometry, symbol, and text.
            </summary>
            <param name="textType">The type of text graphic to create</param>
            <param name="geometry">The geometry for the resulting graphic</param>
            <param name="textSymbol">The text symbol to be used with the graphic (optional)</param>
            <param name="text">The text string (optional)</param>
            <remarks>For:<br/>
            <ul>
              <li>TextType.PointText use a point</li>
              <li>TextType.SplinedText use a polyline (straight or curved)</li>
              <li>TextType.CircleParagraph use a circle (polygon)</li>
              <li>TextType.EllipseParagraph use an ellipse (polygon)</li>
              <li>TextType.RectangleParagraph use an envelope</li>
              <li>TextType.PolygonParagraph use a polygon</li>
            </ul>
            For TextType.PointText and TextType.SplinedText, cast the returned
            CIMTextGraphicBase to <see cref="T:ArcGIS.Core.CIM.CIMTextGraphic"/>. For all paragraph text types cast
            to <see cref="T:ArcGIS.Core.CIM.CIMParagraphTextGraphic"/>.
            </remarks>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMTextGraphicBase"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IGraphicFactory.CreatePredefinedShapeGraphic(ArcGIS.Desktop.Layouts.PredefinedShape,ArcGIS.Core.Geometry.MapPoint,System.Double,System.Double,ArcGIS.Core.CIM.CIMPolygonSymbol)">
            <summary>
            Create a polygon graphic of the specified <see cref="T:ArcGIS.Desktop.Layouts.PredefinedShape"/> using
            the provided extent and size dimension(s), and symbol
            </summary>
            <param name="shapeType">The shape type of the graphic</param>
            <param name="location">The location of the graphic</param>
            <param name="width">The width of the graphic bounding box (required)</param>
            <param name="height">The height of the graphic bounding box (optional)</param>
            <param name="polySymbol">The symbol to be used with the graphic (optional)</param>
            <remarks>As a minimum, a width must be provided. If a height is not provided it will
            be assumed to be the same as the width. Negative width or height values will
            be treated the same as if they were missing. When generating a circle (i.e. <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Circle"/>)
            width is used as the circle <b>diameter</b> and height will be ignored. When generating a
            semicircle or "half-circle" (i.e. <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.HalfCircle"/>), if a height
            is <i>not</i> provided, then it is set to be half the width. When generating an ellipse
            (i.e. <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Ellipse"/>) width and height are assumed to be the
            length of the two axis - major/minor depending on which dimension is the longest.
            For <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.RoundedRectangle"/>, a default corner rounding of 20%
            will be applied.</remarks>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMPolygonGraphic"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IGraphicFactory.CreatePredefinedShapeGraphic(ArcGIS.Desktop.Layouts.PredefinedShape,ArcGIS.Core.Geometry.Envelope,ArcGIS.Core.CIM.CIMPolygonSymbol)">
            <summary>
            Create a polygon graphic of the specified <see cref="T:ArcGIS.Desktop.Layouts.PredefinedShape"/> using
            the provided bounds and symbol
            </summary>
            <param name="shapeType">The shape type of the graphic</param>
            <param name="bounds">The graphic bounding box</param>
            <param name="polySymbol">The symbol to be used with the graphic (optional)</param>
             <remarks>For <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Circle"/>, the height of the resulting bounding box
            for the graphic will be set equal to the width. For <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.RoundedRectangle"/>,
            a default corner rounding of 20% will be applied.</remarks>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMPolygonGraphic"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IGraphicFactory.CreateLegendPatchGraphic(ArcGIS.Core.CIM.PatchShape,ArcGIS.Core.Geometry.Envelope,ArcGIS.Core.CIM.CIMSymbol)">
            <summary>
            Create a polygon or line graphic of the specified <see cref="T:ArcGIS.Core.CIM.PatchShape"/> using the
            provided extent and symbol
            </summary>
            <param name="patchShape">The legend patch shape</param>
            <param name="extent">The extent of the graphic element</param>
            <param name="patchSymbol">The symbol to be used with the graphic (optional)</param>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IGraphicFactory.CreatePictureGraphic(ArcGIS.Core.Geometry.Geometry,System.String)">
            <summary>
            Creates a picture graphic based on the input geometry and symbol.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="frameOrLocation">The picture graphic envelope (frame) or center point</param>
            <param name="url">The url of the image to use</param>
            <returns>A <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
            <remarks>If a point is specified, the picture frame is sized to the extent of the content.
            If an envelope is specified, the content is sized to fit the extent of the frame.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
            <exception cref="T:System.ArgumentException">empty or null url</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IGraphicFactory.CreateArrowGraphic(ArcGIS.Core.Geometry.Polyline,ArcGIS.Desktop.Layouts.ArrowInfo)">
            <summary>
            Create an arrow graphic based on the provided geometry and <see cref="T:ArcGIS.Desktop.Layouts.ArrowInfo"/>
            </summary>
            <param name="arrowLine">The arrow geometry</param>
            <param name="arrowInfo">The arrow info or "description"</param>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.IGraphicFactory.GetGeometry(ArcGIS.Core.CIM.CIMGraphic)">
            <summary>
            Get the underlying geometry from the <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/>
            </summary>
            <param name="graphic">The graphic from which the geometry will be returned</param>
            <returns><see cref="T:ArcGIS.Core.Geometry.Geometry"/></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.GraphicFactory">
            <summary>
            Provides a mechanism for creating <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/>. The
            CIMGraphic is typically used to create a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/>
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.GraphicFactory.Instance">
            <summary>
            Provides access to helper functions that create <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/>.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicFactory.CreateSimpleGraphic(ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbol)">
            <summary>
            Creates a point, line, polygon or text graphic based on the input geometry and symbol.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="geometry">The geometry for the resulting graphic</param>
            <param name="symbol">The symbol to be used with the graphic (optional)</param>
            <remarks></remarks>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicFactory.CreateSimpleTextGraphic(ArcGIS.Desktop.Layouts.TextType,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMTextSymbol,System.String)">
            <summary>
            Creates a text graphic based on the input geometry, symbol, and text.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="textType">The type of text graphic to create</param>
            <param name="geometry">The geometry for the resulting graphic</param>
            <param name="textSymbol">The text symbol to be used with the graphic (optional)</param>
            <param name="text">The text string (optional)</param>
            <remarks>For:<br/>
            <ul>
              <li>TextType.PointText use a point</li>
              <li>TextType.SplinedText use a polyline (straight or curved)</li>
              <li>TextType.CircleParagraph use a circle (polygon)</li>
              <li>TextType.EllipseParagraph use an ellipse (polygon)</li>
              <li>TextType.RectangleParagraph use an envelope</li>
              <li>TextType.PolygonParagraph use a polygon</li>
            </ul>
            For TextType.PointText and TextType.SplinedText, cast the returned
            CIMTextGraphicBase to <see cref="T:ArcGIS.Core.CIM.CIMTextGraphic"/>. For all paragraph text types cast
            to <see cref="T:ArcGIS.Core.CIM.CIMParagraphTextGraphic"/>.
            </remarks>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMTextGraphicBase"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicFactory.CreatePictureGraphic(ArcGIS.Core.Geometry.Geometry,System.String)">
            <summary>
            Creates a picture graphic element based on the input geometry and symbol.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="frameOrLocation">The picture graphic envelope (frame) or center point</param>
            <param name="url">The url of the image to use</param>
            <returns>A <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
            <remarks>If a point is specified, the picture frame is sized to the extent of the content.
            If an envelope is specified, the content is sized to fit the extent of the frame.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
            <exception cref="T:System.ArgumentException">geometry must be point or envelope</exception>
            <exception cref="T:System.ArgumentException">empty or null url</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicFactory.CreatePredefinedShapeGraphic(ArcGIS.Desktop.Layouts.PredefinedShape,ArcGIS.Core.Geometry.MapPoint,System.Double,System.Double,ArcGIS.Core.CIM.CIMPolygonSymbol)">
            <summary>
            Create a polygon graphic of the specified <see cref="T:ArcGIS.Desktop.Layouts.PredefinedShape"/> using
            the provided extent and size dimension(s), and symbol. This method must be called
            on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="shapeType">The shape type of the graphic</param>
            <param name="location">The location of the graphic</param>
            <param name="width">The width of the graphic bounding box (required)</param>
            <param name="height">The height of the graphic bounding box (optional)</param>
            <param name="polySymbol">The symbol to be used with the graphic (optional)</param>
            <remarks>As a minimum, a width must be provided. If a height is not provided it will
            be assumed to be the same as the width. Negative width or height values will
            be treated the same as if they were missing. When generating a circle (i.e. <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Circle"/>)
            width is used as the circle <b>diameter</b> and height will be ignored. When generating a
            semicircle or "half-circle" (i.e. <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.HalfCircle"/>), if a height
            is <i>not</i> provided, then it is set to be half the width. When generating an ellipse
            (i.e. <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Ellipse"/>) width and height are assumed to be the
            length of the two axis - major/minor depending on which dimension is the longest.
            For <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.RoundedRectangle"/>, a default corner rounding of 20%
            will be applied.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
            <exception cref="T:System.ArgumentException">width does not exceed the minimum value</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicFactory.CreatePredefinedShapeGraphic(ArcGIS.Desktop.Layouts.PredefinedShape,ArcGIS.Core.Geometry.Envelope,ArcGIS.Core.CIM.CIMPolygonSymbol)">
            <summary>
            Create a polygon graphic of the specified <see cref="T:ArcGIS.Desktop.Layouts.PredefinedShape"/> using the
            provided bounds and symbol. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="shapeType">The shape type of the graphic</param>
            <param name="bounds">The graphic bounding box</param>
            <param name="polySymbol">The symbol to be used with the graphic (optional)</param>
            <remarks>For <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.Circle"/>, the height of the resulting bounding box
            for the graphic will be set equal to the width. For <see cref="F:ArcGIS.Desktop.Layouts.PredefinedShape.RoundedRectangle"/>,
            a default corner rounding of 20% will be applied.</remarks>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMPolygonGraphic"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicFactory.CreateLegendPatchGraphic(ArcGIS.Core.CIM.PatchShape,ArcGIS.Core.Geometry.Envelope)">
            <summary>
            Create a polygon or line graphic of the specified <see cref="T:ArcGIS.Core.CIM.PatchShape"/> using the
            provided extent. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="patchShape">The legend patch shape</param>
            <param name="extent">The extent of the graphic element</param>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicFactory.CreateLegendPatchGraphic(ArcGIS.Core.CIM.PatchShape,ArcGIS.Core.Geometry.Envelope,ArcGIS.Core.CIM.CIMSymbol)">
            <summary>
            Create a polygon or line graphic of the specified <see cref="T:ArcGIS.Core.CIM.PatchShape"/> using the
            provided extent and symbol. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="patchShape">The legend patch shape</param>
            <param name="extent">The extent of the graphic element</param>
            <param name="patchSymbol">The symbol to be used with the graphic</param>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicFactory.CreateArrowGraphic(ArcGIS.Core.Geometry.Polyline,ArcGIS.Desktop.Layouts.ArrowInfo)">
            <summary>
            Create an arrow graphic based on the provided geometry and <see cref="T:ArcGIS.Desktop.Layouts.ArrowInfo"/>.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="arrowLine">The arrow geometry</param>
            <param name="arrowInfo">The arrow info or "description"</param>
            <returns>A <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">empty or null geometry</exception>
            <exception cref="T:System.ArgumentException">empty or null arrowInfo</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GraphicFactory.GetGeometry(ArcGIS.Core.CIM.CIMGraphic)">
            <summary>
            Get the underlying geometry from the <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/>
            </summary>
            <param name="graphic">The graphic from which the geometry will be returned</param>
            <returns><see cref="T:ArcGIS.Core.Geometry.Geometry"/></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.GroupElement">
            <summary>
            Represents a group element that appears in the layout contents pane.
            </summary>
            <remarks>
            <para>
            It is possible that group elements can be nested in another group element. If the element container is a <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> 
            then the element gets added to the root level of the layout TOC at the top most position.  If the element container is a 
            <see cref="T:ArcGIS.Desktop.Layouts.GroupElement">GroupElement</see> then it gets added to the group at the topmost position. 
            </para>
            <para>
            The <see cref="M:ArcGIS.Desktop.Layouts.Layout.FindElement">FindElement</see> method will also find elements nested in a group element.
            </para>
            <para>
            If you want to work with all the elements within a group element, use the <see cref="P:ArcGIS.Desktop.Layouts.GroupElement.Elements">Elements</see> property to 
            return the collection of elements in a group element.  
            </para> 
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Creating empty group elements" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a group element with elements" lang="CS"></code>
            </example>
            <summary>
            Represents a group element
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.GroupElement.GetElementsAsFlattenedList">
            <summary>
            Get the collection of <see cref="T:ArcGIS.Desktop.Layouts.Element"/> from the group element as a flattened list.
            Nested groups within child <see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/> are <b>not</b> preserved.
            </summary>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.GroupElement.Elements">
            <summary>
            Gets the read-only collection of child elements
            </summary>
            <remarks>This property is bindable</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.GroupElement.IsLocked">
            <summary>
            Gets if the element is locked.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.GroupElement.SelectedElement">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.GroupElement.URI">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.GroupElement.UnitID">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.GroupElement.Extent">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.GroupElement.OperationManager">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.MapSeriesType">
            <summary>
            Specifies the type of map series.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSeriesType.NoneSeries">
            <summary>
            No map series associated with the layout
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSeriesType.SpatialSeries">
            <summary>
            Spatial map series
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.MapSeriesType.BookmarkSeries">
            <summary>
            Bookmark map series
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ExportPages">
            <summary>
            Specifies the collection of map series pages to be exported.
            </summary>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a map series to single PDF"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a map series to individual TIFF files"  lang="CS"></code>
            </example>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.ExportPages.All">
            <summary>
            Export all map series pages.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.ExportPages.Current">
            <summary>
            Export the currently active map series page.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.ExportPages.SelectedIndexFeatures">
            <summary>
            Export a page for each selected spatial map series index feature. 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.ExportPages.Custom">
            <summary>
            Export a custom set of map series pages.  This option is required for using CustomPages property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.ExportPages.SelectedPages">
            <summary>
            Export a page for each selected spatial map series index feature. 
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.MapSeriesExportOptions">
            <summary>
            Represents a collection of settings for exporting a map series.
            </summary>
            <remarks>
            Before you can export a map series, you need to configure your <see cref="T:ArcGIS.Desktop.Mapping.ExportFormat">ExportFormat</see>
            and you need to construct your export settings.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a map series to single PDF"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a map series to individual TIFF files"  lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapSeriesExportOptions.#ctor">
            <summary>
            Creates a collection of export options specific to exporting a map series.
            </summary>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MapSeries.cs" region="MapSeries_Constructor1"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MapSeries.cs" region="MapSeries_Constructor2"  lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeriesExportOptions.ExportFileOptions">
            <summary>
            Gets and sets how the map series will be exported to file.
            </summary>
            <remarks>
            <para>For PDF export, there are 3 options: a single, multiple page PDF, individual pages using the map name as a suffix, 
            or individual pages using page numbers as a suffix.</para>
            <para>For all other export formats, there are only two valid options: individual pages using the map name as a suffix, 
            or individual pages using page numbers as a suffix.</para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeriesExportOptions.ShowSelectedSymbology">
            <summary>
            Gets or sets if feature layer selection symbology is exported.
            </summary>
            <remarks>Setting the value to <c>false</c> prevents you from having to clear your selection before exporting.  </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeriesExportOptions.ExportPages">
            <summary>
            Gets and sets the collection of map series pages to be exported.
            </summary>
            <remarks>
            <para>Specify the collection of pages by choosing one of the <see cref="T:ArcGIS.Desktop.Layouts.ExportPages">ExportPages</see> options.</para>
            <para>The <c>Custom</c> option requires that you also set the CustomPages property.</para>
            <para>The <c>SelectedIndexFeatures</c> option only applies to a spatial map series.</para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeriesExportOptions.CustomPages">
            <summary>
            Gets or sets a string that represents a list of pages and/or page ranges.
            </summary>
            <remarks>
            <para>The values in the string represent the page numbers you see in the Map Series Pages pane.  These values correspond to the
            map series page number settings or field values. You can create a comma-delimted list of pages or you can use a hyphen
            to designate a range.  An example might be, "1-3, 5" or , "1, 2, 23-28, 45, 63-65".  When using a hyphen, it  must be used between
            two existing values. You can't use the hyphen as a wildcard like "65-".</para>
            <para>When working with a field that contains strings like with roman numeral values, ranges won't work, you must build an explicit
            list of valid values.  An example might be, "VI, VII, VII", or "V, I, II".</para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeriesExportOptions.DoOrderPagesByGrouping">
            <summary>
            Gets or set if series pages are exported in the grouping order shown in the Contents pane.
            </summary>
            <remarks>Setting the value to <c>true</c> exports map series pages in the grouping order shown in the Contents pane.</remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.Layout">
            <summary>
            Represents a page layout in a project and provides access to basic layout properties, including page information, access to elements, and export methods.
            </summary>
            <remarks>
            <para>
            The Layout class provides access to all elements on a page layout.  Use <see cref="M:ArcGIS.Desktop.Layouts.Layout.FindElement">FindElement</see> to reference 
            an individual element on page layout.  It is the best method to use because it also finds elements that are in group or nested group elements whereas a standard 
            c# method used with <see cref="M:ArcGIS.Desktop.Layouts.Layout.Elements">Elements</see> will only find non-grouped elements.
            </para>
            <para>
            The size and positioning of a page layout can be modified.  First use the <see cref="M:ArcGIS.Desktop.Layouts.Layout.GetPage">GetPage</see> property to retrieve 
            the <see cref="T:ArcGIS.Core.CIM.CIMPage">CIMPage</see>, modify the page properties, and then use <see cref="M:ArcGIS.Desktop.Layouts.Layout.SetPage">SetPage</see> 
            to the apply the changes back to the layout.
            </para>
            </remarks>
            <example>
            The following examples demonstrate different ways of referencing layouts and creating layouts.
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Reference layout project items and their associated layout" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Import a pagx into a project" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a new, basic layout and open it" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a new layout using a modified CIM and open it" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a layout to PDF" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Layout.OperationManager">
            <summary>
            Gets the OperationManager which is responsible for managing the undo/redo stack.
            </summary>
            <value>
            Type: <see cref="T:ArcGIS.Desktop.Framework.OperationManager">OperationManager</see>
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Layout.Name">
            <summary>
            Gets the name of the layout.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see>
            </value>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.SetName(System.String)">
            <summary>
            Sets the name of the layout.   It is important that all layouts have a unique name so they can be easily referenced.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="name"><see cref="T:System.String">String</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutClass.cs" region="Layout_SetName" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.GetDefinition">
            <summary>
            Returns the element's CIM definition.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutClass.cs" region="Layout_GetSetDefinition" lang="CS"></code>
            </example>
            <returns><see cref="T:ArcGIS.Core.CIM.CIMLayout"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.SetDefinition(ArcGIS.Core.CIM.CIMLayout)">
            <summary>
            Applies the changes made to a modified <see cref="T:ArcGIS.Core.CIM.CIMLayout"></see> back to the element on the page layout. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="cimLayout"><see cref="T:ArcGIS.Core.CIM.CIMLayout">CIMLayout</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutClass.cs" region="Layout_GetSetDefinition" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.GetPage">
            <summary>
            Gets the <see cref="T:ArcGIS.Core.CIM.CIMPage">CIMPage</see> for a layout.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <returns><see cref="T:ArcGIS.Core.CIM.CIMPage">CIMPage</see></returns>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutClass.cs" region="Layout_GetSetPage" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.SetPage(ArcGIS.Core.CIM.CIMPage)">
            <summary>
            Applies the changes made to a modified <see cref="T:ArcGIS.Core.CIM.CIMPage">CIMPage</see> to the layout.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="page"><see cref="T:ArcGIS.Core.CIM.CIMPage">CIMPage</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutClass.cs" region="Layout_GetSetPage" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Layout.ProjectID">
            <summary>
            Gets the ID of the project that contains the layout.
            </summary>
            <value>
            Type: <see cref="T:System.Int32">Integer</see>
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Layout.URI">
            <summary>
            Gets the path of the layout in the project.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see>
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Layout.Elements">
            <summary>
            Gets the collection of elements in a GroupElement.
            </summary>
            <value>
            Type: <see cref="T:System.Collections.ReadOnlyCollectionBase">ReadOnlyCollectionBase</see>
            </value>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.GetSelectedElements">
            <summary>
            Get a collection of the selected layout elements.
            </summary>
            <returns><see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.FindElement(System.String)">
            <summary>
            Finds an element with the given name on the page layout.
            </summary>
            <param name="name"><see cref="T:System.String">String</see></param>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.Element">Element</see></returns>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutClass.cs" region="Layout_FindElement" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.FindElements(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds the elements recursively with the given names on the page layout.
            </summary>
            <param name="elementNames">The names of the elements to find. Cannot be null</param>
            <remarks>Find recurses nested groups to find the given elements.</remarks>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> or an empty list if no elements are found</returns>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: elementNames</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.GetElements">
            <summary>
            Get the collection of elements from the page layout. Nesting
            within <see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/> <b>is</b> preserved.
            </summary>
            <remarks>Use <see cref="M:ArcGIS.Desktop.Layouts.Layout.GetElementsAsFlattenedList"/> to flatten the collection
            otherwise enumerate any returned <see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/> individually.<br/>
            Elements are returned in Z order. The 0th Element is at the back or 'bottom'
            and the 'Nth' element is at the front or 'top'.</remarks>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.GetElementsAsFlattenedList">
            <summary>
            Get the collection of <see cref="T:ArcGIS.Desktop.Layouts.Element"/> from the page layout as a flattened list.
            Nested groups within <see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/> are <b>not</b> preserved.
            </summary>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.SelectElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Select the element within the page layout.
            </summary>
            <param name="element">The element to select. Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException">The value cannot be null: element</exception>
            <exception cref="T:System.ArgumentException">element(s) must belong to layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.SelectElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
             <summary>
             Set the selected elements for the page layout.
             </summary>
             <param name="elements">The elements to be selected. If null then all elements are unselected.</param>
             <remarks>If a child of a group element is provided in the list of elements to be
            selected in <i>addition</i> to its parent then the parent is the element selected.</remarks>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.ClearElementSelection">
            <summary>
            Clear all selected elements in the page layout.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.UnSelectElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Unselect the element on the page layout.
            </summary>
            <param name="element">The selected element to unselect. Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.UnSelectElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Unselect the elements on the page layout.
            </summary>
            <param name="elements">The selected elements to unselect. If null then all elements are unselected.</param>
            <remarks>If a child of a group element is provided in the list of elements to be
            unselected in <i>addition</i> to its parent then the parent is the element unselected.<br/></remarks>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.DeleteElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Deletes an element on a page layout.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="element"><see cref="T:ArcGIS.Desktop.Layouts.Element">Element</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutClass.cs" region="Layout_DeleteElement" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.DeleteElements(System.Func{ArcGIS.Desktop.Layouts.Element,System.Boolean})">
            <summary>
            Deletes an array of elements on a page layout.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="predicate">Represents the method that defines a set of criteria and determines whether the specified object meets those criteria.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutClass.cs" region="Layout_DeleteElements" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.DeleteElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Deletes the elements from a page layout.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elements">The elements being removed</param>
            <remarks>If elements is null then all elements are deleted.<br/>
            If a group element is provided in the list of elements to be deleted then the
            group element and all its children will be deleted.<br/>If a child of a group element is
            provided in the list in <i>addition</i> to its parent then the parent takes precedence
            (i.e. the entire group element is deleted and not just <i>that</i> child)</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.GroupElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Group the collection of elements.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elements">The elements to be grouped.</param>
            <remarks>If any group elements are present in the input collection, they must have the
            same parent or a <see cref="T:System.ArgumentException">element parents must be the same and non-null</see>
            will be thrown.</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/> containing the grouped elements</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
            <exception cref="T:System.ArgumentException">element parents must be the same and non-null</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.UnGroupElement(ArcGIS.Desktop.Layouts.GroupElement)">
            <summary>
            Ungroup the elements contained in 'group'.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="group">The group element whose elements will be ungrouped</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: group</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.UnGroupElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.GroupElement})">
            <summary>
            Ungroup the elements contained in 'groups'.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="groups">The group elements whose elements are to be ungrouped</param>
            <remarks>All group elements in the input collection must have the same parent.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">groups cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
            <exception cref="T:System.ArgumentException">element parents must be the same and non-null</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.CopyElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Copy the elements into the page layout.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elements">The elements to be copied</param>
            <remarks>Only elements from a single page layout can be copied at one time.
            To copy elements from page layouts, CopyElements must be called each time.<br/>
            If a group element is provided in the list of elements to be copied then the
            group element and all its children will be copied.<br/>If a child of a group element is
            provided in the list in <i>addition</i> to its parent then the parent takes precedence
            (i.e. the entire group element is copied and not just <i>that</i> child).<br/>
            If a child element of a group element is provided in the list but its parent is
            <i>not</i> then only the child element is copied. The parent of the copied
            element will become the target group element.</remarks>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements must belong to a layout</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.CopyElements(ArcGIS.Desktop.Layouts.GroupElement,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Copy the elements into a group element within the page layout.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="group">A group element within the page layout</param>
            <param name="elements">The elements to be copied</param>
            <remarks>The group element must belong to the graphics layer into which the elements
            are being copied. Only elements from a single page layout can be copied at one time.
            To copy elements from multiple page layouts, CopyElements must be called for each layout.<br/>
            If a group element is provided in the list of elements to be copied then the
            group element and all its children will be copied.<br/>If a child of a group element is
            provided in the list in <i>addition</i> to its parent then the parent takes precedence
            (i.e. the entire group element is copied and not just <i>that</i> child).<br/>
            If a child element of a group element is provided in the list but its parent is
            <i>not</i> then only the child element is copied. The parent of the copied
            element will become the target group element.</remarks>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements must belong to a layout</exception>
            <exception cref="T:System.ArgumentException">elements must belong to source layout 'URI'</exception>
            <exception cref="T:System.ArgumentException">group element must belong to target layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.CanBringForward(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Checks whether the given element can be moved forward within its parent's
            element collection. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="element">The element to check</param>
            <remarks>Element z order is relative to the element collection within their
            parent. The bottom element has a z order of 0. The top element has a z order of N - 1.
            If the element is already at the top 0 false is returned. False can also be returned if
            the element's z order cannot be checked (i.e. the element is not a graphic element, a
            group element, does not belong to the graphics layer, etc.).</remarks>
            <returns>True if the element can be moved forward.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.CanBringForward(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Checks whether the given elements can be moved forward within their parent's
            element collection. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elements">The elements to check</param>
            <remarks>Element z order is relative to the element collection within their
            parent. The bottom element has a z order of 0. The top element has a z order of N - 1.
            All elements must have the same parent or false is returned. If any one of the elements
            is already at the top of their parent's element collection, false is returned. False can
            also be returned if any of the elements' z order cannot be checked (e.g. an element
            does not belong to the page layout, etc.).</remarks>
            <returns>True if the elements can be moved forward.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.CanSendBackward(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Checks whether the given element can be moved back within its parent's
            element collection. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="element">The element to check</param>
            <remarks>Element z order is relative to the element collection within their
            parent. The bottom element has a z order of 0. The top element has a z order of N - 1.
            If the element is already at the bottom of its parent's element collection, false is returned.
            False can also be returned if the element's z order cannot be checked (e.g. an element
            does not belong to the page layout, etc.).</remarks>
            <returns>True if the element can be moved back.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.CanSendBackward(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Checks whether the given elements can be moved back within their parent's
            element collection. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elements">The elements to check</param>
            <remarks>Element z order is relative to the element collection within their
            parent. The bottom element has a z order of 0. The top element has a z order of N - 1.
            All elements must have the same parent or false is returned. If any one of the elements
            is already at the bottom of their parent's element collection, false is returned.
            False can also be returned if any of the elements' z order cannot be checked (e.g. an element
            does not belong to the page layout, etc.).</remarks>
            <returns>True if the elements can be moved back.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.BringToFront(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Bring the element to the front of its parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="element">The element to bring to the front</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Layouts.Layout.CanBringForward(ArcGIS.Desktop.Layouts.Element)"/> to check whether an element
            can be brought forward. Element z order can only be changed relative to its parent's element
            collection. The top element will have a z order of N - 1 where N is equal to
            the number of elements within the element parent's element collection. Check
            z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
            <exception cref="T:System.ArgumentException">elements must belong to graphicsLayer</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.BringToFront(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Bring the elements to the front of their parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elements">The elements to bring to the front</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Layouts.Layout.CanBringForward(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})"/> to
            check whether the elements can be brought forward.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
            <exception cref="T:System.ArgumentException">element parents must be the same and non-null</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.BringForward(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Bring the element forward within its parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="element">The element to bring forward</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Layouts.Layout.CanBringForward(ArcGIS.Desktop.Layouts.Element)"/> to check
            whether an element can be brought forward.Element z order can only be changed
            relative to its parent's element collection. The top element will have a z order
            of N - 1 where N is equal to the number of elements within the element parent's
            element collection. Check z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.BringForward(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Bring the elements forward within their parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elements">The elements to bring forward</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Layouts.Layout.CanBringForward(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})"/> to
            check whether the elements can be brought forward. Element z order can only be changed relative to their parent's element
            collection. All elements must have the same parent. The top element will have a
            z order of N - 1 where N is equal to the number of elements within the element parent's
            element collection. Check individual element z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
            <exception cref="T:System.ArgumentException">element parents must be the same and non-null</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.SendToBack(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Send the element to the back of its parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="element">The element to send to the back</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Layouts.Layout.CanSendBackward(ArcGIS.Desktop.Layouts.Element)"/> to check whether an element
            can be sent back. Element z order can only be changed relative to its parent's element
            collection. The bottom element will have a z order of 0 within the element parent's
            element collection. Check z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.SendToBack(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Send the elements to the back of their parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elements">The elements to send to the back</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Layouts.Layout.CanSendBackward(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})"/> to
            check whether the elements can be sent back. Element z order can only be changed relative to
            their parent's element collection. All elements must have the same parent. The bottom
            element will have a z order of 0 within the element parent's element collection. Check
            individual element z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
            <exception cref="T:System.ArgumentException">element parents must be the same and non-null</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.SendBackward(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Send the element backward within its parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="element">The element to send backward</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Layouts.Layout.CanSendBackward(ArcGIS.Desktop.Layouts.Element)"/> to check whether an element
            can be sent backward. Element z order can only be changed relative to its parent's element
            collection. The bottom element will have a z order of 0 within the element parent's
            element collection. Check z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.SendBackward(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Send the elements backward within their parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elements">The elements to send backward</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Layouts.Layout.CanSendBackward(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})"/> to
            check whether the elements can be sent backward. Element z order can only be changed relative to their parent's element
            collection. All elements must have the same parent. The bottom element will have a
            z order of 0 within the element parent's element collection. Check individual
            element z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
            <exception cref="T:System.ArgumentException">element parents must be the same and non-null</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.SaveAsFile(System.String,System.Boolean)">
            <summary>
            Exports a layout to a new layout (.pagx) file. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="fullPathToPagXFile">A string representing the full path of the output file.</param>
            <param name="overwrite">Set to true to overwrite the mapx file if it already exists</param>
            <remarks>A copy of the layout's definition is saved to file.  A layout file can be imported into 
            another project using the <see cref="T:ArcGIS.Desktop.Core.ItemFactory">ItemFactory</see> Class.
            A suffix of .pagx is added if the filename does not have one or has a different
            suffix. To overwrite an existing file of the same name, set overwrite = true.</remarks>
            <exception cref="T:System.ArgumentNullException">value fullPathToPagXFile cannot be null</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutClass.cs" region="Layout_SaveAsFile" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.Export(ArcGIS.Desktop.Mapping.ExportFormat)">
            <summary>
            Export a layout to a variety of formats. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="exportFormat"><see cref="T:ArcGIS.Desktop.Mapping.ExportFormat">ExportFormat</see></param>
            <remarks>
            <para>This overload is intended to export a single page layout to a supported output file format.  Even if a map series is
            present, if this overload is chosen, the current layout page will be exported to file.</para>
            <para>Each <see cref="T:ArcGIS.Desktop.Mapping.ExportFormat">ExportFormat</see> has its own set of configurable set of parameters such as
            OutputFileName and Resolution. You must first create the export format and then provide that as the only required input parameter.</para>
            </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            Below is a simple PDF exmaple but multiple examples are provided with each supported format derived from <see cref="T:ArcGIS.Desktop.Mapping.ExportFormat"/>.
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a layout to PDF" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.Export(ArcGIS.Desktop.Mapping.ExportFormat,ArcGIS.Desktop.Layouts.MapSeriesExportOptions)">
            <summary>
            Export pages from a layout's associated map series using a specialized collection of settings. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="exportFormat">Specify one of the following <see cref="T:ArcGIS.Desktop.Mapping.ExportFormat">ExportFormat</see>s.</param>
            <param name="mapSeriesExportOptions">Provide a set of <see cref="T:ArcGIS.Desktop.Layouts.MapSeriesExportOptions">MapSeriesExportOptions</see>.</param>
            <remarks>
            <para>This export overload allows you to export one or more pages associated with a map series to a supported output file format.
            Each <see cref="T:ArcGIS.Desktop.Mapping.ExportFormat">ExportFormat</see> has its own set of configurable parameters such as 
            OutputFileName and Resolution.</para>
            <para>And you must also configure the <see cref="T:ArcGIS.Desktop.Layouts.MapSeriesExportOptions">MapSeriesExportOptions</see> depending on the desired output.</para>  
            </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a map series to single PDF"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a map series to individual TIFF files"  lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.GetMetadata">
            <summary>
            Gets the Layout metadata.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <returns>The xml formatted metadata</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.SetMetadata(System.String)">
            <summary>
            Sets the Layout metadata.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <remarks>The input xml must be a valid metadata document. The Layout metadata must be
            editable. Refer to <see cref="M:ArcGIS.Desktop.Layouts.Layout.GetCanEditMetadata"/>.</remarks>
            <param name="metadataXml">The xml formatted metadata</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.GetCanEditMetadata">
            <summary>
            Gets whether the Layout metadata can be edited or not.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <remarks>Layout metadata is typically editable unless the .aprx is not editable</remarks>
            <returns>True if the metadata is editable</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Layout.MapSeries">
            <summary>
            Gets the map series associated with a layout.
            </summary>
            <remarks>
            A layout can only have one map series set at a time.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.SetMapSeries(ArcGIS.Desktop.Layouts.MapSeries)">
            <summary>
            Sets the map series for a layout. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <remarks>
            This will either associate a new map series to a layout or override an existing map series already associated with the layout because
            a layout can only have one map series active at a time.  
            This method will automatically call <see cref="M:ArcGIS.Desktop.Layouts.Layout.RefreshMapSeries">RefreshMapSeries</see>.
            </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutClass.cs" region="Layout_SetMapSeries" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.RefreshMapSeries">
            <summary>
            Refreshes the map series when the related map data changes. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <remarks>
            <para>
            Refreshing simply re-creates the pages using the current map series parameters. You will want to refresh if one of the following occurs after creating a map series: 
            </para>
            <para>
            1) Features were added to or deleted from the index layer.
            </para>
            <para>
            2) Edits were made to the sort field or name field values
            </para>
            <para>
            3) Edit were made to any field being used by the map series for an index feature that's driving the current geographic extent.
            </para>
            </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutClass.cs" region="Layout_RefreshMapSeries" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.ShowProperties">
            <summary>
            Opens the Layout Properties dialog.
            </summary>
            <remarks>
            This method must be called on the GUI thread and not in the background using QueuedTask.Run.
            </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called on the GUI thread.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutClass.cs" region="Layout_ShowProperties" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.Finalize">
            <exclude>
            
            </exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.Layout.Page">
            <summary>
            Gets the <see cref="T:ArcGIS.Core.CIM.CIMPage"/> for the layout.
            </summary>
            <value>
            Type: <see cref="T:ArcGIS.Core.CIM.CIMPage"/>
            </value>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.ShowPropertiesImpl(System.String)">
            <summary>Shows a property sheet for the layout.</summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.Layout._disposed">
            <summary>Performs cleanup on the layout before it's destroyed.</summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.Dispose">
            <summary>
            Object dispose
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.DoBulkUpdateAsync(System.String[],System.Boolean,System.String,System.Action{ArcGIS.Core.CIM.CIMElement,System.Int32})">
            <summary>
            Convenience method to handle arbitrary updates to the CIM definition of an element. 
            Caller supplies a lambda in which the CIMElement is modified.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.DoBulkUpdate(System.String[],System.Boolean,System.String,System.Action{ArcGIS.Core.CIM.CIMElement,System.Int32})">
            <summary>
            Convenience method to handle arbitrary updates to the CIM definition of an element. 
            Caller supplies a lambda in which the CIMElement is modified.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Layout.DoBulkUpdateAsync(ArcGIS.Desktop.Mapping.IElementContainer,System.String[],System.String,System.Action{ArcGIS.Core.CIM.CIMElement,System.Int32})">
            <summary>
            A version of DoBulkUpdateAsync that can be used for map graphics.
            </summary>
        </member>
        <member name="E:ArcGIS.Desktop.Layouts.Layout.SelectionChanged">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ILayoutFactory">
            <summary>
            Provides access to layout creation members.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ILayoutFactory.CreateLayout(ArcGIS.Core.CIM.CIMPage)">
            <summary>
            Creates a new layout using a defined CIM page.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="cimPage"><see cref="T:ArcGIS.Core.CIM.CIMPage">CIMPage</see></param>
            <returns>Returns <see cref="T:ArcGIS.Desktop.Layouts.Layout"> Layout</see> or a null.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutFactory.cs" region="CreateLayoutExample2" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ILayoutFactory.CreateLayout(System.Double,System.Double,ArcGIS.Core.Geometry.LinearUnit,System.Boolean,System.Double)">
            <summary>
            Creates a layout using a simple set of parameters. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="width">The width of the page layout in page units.</param>
            <param name="height">The height of the page layout in page units.</param>
            <param name="units">Specify the <see cref="T:ArcGIS.Core.Geometry.LinearUnit"> linear units.</see></param>
            <param name="showRulers">An optional <see cref="T:System.Boolean"> boolean</see> to show rulers on the layout.</param>
            <param name="smallestRulerDivision">An optional <see cref="T:System.Double"> double </see> to specify smallest ruler division.</param>
            <returns>Returns <see cref="T:ArcGIS.Desktop.Layouts.Layout"> Layout</see> or a null.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutFactory.cs" region="CreateLayoutExample1" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ILayoutFactory.CopyLayout(ArcGIS.Desktop.Layouts.Layout)">
            <summary>
            Creates a new layout by copying another layout.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="sourceLayout"><see cref="T:ArcGIS.Core.CIM.CIMLayout">CIMPage</see></param>
            <returns>Returns <see cref="T:ArcGIS.Desktop.Layouts.Layout"> Layout</see> or a null.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: sourceLayout</exception>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutFactory">
            <summary>
            Provides methods to create new layout project items.
            </summary>
            <remarks>
            <para>
            Creating a new layout simply generates a new layout project item that appears in the Layouts folder in the Contents pane.  
            The next logical steps are to create new layout elements.  Refer to the <see cref="T:ArcGIS.Desktop.Layouts.ElementFactory">ElementFactory</see>
            to add new elements to layout.
            </para>
            <para>
            A new layout project item is not automatically opened in a layout view pane.  
            Use methods in the <see cref="T:ArcGIS.Desktop.Core.LayoutFrameworkExtender"> LayoutFrameworkExtender </see> to open a layout project item in a pane.
            </para>
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutFactory.cs" region="CreateLayoutExample1" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutFactory.cs" region="CreateLayoutExample2" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutFactory.Instance">
            <summary>
            Gets the singleton instance for ILayoutFactory
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutFactory.CreateLayout(ArcGIS.Core.CIM.CIMPage)">
            <summary>
            Creates a new layout using a defined CIM page.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="page"><see cref="T:ArcGIS.Core.CIM.CIMPage">CIMPage</see></param>
            <returns>Returns <see cref="T:ArcGIS.Desktop.Layouts.Layout"> Layout</see> or a null.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutFactory.cs" region="CreateLayoutExample1" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutFactory.CreateLayout(System.Double,System.Double,ArcGIS.Core.Geometry.LinearUnit,System.Boolean,System.Double)">
            <summary>
            Creates a layout using a simple set of parameters. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="width">The width of the page layout in page units.</param>
            <param name="height">The height of the page layout in page units.</param>
            <param name="units">Specify the <see cref="T:ArcGIS.Core.Geometry.LinearUnit"> linear units.</see></param>
            <param name="showRulers">An optional <see cref="T:System.Boolean"> boolean </see> to show rulers on the layout.</param>
            <param name="smallestRulerDivision">An optional <see cref="T:System.Double"> double </see> to specify smallest ruler division.</param>
            <returns>Returns <see cref="T:ArcGIS.Desktop.Layouts.Layout"> Layout</see> or a null.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutFactory.cs" region="CreateLayoutExample2" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutFactory.CopyLayout(ArcGIS.Desktop.Layouts.Layout)">
            <summary>
            Creates a layout by copying another layout. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="sourceLayout">The layout to copy.</param>
            <returns>Returns <see cref="T:ArcGIS.Desktop.Layouts.Layout"> Layout</see> or a null.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: sourceLayout</exception>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutsModule">
            <summary>
            Represents the layouts module.
            </summary>
            <remarks>
            <para>
            Modules are what make the framework system extensible.  The framework loads modules and when your module loads, everything in it loads as well, for example, 
            commands, widgets, a custom about panel, and so on.
            </para>
            <para> 
            The ONLY member that you can use is <see cref="P:ArcGIS.Desktop.Layouts.LayoutsModule.Current">Current</see>.  The API reference help displays many more protected 
            members that are inherited from <see cref="T:ArcGIS.Desktop.Framework.Contracts.Module"/> but these are not available to the core layout module. They would only be 
            accessible if you were to create your own custom module.
            </para>
            </remarks>
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutsModule.Current">
            <summary>
            Returns a reference to the current layout module in the application.  There is only one layout module.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.CanUnload">
            <exclude>
            
            </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.OnPaneClosing(ArcGIS.Desktop.Framework.Contracts.Pane,ArcGIS.Desktop.Framework.Events.CancelRoutedEventArgs)">
            <exclude>
            
            </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.OnPaneClosed(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <exclude>
            
            </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.OnPaneDeactivated(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <exclude>
            
            </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.OnPaneOpened(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <exclude>
            
            </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.OnPaneActivated(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <exclude>
            
            </exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutsModule.ArcGIS#Desktop#Internal#Core#ILayoutSettingsInternal#LastToolActive">
            <summary>
            Gets and sets whether the insert tool stays active or reverts
            back to select after adding a new element.
            </summary>
            <remarks>
            Any change to this property is persisted in the user.config</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.CreateLayoutAsync(ArcGIS.Core.CIM.CIMPage,ArcGIS.Desktop.Framework.Threading.Tasks.Progressor)">
            <summary>Main function used to create a new layout.</summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.GetLayoutPanes(ArcGIS.Desktop.Layouts.Layout)">
            <summary>Gets the layout panes currently open in the application.</summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutsModule.ActiveLayoutView">
            <summary>Gets the layout pane currently showing in the application.</summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.Initialize">
            <summary>Called by framework to initialize module.</summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutsModule.Layouts">
            <summary>Gets the layouts currently open in the application.</summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.GetActiveMapScale">
            <summary>
            Gets the scale of the active map (the map pane itself, or the activated map frame). Heavily used in map graphics code paths. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.GetActiveMapExtent">
            <summary>
            Gets the extent of the active map (the map pane itself, or the activated map frame).
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.CopyLayoutAsync(System.String,ArcGIS.Desktop.Framework.Threading.Tasks.Progressor)">
            <summary>Copy the specified layout and return the new name and catalog path.</summary>
            TODO: could we return Layout object instead ?
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.CreateLayoutModel(ArcGIS.Core.CIM.CIMPage)">
            <summary>Starts a task that creates a new layout in the project.</summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.Uninitialize">
            <summary>Performs cleanup on the module before it's destroyed.</summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutsModule.LayoutPaneOpener">
            Opens a new pane on behalf of BeginOpenLayoutView, and remains alive long enough to initialize it.
            It works by listening for the OnPaneInitialized event; when this event is fired,
            we signal our native kernel event, which native code will wait on.
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutsModule.LayoutPaneCloser">
            Waits for the active pane to load on behalf of BeginCloseViews, and remains alive long enough to initialize it.
            It works by listening for the OnPaneInitialized event; when this event is fired,
            we signal our native kernel event, which native code will wait on.
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.CanCutAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.CutAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.CanCopyAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.CopyAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.CanPasteAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.PasteAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.CanPasteSpecialAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.PasteSpecialAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.CanDeleteAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutsModule.DeleteAsync">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ILayoutPane">
            <summary>
            Represents a pane which contains a layout view.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ILayoutPane.Caption">
            <summary>
            Gets or sets the caption for the pane the way it appears on the tab.  
            </summary>
            <remarks>By default the caption is equal to the name of the layout.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ILayoutPane.LayoutView">
            <summary>
            Gets the layout view contained within the pane.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ILayoutPane.ViewState">
            <summary>
            Gets the definition of the view within the pane.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutView">
            <summary>
            Represents the view of layout in a pane.
            </summary>
            <remarks>
            <para>
            A project can contain multiple layouts.  A layout view is a pane that displays the view of a layout.  
            Layout views are the primary interface used to display, navigate, and select layout elements.  
            The layout being visualized in the view can be accessed via the <see cref="P:ArcGIS.Desktop.Layouts.LayoutView.Layout">Layout </see> property.
            </para>
            <para>
            There can be multiple layout views open at a given time, but there can only be one active layout view.  
            The active layout view will set the context for the ribbon and many of the dock panes in the application.
            The <see cref="P:ArcGIS.Desktop.Layouts.LayoutView.Active">Active </see> property will return null if there is no active layout view.
            </para>
            <para>
            The layout view has several "ZoomTo" nagivation methods and it also provides the context for managing selected items in the Contents pane.  
            For example, the <see cref="M:ArcGIS.Desktop.Layouts.LayoutView.GetSelectedElements">GetSelectedElements </see> method returns a collection of selected page layout elements.
            </para>
            </remarks>
            <example>
            The following examples demonstrate different ways of working with layout views.
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Open a layout project item in a new view" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\Prosnippets.cs" region="Activate an already open layout view" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\Prosnippets.cs" region="Reference the active layout view" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutViewClassExample1" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.#ctor">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutView.Active">
            <summary>
            Gets the active layout view. 
            </summary>
            <remarks>Returns null if there is no active layout view.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutView.ActiveElementContainer">
            <summary>
            Gets the active element container
            </summary>
            <remarks>Returns null if there is no active element container</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutView.ActiveMapFrame">
            <summary>
            Gets the active map frame on a layout.
            </summary>
            <remarks>
            Returns null if there is no active map frame.  If there are multiple map frames in a layout, the active map frame is the 
            one that is bolded in the contents pane.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutView.Layout">
            <summary>
            Gets the layout associated with the layout view.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutView.Extent">
            <summary>
            Gets the current extent of the layout view.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutView.ZoomPercentage">
            <summary>
            Gets the current zoom percentage of the layout view.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutView.IsReady">
            <summary>
            Gets a value that indicates whether the LayoutView can be accessed. This property is <c>false</c> while the layout view processes major operations. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutView.DrawingPaused">
            <summary>
            Gets or sets the paused state on the map view.
            </summary>
            <remarks>
            While the <see cref="P:ArcGIS.Desktop.Layouts.LayoutView.DrawingPaused">DrawingPaused</see> property is <c>true</c>, data will not be accessed for drawing.
            Changing the value from <c>true</c> to <c>false</c> will signal a refresh as well as allowing data to be accessed.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ZoomTo(ArcGIS.Core.Geometry.Geometry,System.Nullable{System.TimeSpan})">
            <summary>
            Zoom the layout view to the extent defined by a geometry.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="geometry">The geometry defining the extent in which to pan.</param>
            <param name="duration">The amount of time to navigate the view to the new camera position. If null it uses the default navigation duration.</param>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_ZoomTo_Extent" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ZoomToWholePage(System.Nullable{System.TimeSpan})">
            <summary>
            Zoom the layout view to the whole page.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="duration">The amount of time to navigate the view to the new camera position. If null it uses the default navigation duration.</param>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_ZoomTo_WholePage" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ZoomToPageWidth(System.Nullable{System.TimeSpan})">
            <summary>
            Zoom the layout view to the width of the page.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="duration">The amount of time to navigate the view to the new camera position. If null it uses the default navigation duration.</param>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_ZoomTo_PageWidth" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ZoomTo100Percent(System.Nullable{System.TimeSpan})">
            <summary>
            Zoom to the layout view to 100 percent.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="duration">The amount of time to navigate the view to the new camera position. If null it uses the default navigation duration.</param>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_ZoomTo_Percent" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ZoomToSelectedElements(System.Nullable{System.TimeSpan})">
            <summary>
            Zoom the layout view to the extent of the selected elements.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="duration">The amount of time to navigate the view to the new camera position. If null it uses the default navigation duration.</param>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_ZoomTo_SelectedElements" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ZoomToPrevious(System.Nullable{System.TimeSpan})">
            <summary>
            Zoom the layout view to the previous extent.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="duration">The amount of time to navigate the view to the new camera position. If null it uses the default navigation duration.</param>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_ZoomTo_Previous" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ZoomToNext(System.Nullable{System.TimeSpan})">
            <summary>
            Zoom the layout view to the next extent.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="duration">The amount of time to navigate the view to the new camera position. If null it uses the default navigation duration.</param>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_ZoomTo_Next" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ZoomToElement(ArcGIS.Desktop.Layouts.Element,System.Nullable{System.TimeSpan})">
            <summary>
            Zoom to the extent of the element.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="element">The element to zoom to.</param>
            <param name="duration">The amount of time to navigate the view to the new camera position. If null it uses the default navigation duration.</param>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">The value cannot be null: element</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ZoomToElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element},System.Nullable{System.TimeSpan})">
            <summary>
            Zoom to the extent of the elements.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="elements">The set of elements to zoom to.</param>
            <param name="duration">The amount of time to navigate the view to the new camera position. If null it uses the default navigation duration.</param>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">The value cannot be null: elements</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.SelectElements(ArcGIS.Core.Geometry.Geometry,ArcGIS.Desktop.Mapping.SelectionCombinationMethod,System.Boolean)">
            <summary>
            Select elements that visually intersect a geometry.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="geometry">The selection geometry</param>
            <param name="method">Combination method used in selection operation</param>
            <param name="isWhollyWithin">True to only select elements within the selection geometry (and not intersecting it)</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">Geometry cannot be null or empty</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.GetSelectedElements">
            <summary>
            Returns a collection of selected layout elements.
            </summary>
            <returns>A collection of page layout elements.</returns>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_GetSelection" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.SelectElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Set the element selected for the layout view.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="element">The element to select. Cannot be null.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">The value cannot be null: element</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.SelectElements(System.Collections.Generic.IReadOnlyList{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Set the selected layout elements for the layout view.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elements">A list of existing layout elements.</param>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\layoutViewClass.cs" region="LayoutView_SetSelection" lang="CS"></code>
            </example>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.SelectAllElements">
            <summary>
            Select all layout elements in a layout view.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>  
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_SelectAll" lang="CS"></code>
            </example>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ClearElementSelection">
            <summary>
            Clear all layout elements in the layout view.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_ClearSelection" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.UnSelectElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Unselect the element within the layout view.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="element">The selected element to unselect. Cannot be null</param>
            <remarks>The layout view displaying the elements should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.UnSelectElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Unselect the elements within the layout view.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elements">The selected elements to unselect. If null then all elements are unselected</param>
            <remarks>If a child of a group element is provided in the list of elements to be
            unselected in <i>addition</i> to its parent then the parent is the element unselected.<br/>
            The layout view displaying the elements should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements must belong to layout 'URI'</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.PageToClient(ArcGIS.Core.Geometry.Coordinate2D)">
            <summary>
            Converts a point in page coordinates to a point in client coordinates.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <remarks>Page coordinates must be in the current units of the page.
            Client coordinates will be in pixels relative to the top-left corner of the view.
            If either page coordinate value is <b>double.NaN</b> then a point with X, Y both set
            to <see cref="F:System.Double.NaN"/> is returned.</remarks>
            <param name="pageCoord">The point in page coordinates</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <returns><see cref="T:System.Windows.Point"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ClientToPage(System.Windows.Point)">
            <summary>
            Converts a point in client coordinates to a point in page coordinates.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="clientPoint">The point in client coordinates</param>
            <remarks>Client coordinates must be in pixels relative to the top-left corner of the view.
            If either client coordinate value is <b>double.NaN</b> then a
            coordinate with X, Y both set  to <see cref="F:System.Double.NaN"/> is returned.
            Page coordinates will be in the current units of the page.</remarks>
            <returns>The converted point in page coordinates</returns>
            <exception cref="T:System.ArgumentNullException">clientPoint</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.PageToScreen(ArcGIS.Core.Geometry.Coordinate2D)">
            <summary>Converts a point in page coordinates to screen coordinates.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="pageCoord">The point on the page.</param>
            <remarks>Page coordinates must be in the current units of the page.
            If either page coordinate value is <b>double.NaN</b> then a point with X, Y both
            set to <see cref="F:System.Double.NaN"/> is returned.</remarks>
            <returns>The converted point in screen coordinates</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ScreenToPage(System.Windows.Point)">
            <summary>
            Converts a point in screen coordinates to a point in page coordinates.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="screenPoint">The point value in screen coordinates.</param>
            <remarks>Page coordinates will be in the current units of the page.
            If either screen coordinate value is <b>double.NaN</b> then a coordinate with
            X, Y both set to <see cref="F:System.Double.NaN"/> is returned.</remarks>
            <returns>The converted point in page coordinates.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ClientToScreen(System.Windows.Point)">
            <summary>
            Converts a point in screen coordinates to a point in client coordinates.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="clientPoint">The point value in client coordinates.</param>
            <remarks>Client coordinates must be in pixels relative to the top-left
            corner of the view. If either client coordinate value is <b>double.NaN</b> then a
            point with X, Y both set to <see cref="F:System.Double.NaN"/> is returned.</remarks>
            <returns>The converted point in screen coordinates.</returns>
            <exception cref="T:System.ArgumentNullException">clientPoint</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.ScreenToClient(System.Windows.Point)">
            <summary>
            Converts a point in screen coordinates to a point in client coordinates.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="screenPoint">The point value in screen coordinates.</param>
            <remarks>Client coordinates will be in pixels relative to the top-left corner of the view.
            If either screen coordinate value is <b>double.NaN</b> then a point with
            X, Y both set to <see cref="F:System.Double.NaN"/> is returned.</remarks>
            <returns>The converted point in client coordinates.</returns>
            <exception cref="T:System.ArgumentNullException">screenPoint</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.GetViewSize">
            <summary>
            Returns the current size of the view in pixels.
            </summary>
            <remarks>This method must be called on the UI thread</remarks>
            <returns>The current size of the view in pixels.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutView.Refresh">
            <summary>
            Force the layout view to redraw. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_Refresh" lang="CS"></code>
            </example>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.Legend">
            <summary>
            Represents a legend element on a page layout.
            </summary>
            <remarks>
            There are currently no additional members but this class can be used to determine the type of 
            <see cref="T:ArcGIS.Desktop.Layouts.MapSurround">MapSurround</see> and element may be.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a legend for a specific map frame"  lang="CS"></code>
            </example> 
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Legend.GetStyleAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.Legend.GetStyleType">
            <exclude> </exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.MapFrame">
            <summary>
            Represents a map frame on a page layout.
            </summary>
            <remarks>
            <para>
            The MapFrame class primarily manages the placement of maps and scenes on a page layout. You can use <see cref="P:ArcGIS.Desktop.Layouts.MapFrame.Map">Map</see> 
            and <see cref="M:ArcGIS.Desktop.Layouts.MapFrame.SetMap(ArcGIS.Desktop.Mapping.Map)">SetMap</see> members to get and set the <see cref="T:ArcGIS.Desktop.Mapping.Map">Map</see> associated with a MapFrame.  
            </para>
            <para>
            The <see cref="M:ArcGIS.Desktop.Layouts.MapFrame.Export(ArcGIS.Desktop.Mapping.ExportFormat)">Export</see> method allows you to export only the contents of a map frame instead of, for example, exporting an 
            entire page layout.
            </para>
            <para>
            If you want to change the geographic extent within a map frame, you can use the <see cref="P:ArcGIS.Desktop.Layouts.MapFrame.Camera">Camera</see> and
            <see cref="M:ArcGIS.Desktop.Layouts.MapFrame.SetCamera">SetCamera</see> members to get and set the <see cref="T:ArcGIS.Desktop.Mapping.Camera">Camera</see> associated with 
            a MapFrame. <see cref="M:ArcGIS.Desktop.Mapping.MapView.SetCamera">SetCamera</see> is an overloaded method that allows you to change the map frame extent to a camera 
            position, a bookmark location, and so on.
            </para>
            </remarks>
            <example>
            The following examples demonstrate how to work with a map frame.
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a map frame and zoom to a bookmark"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Apply a background color to a MapFrame element"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a legend for a specific map frame"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Change map frame camera settings"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Zoom map frame to extent of a single layer"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Change map frame extent to selected features in multiple layers"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a map frame to JPG"  lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapFrame.Map">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Mapping.Map">Map</see> associated with the MapFrame.
            </summary>
            <value>
            Type: <see cref="T:ArcGIS.Desktop.Mapping.Map">Map</see>
            </value>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.SetMap(ArcGIS.Desktop.Mapping.Map)">
            <summary>
            Sets the <see cref="T:ArcGIS.Desktop.Mapping.Map">Map</see> associated with the MapFrame.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="map"><see cref="T:ArcGIS.Desktop.Mapping.Map">Camera</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Change the map associated with a map frame"  lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.GetMapView(ArcGIS.Desktop.Layouts.LayoutView)">
             <summary>
             Gets the map Frame's viewer on the specified layout pane.  
             </summary>
             <remarks>
             Note: the layout pane containing the viewer must be open. To navigate the map frame without 
             an open layout pane, use the map frame's camera instead.
             </remarks>
             <param name="layoutView"></param>
             <returns>Returns a <see cref="T:ArcGIS.Desktop.Mapping.MapView">MapView</see>.</returns>
            <example>
             <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export the map view associated with a map frame to BMP"  lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapFrame.Camera">
            <summary>
            Gets the camera settings associated with the map frame.
            </summary>
            <value>
            Type: <see cref="T:ArcGIS.Desktop.Mapping.Camera">Camera</see>
            </value>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.GetAutoCamera">
            <summary>
            Gets the auto camera associated with the map frame
            </summary>
            <remarks>The auto camera is used to set map frame display constraints</remarks>
            <returns><see cref="P:ArcGIS.Desktop.Layouts.MapFrame.CIMAutoCamera"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.ValidateAutoCamera(ArcGIS.Core.CIM.CIMAutoCamera)">
            <summary>
            Validates the input CIMAutoCamera for the given <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.Source"/> and
            <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.AutoCameraType"/> values. This method must be called on the MCT.
            Use QueuedTask.Run.
            </summary>
            <param name="autoCamera">The auto camera to validate</param>
            <remarks>An auto camera is used to set map frame display constraints. Display constraints are
            used to set limits on the map extent within the map frame. Refer to
            <a href="https://pro.arcgis.com/en/pro-app/latest/help/layouts/customizing-your-map-extent.htm">
            Map frame constraints</a> in the Pro product help for more information on constraints.
            Only required settings for the given AutoCameraSource will be validated. Optional,
            or "non-required", settings are ignored (eg autoCamera.Margin). Validation criteria differ
            depending on the <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.Source"/> and <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.AutoCameraType"/>
            values. The criteria are as follows:<br/>
             o <see cref="F:ArcGIS.Core.CIM.AutoCameraSource.None"/>: there are no required settings. An autocamera
             with source value AutoCameraSource.None is always considered valid.<br/>
             o <see cref="F:ArcGIS.Core.CIM.AutoCameraSource.Fixed"/>: autoCamera.<b>AutoCameraType</b> is evaluated as follows:<br/>
             o   <see cref="F:ArcGIS.Core.CIM.AutoCameraType.Extent"/>: <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.Extent"/> must be present.
             If <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.IntersectLayerPath"/> is specified it must be the URI of a valid layer
             in the mapframe's map.<br/>
             o   <see cref="F:ArcGIS.Core.CIM.AutoCameraType.Center"/>: <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.Camera"/> must be present.
             If <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.IntersectLayerPath"/> is specified it must be the URI of a valid layer
             in the mapframe's map.<br/>
             o   <see cref="F:ArcGIS.Core.CIM.AutoCameraType.CenterAndScale"/>: <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.Camera"/> must be present.<br/>
             o   <see cref="F:ArcGIS.Core.CIM.AutoCameraType.Scale"/>: <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.Camera"/> must be present.<br/>
             Note: the X,Y of the camera, when present, must fall within the domain of the mapframe's map spatial reference.
             o <see cref="F:ArcGIS.Core.CIM.AutoCameraSource.MapFrameLink"/>: autoCamera.<b>AutoCameraType</b> is evaluated as follows:<br/>
             o   <see cref="F:ArcGIS.Core.CIM.AutoCameraType.Extent"/>:<br/>
             o   <see cref="F:ArcGIS.Core.CIM.AutoCameraType.Center"/>:<br/>
             <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.MapFrameLinkName"/> must be present and point to a valid map frame in the same
             layout other than itself. If <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.IntersectLayerPath"/> is specified it must be
             the URI of a valid layer in the mapframe's map.<br/>
             o   <see cref="F:ArcGIS.Core.CIM.AutoCameraType.CenterAndScale"/>:<br/>
             o   <see cref="F:ArcGIS.Core.CIM.AutoCameraType.Scale"/>:<br/>
             <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.MapFrameLinkName"/> must be present and point to a valid
            map frame in the same layout other than itself<br/>
             o <see cref="F:ArcGIS.Core.CIM.AutoCameraSource.MapSeriesLink"/> A map series must be present in the layout. It can be
             enabled or disabled. autoCamera.<b>AutoCameraType</b> is evaluated as follows:<br/>
             o   <see cref="F:ArcGIS.Core.CIM.AutoCameraType.Extent"/>:<br/>
             o   <see cref="F:ArcGIS.Core.CIM.AutoCameraType.Center"/>:<br/>
             If <see cref="P:ArcGIS.Core.CIM.CIMAutoCamera.IntersectLayerPath"/> is specified it must be the URI of a valid layer
             in the mapframe's map.<br/>Note:Extent and Camera properties are ignored.<br/>
             o   <see cref="F:ArcGIS.Core.CIM.AutoCameraType.CenterAndScale"/>: invalid autoCamera.AutoCameraType.<br/>
             o   <see cref="F:ArcGIS.Core.CIM.AutoCameraType.Scale"/>: invalid autoCamera.AutoCameraType.<br/>
             </remarks>
            <returns>True if the autocamera is valid for this mapframe.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.SetAutoCamera(ArcGIS.Core.CIM.CIMAutoCamera)">
            <summary>
            Sets the auto camera for the map frame display constraints. This method must be called on the MCT.
            Use QueuedTask.Run.
            </summary>
            <param name="autoCamera">The auto camera to set</param>
            <remarks>Use the auto camera to set map frame display constraints. Display constraints are
            used to set limits on the map extent within the map frame. Refer to
            <a href="https://pro.arcgis.com/en/pro-app/latest/help/layouts/customizing-your-map-extent.htm">
            Map frame constraints</a> in the Pro product help for more information on constraints.
            Attempting to set a <see cref="P:ArcGIS.Desktop.Layouts.MapFrame.CIMAutoCamera"/> will <b>fail</b> with an exception in the
            following situations:<br/>
            o The map frame is empty or does not contain a 2D map.<br/>
            o The map frame is currently linked to a layout  map series. Refer to <see cref="M:ArcGIS.Desktop.Layouts.MapFrame.IsMapSeriesMapFrame"/>.<br/>
            o The autoCamera is <b>not</b> valid. Use <see cref="M:ArcGIS.Desktop.Layouts.MapFrame.ValidateAutoCamera(ArcGIS.Core.CIM.CIMAutoCamera)"/>.<br/>
            </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">Empty map frame</exception>
            <exception cref="T:System.InvalidOperationException">Map frame contains a scene</exception>
            <exception cref="T:System.InvalidOperationException">Map frame is linked to a map series</exception>
            <exception cref="T:System.ArgumentException">Invalid auto camera</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.IsMapSeriesMapFrame">
            <summary>
            Gets whether this map frame is associated with a layout map series. This method must be
            called on the MCT.  Use QueuedTask.Run.
            </summary>
            <remarks>The map series map frame name is stored in the <see cref="P:ArcGIS.Core.CIM.CIMLayout.MapSeries"/>, if
            present. Enabled status of the map series is ignored. Note: A <see cref="P:ArcGIS.Desktop.Layouts.MapFrame.CIMAutoCamera"/> cannot
            be set on the map series map frame. Refer to <see cref="M:ArcGIS.Desktop.Layouts.MapFrame.SetAutoCamera(ArcGIS.Core.CIM.CIMAutoCamera)"/>.</remarks>
            <returns>True if this is the map frame associated with a layout map series</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.GetViewExtent">
            <summary>
            Gets the current extent of the map frame view.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <remarks>The associated map must be a 2D map
            or null is returned</remarks>
            <returns><see cref="T:ArcGIS.Core.Internal.CIM.Envelope"/> or null if the associated map is a scene</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.GetViewCenter">
            <summary>
            Get the center point of the current extent of the map frame view.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <remarks>Works for 2D or 3D maps associated with the frame</remarks>
            <returns><see cref="T:ArcGIS.Core.Geometry.MapPoint"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.SetCamera(ArcGIS.Desktop.Mapping.Camera)">
            <summary>
            Sets the map frame extent to a camera position. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="camera"><see cref="T:ArcGIS.Desktop.Mapping.Camera">Camera</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <remarks>
            SetCamera will have no effect a map frame's extent being driven by a map series.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Change map frame camera settings"  lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.SetCamera(ArcGIS.Desktop.Mapping.Bookmark)">
            <summary>
            Sets the map frame extent defined in a bookmark. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="bookmark"><see cref="T:ArcGIS.Desktop.Mapping.Bookmark">Bookmark</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <remarks>
            SetCamera will have no effect a map frame's extent being driven by a map series.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MapFrameClass.cs" region="MapFrame_SetCamera_Bookmark"  lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.SetCamera(ArcGIS.Core.Geometry.Envelope)">
            <summary>
            Sets the map frame extent using an envelope. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="extent"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <remarks>
            SetCamera will have no effect a map frame's extent being driven by a map series.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MapFrameClass.cs" region="MapFrame_SetCamera_Envelope"  lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.SetCamera(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Mapping.Layer},System.Boolean)">
            <summary>
            Sets the map frame extent using the extent of multiple layers. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="layers">A list of layers.</param>
            <param name="useSelectedFeatures"></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <remarks>
            SetCamera will have no effect a map frame's extent being driven by a map series.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Change map frame extent to selected features in multiple layers"  lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.SetCamera(ArcGIS.Desktop.Mapping.Layer,System.Boolean)">
            <summary>
            Sets the map frame extent using the a layer's extent. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="layer"><see cref="T:ArcGIS.Desktop.Mapping.Layer">Layer</see></param>
            <param name="useSelectedFeatures"></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <remarks>
            SetCamera will have no effect a map frame's extent being driven by a map series.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Zoom map frame to extent of a single layer"  lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.Export(ArcGIS.Desktop.Mapping.ExportFormat)">
             <summary>
             Export a layout to a variety of formats. This method must be called on the MCT. Use QueuedTask.Run.
             </summary>
             <remarks>
             Multiple examples are provided with each format derived from <see cref="T:ArcGIS.Desktop.Mapping.ExportFormat"/>.
             </remarks>
             <param name="exportFormat"><see cref="T:ArcGIS.Desktop.Mapping.ExportFormat">ExportFormat</see></param>
             <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a map frame to JPG"  lang="CS"></code>
             </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.PageToMap(ArcGIS.Core.Geometry.Coordinate2D)">
            <summary>
            Translates a point in page coordinates to a point in map coordinates.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <remarks>The map coordinates will be in the spatial reference of the map
            associated with the map frame. Page coordinates can only be translated for
            2D maps. If the map frame does not contain a 2D map, an <see cref="T:System.InvalidOperationException"/>
            is thrown. If either page coordinate value is <b>double.NaN</b> then a point with X, Y both set
            to <see cref="F:System.Double.NaN"/> is returned.</remarks>
            <param name="pageCoord">The point in page coordinates</param>
            <returns>A point in map coordinates</returns>
            <exception cref="T:System.InvalidOperationException">Mapframe must contain a 2D map</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.PageToMap(ArcGIS.Core.Geometry.MapPoint)">
            <summary>
            Translates a point in page coordinates to a point in map coordinates.
            This method must be called on the MCT. Use QueuedTask.Run.</summary>
            <param name="pagePoint">The point in page coordinates</param>
            <remarks>The map coordinates will be in the spatial reference of the map
            associated with the map frame. Page coordinates can only be translated for
            2D maps. If the map frame does not contain a 2D map, an <see cref="T:System.InvalidOperationException"/>
            is thrown. If either page coordinate value is <b>double.NaN</b> then a point with X, Y both set
            to <see cref="F:System.Double.NaN"/> is returned.</remarks>
            <returns>A point in map coordinates</returns>
            <exception cref="T:System.InvalidOperationException">Mapframe must contain a 2D map</exception>
            <exception cref="T:System.ArgumentNullException">pagePoint</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.MapToPage(ArcGIS.Core.Geometry.Coordinate2D)">
            <summary>
            Translates a point in map coordinates to a point in page coordinates.
            This method must be called on the MCT. Use QueuedTask.Run.</summary>
            <param name="mapCoord">The point in map coordinates</param>
            <remarks>The map coordinates must be in the spatial reference of the map
            associated with the map frame. Page coordinates can only be translated for
            2D maps. If the map frame does not contain a 2D map, an <see cref="T:System.InvalidOperationException"/>
            is thrown. If either map coordinate value is <b>double.NaN</b> then a point with X, Y both set
            to <see cref="F:System.Double.NaN"/> is returned.</remarks>
            <returns>A point in page coordinates</returns>
            <exception cref="T:System.InvalidOperationException">Mapframe must contain a 2D map</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.MapToPage(ArcGIS.Core.Geometry.MapPoint)">
            <summary>
            Translates a point in map coordinates to a point in page coordinates.
            This method must be called on the MCT. Use QueuedTask.Run.</summary>
            <param name="mapPoint">The point in map coordinates</param>
            <remarks>The map coordinates must be in the spatial reference of the map
            associated with the map frame. Page coordinates can only be translated for
            2D maps. If the map frame does not contain a 2D map, an <see cref="T:System.InvalidOperationException"/>
            is thrown. If either map coordinate value is <b>double.NaN</b> then a point with X, Y both set
            to <see cref="F:System.Double.NaN"/> is returned.</remarks>
            <returns>A point in page coordinates</returns>
            <exception cref="T:System.InvalidOperationException">Mapframe must contain a 2D map</exception>
            <exception cref="T:System.ArgumentNullException">mapPoint</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapFrame.SetViewAsync(ArcGIS.Desktop.Internal.Mapping.MapViewInternal,ArcGIS.Desktop.Framework.Threading.Tasks.Progressor)">
            <summary>Copy view settings from CIMMapView to CIM.</summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapFrame.CIMMapView">
            <summary>Copy view settings from MapView to CIM.</summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.MapSeries">
            <summary>
            Represents a map series that may be associated with a layout.
            </summary>
            <remarks>
            <para>
            You can create multiple map series but a layout can only have one associated map series at a time.  There are two basic ways you can work with a map series.
            </para>
            <para>
            First, you can reference the layout's currently active map series using the <see cref="P:ArcGIS.Desktop.Layouts.Layout.MapSeries">MapSeries</see> property
            on the <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see>. This returns a map series CIM definition.  Changes can be made and then pushed back 
            to the Layout using the <see cref="M:ArcGIS.Desktop.Layouts.Layout.SetMapSeries">SetMapSeries()</see> method.
            </para>
            <para>
            Second, you can create a new map series using a constructor like <see cref="M:ArcGIS.Desktop.Layouts.MapSeries.CreateSpatialMapSeries">CreateSpatialMapSeries</see>.
            This will also return a CIM definition that can be modified and pushed back to the Layout using the
            <see cref="M:ArcGIS.Desktop.Layouts.Layout.SetMapSeries">SetMapSeries()</see> method.
            </para>
            <para> To export a map series you need to contruct an <see cref="T:ArcGIS.Desktop.Mapping.ExportFormat">ExportFormat</see> 
            and a <see cref="T:ArcGIS.Desktop.Layouts.MapSeriesExportOptions">MapSeriesExportOptions</see>.</para>
            </remarks>
            <example>
            The following examples demonstrate how to work with map series.
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Modify an existing map series"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a new spatial map series"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a map series to single PDF"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a map series to individual TIFF files"  lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapSeries.CreateSpatialMapSeries(ArcGIS.Desktop.Layouts.Layout,ArcGIS.Desktop.Layouts.MapFrame,ArcGIS.Desktop.Mapping.BasicFeatureLayer,System.String)">
            <summary>
            Creates a spatial map series. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <remarks>
            This method allows you to create a new spatial map series using a minimum number of required paramters.  It returns a 
            <see cref="T:ArcGIS.Core.CIM.CIMSpatialMapSeries">CIMSpatialMapSeries</see> object that can be further modified using fine grained properties. 
            To apply the changes to the layout, use the <see cref="M:ArcGIS.Desktop.Layouts.Layout.SetMapSeries">SetMapSeries()</see> method.
            </remarks>
            <param name="layout"> The <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> you will ultimately apply the map series. </param>
            <param name="mapFrame"> The <see cref="T:ArcGIS.Desktop.Layouts.MapFrame">MapFrame</see> that contains the index layer. </param>
            <param name="indexLayer"> A <see cref="T:ArcGIS.Desktop.Mapping.BasicFeatureLayer"> BasicFeatureLayer</see> that include a point, line or polygon attribute table. </param>
            <param name="nameField"> A <see cref="T:System.String">String</see> that represents the Name field in the index layer that should uniquely identify each page. </param>
            <returns>
            <see cref="T:ArcGIS.Core.CIM.CIMSpatialMapSeries">CIMSpatialMapSeries</see>
            </returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a new spatial map series"  lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapSeries.CreateBookmarkMapSeries(ArcGIS.Desktop.Layouts.Layout,ArcGIS.Desktop.Layouts.MapFrame)">
            <summary>
            Creates a bookmark map series. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <remarks>
            This method allows you to create a new bookmark map series using a minimum number of required paramters.  It returns a 
            <see cref="T:ArcGIS.Core.CIM.CIMBookmarkMapSeries">CIMBookmarkMapSeries</see> object that can be further modified using fine grained properties. 
            To apply the changes to the layout, use the <see cref="M:ArcGIS.Desktop.Layouts.Layout.SetMapSeries">SetMapSeries()</see> method.
            </remarks>
            <param name="layout"> The <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> you will ultimately apply the map series. </param>
            <param name="mapFrame"> The <see cref="T:ArcGIS.Desktop.Layouts.MapFrame">MapFrame</see> that contains the index layer. </param>
            <returns>
            <see cref="T:ArcGIS.Core.CIM.CIMBookmarkMapSeries">CIMBookmarkMapSeries</see>
            </returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeries.Enabled">
            <summary>
            Gets and sets the map series enabled state.
            </summary>
            <value>
            Type: <see cref="T:System.Boolean">Boolean</see> 
            </value>
            <remarks>Returns <c>true</c> if the map series enabled checkbox is checked.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeries.MapFrame">
            <summary>
            Gets and sets the associated <see cref="T:ArcGIS.Desktop.Layouts.MapFrame">MapFrame</see>.
            </summary>
            <value>
            Type: <see cref="T:ArcGIS.Desktop.Layouts.MapFrame">MapFrame</see> 
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeries.StartingPageNumber">
            <summary>
            Gets and sets the starting map series page number.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>
            Optional. This value is only useful when you are not using an attribute field to drive the numbers.
            The page number field can be string defined to include page numbers like roman numerals, for example.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapSeries.GetDefinition">
            <summary>
            Gets the CIM definition of the map series.
            </summary>
            <returns>Returns a <see cref="P:ArcGIS.Desktop.Layouts.MapSeries.CIMMapSeries">CIMMapSeries</see>.</returns>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MapSeries.cs" region="MapSeries_GetSetDefinition" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapSeries.SetDefinition(ArcGIS.Core.CIM.CIMMapSeries)">
            <summary>
            Sets the CIM definition of the map series. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="cimMapSeries"></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MapSeries.cs" region="MapSeries_GetSetDefinition" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeries.PageCount">
            <summary>
            Gets the number of pages in the map series.
            </summary>
            <value>
            Type: <see cref="T:System.Int32">Integer</see> 
            </value>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapSeries.FindPageNumber(System.String)">
            <summary>
            Returns a map series page number based on the name field value of the index feature.
            </summary>
            <remarks>
            Setting the current page requires specifying the approproriate page numnber.  This helper function returns the page number associated with a page name.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MapSeries.cs" region="MapSeries_FindpageNumber" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeries.CurrentPageName">
            <summary>
            Gets the current map series page name.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>The current page name.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeries.CurrentPageNumber">
            <summary>
            Gets the current map series page number.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>The page number field is string defined to include page numbers like roman numerals, for example.</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapSeries.SetCurrentPageNumber(System.String)">
            <summary>
            Sets the current map series page number. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="pageNumber">A <see cref="T:System.String">String</see> value.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MapSeries.cs" region="MapSeries_SetCurrentPageNumber" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeries.FirstPageNumber">
            <summary>
            Gets the first page number of the map series.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>The page number field can be string defined to include page numbers like roman numerals, for example.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeries.PreviousPageNumber">
            <summary>
            Gets the previous page number relative to the current map series page number.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>The page number field can be string defined to include page numbers like roman numerals, for example.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeries.NextPageNumber">
            <summary>
            Gets the next page number relative to the current map series page number.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>The page number field can be string defined to include page numbers like roman numerals, for example.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSeries.LastPageNumber">
            <summary>
            Gets the last page number of the map series.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>The page number field can be string defined to include page numbers like roman numerals, for example.</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapSeries.Finalize">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.MapSurround">
            <summary>
            Represents a map surround on a page layout.
            </summary>
            <remarks>
            <para>
            A MapSurround is a type of <see cref="T:ArcGIS.Desktop.Layouts.Element"/> and therefore can be positioned or resized on the page.  A MapSurround also has an 
            associated <see cref="T:ArcGIS.Desktop.Layouts.MapFrame">MapFrame</see> that can be modified.
            </para> 
            <para>
            <see cref="T:ArcGIS.Desktop.Layouts.Legend">Legend</see>, <see cref="T:ArcGIS.Desktop.Layouts.NorthArrow">NorthArrow</see>, and
            <see cref="T:ArcGIS.Desktop.Layouts.ScaleBar">ScaleBar</see> are types of a MapSurround.
            </para>
            </remarks>
            <example>
            The following example demonstrates how to reference a scale bar associated with one map frame and associate it with another map frame.
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MapSurroundClass.cs" region="MapSurroundExample"  lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.MapSurround.MapFrame">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Layouts.MapFrame">MapFrame</see> associated with the MapSurround.
            </summary>
            <value>Type: <see cref="T:ArcGIS.Desktop.Layouts.MapFrame">MapFrame</see></value>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.MapSurround.SetMapFrame(ArcGIS.Desktop.Layouts.MapFrame)">
            <summary>
            Sets a <see cref="T:ArcGIS.Desktop.Layouts.MapFrame">MapFrame </see> to the MapSurround.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="mapFrame"><see cref="T:ArcGIS.Desktop.Layouts.MapFrame">MapFrame</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MethodSnippets.cs" region="MapSurround_SetMapFrame" lang="CS"></code>
            </example>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.NorthArrow">
            <summary>
            Represents a north arrow element on a page layout.
            </summary>
            <remarks>
            There are currently no additional members but this class can be used to determine the type of 
            <see cref="T:ArcGIS.Desktop.Layouts.MapSurround">MapSurround</see> and element may be.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Create_NorthArrow" lang="CS"></code>
            </example> 
            <summary>
            Represents a north arrow on a page layout
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.NorthArrow.CanSaveAsStyle">
            <exclude> </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.NorthArrow.GetStyleAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.NorthArrow.GetStyleType">
            <exclude> </exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.PictureElement">
            <summary>
            Represents a picture element on a page layout.
            </summary> 
            <remarks>
            A PictureElement is a type of <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement</see> and therefore can be positioned or resized on the page. 
            Picture elements are embedded in the project file (.aprx) but the <see cref="P:ArcGIS.Desktop.Layouts.PictureElement.SourcePath">SourcePath</see> property will 
            return the original source file source path. You can change the picture by using the <see cref="M:ArcGIS.Desktop.Layouts.PictureElement.SetSourcePath">SetSourcePath</see> 
            method along with a new file path.
            </remarks>
            <example>
            The examples below demonstrate how to work with picture elements.
            <see cref="M:ArcGIS.Desktop.Layouts.PictureElement.SetSourcePath">SetSourcePath</see> method.
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\PictureElementClass.cs" region="PictureElementExample" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a new picture element with advanced symbol settings" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.PictureElement.SourcePath">
            <summary>
            Gets the file path of where the picture was added from.
            </summary>
            <value>Type: <see cref="T:System.String">String</see></value>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.PictureElement.SetSourcePath(System.String)">
            <summary>
            Regenerates the picture using the new file path to a picture on disk. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="URI"><see cref="T:System.String">String</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MethodSnippets.cs" region="PictureElement_SetSourcePath" lang="CS"></code>
            </example>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutProjectItem">
            <summary> 
            Represents a layout project item.
            </summary>
            <remarks>
            <para>Each <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> in a project is associated with a LayoutProjectItem.  This item contains numerous 
            read-only metadata properties about the layout. Although a layout may exist in the project, it may not be loaded (an open layout view).  To reference the 
            actual layout and ensure it is loaded into memory, you must use the <see cref="M:ArcGIS.Desktop.Layouts.LayoutProjectItem.GetLayout">GetLayout</see> method.</para>
            </remarks>
            <example>
            The follow examples demonstrate how to reference layout by name and delete layouts in a project.
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Reference layout project items and their associated layout" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Open a layout project item in a new view" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Import a pagx into a project" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutProjectItemClass.cs" region="DeleteLayout" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutProjectItem.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutProjectItem.#ctor(ESRI.ArcGIS.ItemIndex.ItemInfoValue)">
            <summary>
            For internal use. Do not use.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutProjectItem.GetLayout">
            <summary>
            Loads and returns the <see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see> associated with the LayoutPrjectItem.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Open a layout project item in a new view" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutProjectItem.OnRemoveFromProject">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutProjectItem.CanOpenView">
            <summary>
            Gets whether the view can be opened
            </summary>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutProjectItem.OnOpenView">
            <exclude/>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ScaleBar">
            <summary>
            Represents a scale bar on a page layout.
            </summary>
            <remarks>
            There are currently no additional members but this class can be used to determine the type of 
            <see cref="T:ArcGIS.Desktop.Layouts.MapSurround">MapSurround</see>..
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ElementClass.cs" region="Create_ScaleBar" lang="CS"></code>
            </example>
            <summary>
            Represents a scale bar on a page layout
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.ScaleBar.CanSaveAsStyle">
            <exclude> </exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ScaleBar.GetStyleAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ScaleBar.GetStyleType">
            <exclude> </exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.SpatialMapSeries">
            <summary>
            Represents a series of pages that span a range of map extents based on features in a specified index layer.
            </summary>
            <example>
            The following examples demonstrate how to work with map series.
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Modify an existing map series"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create a new spatial map series"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a map series to single PDF"  lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Export a map series to individual TIFF files"  lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.IndexLayer">
            <summary>
            Gets or sets the index layer for the maps series.
            </summary>
            <value>
            Type: <see cref="T:ArcGIS.Desktop.Mapping.BasicFeatureLayer">BasicFeatureLayer</see> 
            </value>
            <remarks>The index layer must be either a basic point, line, or polgyon feature layer that has an attribute table.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.PageNameField">
            <summary>
            Gets or sets the index layer's name field which should uniquely identify each page.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.PageNumberField">
            <summary>
            Gets or sets the index layer's page number field.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>
            Optional. If not set, automatic page numbering is applied.  You can offset the starting value using the
            <see cref="P: ArcGIS.Desktop.Layouts.MapSeries.StartingPageNumber">StartingPageNumber</see> property.
            The page number field can be string defined to include page numbers like roman numerals, for example.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.CategoryField">
            <summary>
            Gets or sets index layer's category field.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>
            Optional. If not set, pages are not organized into groups. Pages get grouped in the map series contents pane based on unique category values.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.RotationField">
            <summary>
            Gets or sets index layer's rotation field.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>Optional. If not set, no rotation is applied.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.SortField">
            <summary>
            Gets or sets index layer's sort field.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>Optional. If not set, the default sorting field is the same as the page name field.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.ScaleField">
            <summary>
            Gets or sets index layer's scale field.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>Optional. If not set, the scale is based on how the feature fits the map frame extent.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.SpatialReferenceField">
            <summary>
            Gets or sets index layer's spatial reference field.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>Optional. If not set, the layer's spatial reference is used for all extents.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.SortAscending">
            <summary>
            Gets or sets if values based on the sort field are in ascending order.
            </summary>
            <value>
            Type: <see cref="T:System.String">String</see> 
            </value>
            <remarks>Optional. Default is ascending order. Returns <c>true</c> if in ascending order.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.ScaleRounding">
            <summary>
            Gets or sets the specified value to which the scale rounds.
            </summary>
            <value>
            Type: <see cref="T:System.Double">Double</see> 
            </value>
            <remarks>Optional. If not set, no rounding occurs.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.ExtentOptions">
            <summary>
            Gets or sets the extent fitting options.
            </summary>
            <value>
            Type: <see cref="T:ArcGIS.Core.CIM.ExtentFitType">ExtentFitType</see> 
            </value>
            <remarks>Optional. If not set, BestFit is the default.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.MarginType">
            <summary>
            Gets or sets the type of margins.
            </summary>
            <value>
            Type: <see cref="T:ArcGIS.Core.CIM.UnitType">UnitType</see> 
            </value>
            <remarks>Optional.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.MarginUnits">
            <summary>
            Gets or sets the units of the margin.
            </summary>
            <value>
            Type: <see cref="T:ArcGIS.Core.Geometry.LinearUnit">LinearUnit</see> 
            </value>
            <remarks>Optional.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.Margin">
            <summary>
            Gets or sets the value of the margin.
            </summary>
            <value>
            Type: <see cref="T:System.Double">Double</see> 
            </value>
            <remarks>Optional.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.SpatialMapSeries.CurrentRow">
            <summary>
            Returns the index layer's row for the current map series page.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <value>
            Type: <see cref="T:ArcGIS.Core.Data.Row">Row</see> 
            </value>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.TableFrame">
            <summary>
            Represents a tableFrame element on a page layout.
            </summary>
            <remarks>
            <para>To create a new table frame use: <see cref="M:ArcGIS.Desktop.Layouts.ElementFactory.CreateMapSurroundElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Geometry,ArcGIS.Desktop.Layouts.MapSurroundInfo,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)"/>.</para>
            <para>To modify an existing table frame you must use its CIM properties.</para>
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MapSurroundClass.cs" region="TableFrame_CreateNew" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\MapSurroundClass.cs" region="TableFrame_ModifyExisting" lang="CS"></code>
            </example>
            <summary>
            Defines a table frame on a layout.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.TableFrame.Finalize">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.TableFrame.GetStyleAsync">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.TableFrame.GetStyleType">
            <exclude> </exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.TextProperties">
            <summary>
            Represents a collection of text properties associated with a <see cref="T:ArcGIS.Desktop.Layouts.TextElement">TextElement</see>.
            </summary>
            <remarks>
            Each <see cref="T:ArcGIS.Desktop.Layouts.TextElement">TextElement</see> on a page layout has an associated set of text properties.  
            This intermediate object allows you to change multiple text properties before pushing the changes back to the 
            <see cref="T:ArcGIS.Desktop.Layouts.TextElement">TextElement</see>.
            </remarks> 
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\TextElementClass.cs" region="Modify existing text properties" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.TextProperties.#ctor(System.String,System.String,System.Double,System.String)">
            <summary>
            Initialize a new instance of TextProperties.
            </summary>
            <param name="text"><see cref="T:System.String">String</see></param>
            <param name="font"><see cref="T:System.String">String</see></param>
            <param name="fontSize"><see cref="T:System.Double">Double</see></param>
            <param name="fontStyle"><see cref="T:System.String">String</see></param>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Update text element properties" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.TextProperties.Text">
            <summary>
            Gets and sets the string associated with the text element.
            </summary>
            <value><see cref="T:System.String">String</see></value>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.TextProperties.Font">
            <summary>
            Gets and sets the font name of the text element.  When setting, use the string values the way they appear in the Text Symbol Font list located in the text element format tab.
            </summary>
            <value><see cref="T:System.String">String</see></value>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.TextProperties.FontSize">
            <summary>
            Gets and sets the font size of the text element.
            </summary>
            <value><see cref="T:System.Double">Double</see></value>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.TextProperties.FontStyle">
            <summary>
            Gets and sets the string for the font style.
            </summary>
            <value><see cref="T:System.String">String</see></value>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.TextElement">
            <summary>
            Represents a text element on a page layout.
            </summary>
            <remarks>
            The TextElement class represents text elements on a page layout.  This includes items such as inserted point text, rectangle text, and so on. It can 
            also include text elements that are part of a group element but it does not include text that is part of a legend, scale bar or other map surround items.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create text element with basic font properties" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Create rectangle text with more advanced symbol settings" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\TextElementClass.cs" region="Modify existing text element properties" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.TextElement.TextProperties">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Layouts.TextProperties">TextProperties</see> for a text element.
            </summary>
            <value><see cref="T:ArcGIS.Desktop.Layouts.TextProperties">TextProperties</see></value>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.TextElement.SetTextProperties(ArcGIS.Desktop.Layouts.TextProperties)">
            <summary>
            Sets the <see cref="T:ArcGIS.Desktop.Layouts.TextProperties">TextProperties</see> for a TextElement. This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="textProperties"><see cref="T:ArcGIS.Desktop.Layouts.TextProperties">TextProperties</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Update text element properties" lang="CS"></code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.TextElement.DoesFitFrame">
            <summary>
            Gets whether the text element fits the frame.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutTrayButton">
            <summary> Provides additional helper methods for <see cref="T:ArcGIS.Desktop.Mapping.TrayButton"/> subclasses that are added to a LayoutView Tray. </summary>
            <remarks>In order to add a TrayButton to a LayoutView Tray, you must add your component to the "esri_layouts_LayoutTrayButtons" Category within DAML</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutTrayButton.LayoutView">
            <summary> Gets the associated view as a <see cref="T:ArcGIS.Desktop.Layouts.LayoutView"/>. </summary>
            <remarks>
            <para>Only non-null if this <see cref="T:ArcGIS.Desktop.Mapping.TrayButton"/> has been added to a LayoutView's Tray.</para>
            <para>This may initially be null, as the view is being constructed.
            Override the TrayButton.OnViewChanged method to be told when the view is made available.</para>
            </remarks>
            <returns>The associated LayoutView</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutTrayButton.Layout">
            <summary> Gets the underlying <see cref="T:ArcGIS.Desktop.Layouts.Layout"/> of the associated <see cref="P:ArcGIS.Desktop.Layouts.LayoutTrayButton.LayoutView"/>. </summary>
            <remarks>
            <para>Only non-null if this <see cref="T:ArcGIS.Desktop.Mapping.TrayButton"/> has been added to a LayoutView's Tray.</para>
            <para>This may initially be null, as the view is being constructed.
            Override the TrayButton.OnViewChanged method to be told when the view is made available.</para>
            </remarks>
            <returns>The associated Layout</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTrayButton.IsVisibleOnView">
            <summary>
            Gets whether the tray button is visible on the view
            </summary>
            <returns>True if it is visible</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutPaneView">
            <summary>
            Interaction logic for LayoutPaneView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutPaneView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutPaneViewModel.UpdateCVDCloseBanner(ArcGIS.Desktop.Layouts.MapFrame)">
            <summary>
            When activating a map frame, detach the CVD close banner from the layout view and attach it to the activated map view
            When deactivating a map frame, attach the CVD close banner to the layout view.
            </summary>
            <param name="newValue">new activated map frame value</param>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutSnapMode">
            <summary>Specifies the available snap modes for a Layout.</summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.LayoutSnapMode.Guide">
            <summary>Snap to layout guide.</summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.LayoutSnapMode.Element">
            <summary>Snap to layout tangent.</summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.LayoutSnapMode.Margins">
            <summary>Snap to layout print margins.</summary>
        </member>
        <member name="F:ArcGIS.Desktop.Layouts.LayoutSnapMode.Page">
            <summary>Snap to layout page.</summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutSnapping">
            <summary>Provides access to the snapping environment within a Layout.</summary>
            <remarks>
            <para>Changing the <see cref="P:ArcGIS.Desktop.Layouts.LayoutSnapping.IsEnabled"/> property has immediate effect, and saved into user preferences, and applies to both Maps and Layouts.</para>
            <para>Changing the snapping modes, via <see cref="M:ArcGIS.Desktop.Layouts.LayoutSnapping.SetSnapMode(ArcGIS.Desktop.Layouts.LayoutSnapMode,System.Boolean)"/> or <see cref="M:ArcGIS.Desktop.Layouts.LayoutSnapping.SetSnapModes(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.LayoutSnapMode})"/> also has immediate effect, applied to all project <see cref="T:ArcGIS.Desktop.Layouts.LayoutView"/>s, and saved into user
            preferences.</para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutSnapping.IsEnabled">
            <summary>Gets or sets if snapping is available within the project.</summary>
            <remarks>This property turns snapping on or off within the project.</remarks>
            <example>
            	<code title="Example" description="" lang="C#">
            LayoutSnapping.IsEnabled = true; // enable snapping
            if (LayoutSnapping.IsEnabled)
              { ... } // do something if snapping is enabled</code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutSnapping.SnapModes">
            <summary>Gets or sets a collection of the current <see cref="T:ArcGIS.Desktop.Layouts.LayoutSnapMode">snapping modes</see>.</summary>
            <example>
            	<code title="Example" description="" lang="C#">
            //Get the current snapping modes
            foreach (var snappingMode in LayoutSnapping.SnapModes)
              { ... } // do something for currently set snapping modes
              
            //Set the current snapping modes
            var modes = LayoutSnapping.SnapModes;
            LayoutSnapping.SnapModes = modes;</code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutSnapping.SetSnapModes(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.LayoutSnapMode})">
            <summary>
            	<para>Sets the given snapping modes.</para>
            </summary>
            <param name="modes">a collection of LayoutSnapMode parameters </param>
            <remarks>This method disables the current snapping modes and enables the given snapping modes. It is intended to efficiently set one or more snapping modes.</remarks>
            <example>
            	<code title="Example" description="" lang="C#">
            LayoutSnapping.SetSnapModes(new[]{ LayoutSnapMode.Guide }); // sets only the Guide snapping mode 
            LayoutSnapping.SetSnapModes(new[]{ LayoutSnapMode.Element, LayoutSnapMode.Page }); // sets only Element and Page snapping modes
            LayoutSnapping.SetSnapModes(null); //clear all snap modes</code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutSnapping.GetSnapMode(ArcGIS.Desktop.Layouts.LayoutSnapMode)">
            <summary>Gets the state of a single <see cref="T:ArcGIS.Desktop.Layouts.LayoutSnapMode">LayoutSnapMode</see>.</summary>
            <example>
            	<code title="Example" description="" lang="C#">
            //obtain Midpoint snapping state
            var isSnapModeMidpoint = LayoutSnapping.GetSnapMode(LayoutSnapMode.Margins);</code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutSnapping.SetSnapMode(ArcGIS.Desktop.Layouts.LayoutSnapMode,System.Boolean)">
            <summary>
            	<para>Sets the state of a single <see cref="T:ArcGIS.Desktop.Layouts.LayoutSnapMode">LayoutSnapMode</see>.</para>
            </summary>
            <example>
            	<code title="Example" description="" lang="C#">
            //ensure Element snapping is switched on
            LayoutSnapping.SetSnapMode(LayoutSnapMode.Element, true);</code>
            </example>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.ElevationGuideBar">
            <summary>
            Represents an elevation guide bar element on a page layout.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElevationGuideBar.GetStyleAsync">
            <summary>
            Get the style element
            </summary>
            <returns>the CIMElement style</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.ElevationGuideBar.GetStyleType">
            <summary>
            Get the style type
            </summary>
            <returns>the StyleItemType</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions">
            <summary>
            Extension methods for <see cref="T:ArcGIS.Desktop.Mapping.GraphicsLayer"/>.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.GetElements(ArcGIS.Desktop.Mapping.GraphicsLayer)">
            <summary>
            Get the collection of elements from the <see cref="T:ArcGIS.Desktop.Mapping.GraphicsLayer"/>. Nesting
            within <see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/> <b>is</b> preserved.
            </summary>
            <param name="graphicsLayer">The graphics layer being extended</param>
            <remarks>Use <see cref="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.GetElementsAsFlattenedList(ArcGIS.Desktop.Mapping.GraphicsLayer)"/> to flatten the collection
            otherwise enumerate any returned <see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/> individually.<br/>
            Elements are returned in Z order. The 0th Element is at the back or 'bottom'
            and the 'Nth' element is at the front or 'top'.</remarks>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.GetElementsAsFlattenedList(ArcGIS.Desktop.Mapping.GraphicsLayer)">
            <summary>
            Get the collection of <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/> from the <see cref="T:ArcGIS.Desktop.Mapping.GraphicsLayer"/>.
            Nested groups within <see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/> are <b>not</b> preserved.
            </summary>
            <param name="graphicsLayer">The graphics layer being extended</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.GroupElements(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Group the collection of elements.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="elements">The elements to be grouped.</param>
            <remarks>All group elements in the input collection must have the same parent.</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/> containing the grouped elements</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">elements must belong to graphicsLayer</exception>
            <exception cref="T:System.ArgumentException">elements must be group elements or graphic elements</exception>
            <exception cref="T:System.ArgumentException">element parents must be the same and non-null</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics count limit of 4000 elements. One or more elements cannot be created.</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics size limit of 10 MB. One or more elements cannot be created.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.UnGroupElement(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.GroupElement)">
            <summary>
            Ungroup the elements contained in 'group'.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="group">The group element whose elements will be ungrouped</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: group</exception>
            <exception cref="T:System.ArgumentException">elements must belong to graphicsLayer</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.UnGroupElements(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.GroupElement})">
            <summary>
            Ungroup the elements contained in 'groups'.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="groups">The group elements whose elements are to be ungrouped</param>
            <remarks>All group elements in the input collection must have the same parent.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">groups cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">elements must belong to graphicsLayer</exception>
            <exception cref="T:System.ArgumentException">element parents must be the same and non-null</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.AddElement(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Core.CIM.CIMGraphic,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
             <summary>
             Add a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/> based on the <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/>.
            This method must be called on the MCT.Use QueuedTask.Run.
             </summary>
             <param name="graphicsLayer"></param>
             <param name="cimGraphic">The graphic to be added. Cannot be null</param>
             <param name="elementName">An element name (optional)</param>
             <param name="select">True to set the element selected after the add (default is true) (optional)</param>
             <param name="elementInfo">Additional element properties or null (optional)</param>
             <remarks>A <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/> is created that contains the cimGraphic.
             The geometry of the graphic cannot be empty or null. If the symbology is not set then
             a default symbology is applied.<br/>
             o <see cref="T:ArcGIS.Core.CIM.CIMInkGraphic"/> is not supported<br/>
             o <see cref="T:ArcGIS.Core.CIM.CIMMultiPatchGraphic"/> is not supported<br/>
             The map view displaying the graphics layer should be initialized.<br/>
             </remarks>
             <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
             <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
             <exception cref="T:System.ArgumentNullException">Value cannot be null: cimGraphic</exception>
             <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics count limit of 4000 elements. One or more elements cannot be created.</exception>
             <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics size limit of 10 MB. One or more elements cannot be created.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.AddElement(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbol,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Add a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/> based on the input geometry and symbol (optional).
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="geometry">The geometry to be used for the graphic element</param>
            <param name="symbol">The symbol to be used for the graphic element. Can be null (optional)</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">True to set the element selected after the add (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties or null (optional)</param>
            <remarks>Multipatch geometry is not currently supported.<br/>
            The geometry cannot be empty or null. Providing the wrong symbol type for the
            given geometry will result in an <see cref="T:System.ArgumentException"/>. If symbol is
            null a default symbol of the correct type will be assigned.<br/>
            The map view displaying the graphics layer should be initialized.<br/></remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">geometry cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">symbol is not a CIMPointSymbol | CIMLineSymbol | CIMPolygonSymbol</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics count limit of 4000 elements. One or more elements cannot be created.</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics size limit of 10 MB. One or more elements cannot be created.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.AddElement(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Core.Geometry.MapPoint,System.String,ArcGIS.Core.CIM.CIMTextSymbol,System.String,System.Boolean,ArcGIS.Desktop.Layouts.ElementInfo)">
            <summary>
            Add a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/> based on the input point, text, and textsymbol (optional).
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="point">The text placement point</param>
            <param name="text">The text string (required)</param>
            <param name="textSymbol">The text symbol. Can be null (optional)</param>
            <param name="elementName">An element name (optional)</param>
            <param name="select">True to set the element selected after the add (default is true) (optional)</param>
            <param name="elementInfo">Additional element properties or null (optional)</param>
            <remarks>The point cannot be null or empty. If text is null an empty string is
            assigned. If textSymbol is null a default text symbol is assigned.<br/>
            The map view displaying the graphics layer should be initialized.<br/>
            Custom properties, if provided, must be serializable to string.<br/></remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">point cannot be null or empty</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics count limit of 4000 elements. One or more elements cannot be created.</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics size limit of 10 MB. One or more elements cannot be created.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.AddElements(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMGraphic},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.ElementInfo})">
            <summary>
            Add a collection of <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement"/> based on the list of <see cref="T:ArcGIS.Core.CIM.CIMGraphic"/>.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="graphics">The collection of graphics to be added</param>
            <param name="elementNames">A collection of element names or null (optional)</param>
            <param name="select">True to set the element selected after the add (default is true) (optional)</param>
            <param name="elementInfos">Additional element properties or null</param>
            <remarks>The map view displaying the graphics layer should be initialized.<br/>
            o <see cref="T:ArcGIS.Core.CIM.CIMInkGraphic"/> is not supported<br/>
            o <see cref="T:ArcGIS.Core.CIM.CIMMultiPatchGraphic"/> is not supported<br/>
            The default behavior is that elements will <b>not</b> be selected after the add (ie default
            selection behavior is <b>false</b> whereas for single element adds, the default selection behavior
            is <b>true</b>. Element names and elementInfos must either match the input number of CIMGraphics or be null.</remarks>
            <returns><see cref="T:System.Collections.Generic.IList`1"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">The value cannot be null: graphics</exception>
            <exception cref = "T:System.ArgumentException">Number of elementNames does not match the number of graphics</exception>
            <exception cref = "T:System.ArgumentException">Number of elementInfos does not match the number of graphics</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics count limit of 4000 elements. One or more elements cannot be created.</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics size limit of 10 MB. One or more elements cannot be created.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CopyElements(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Copy the elements into the graphics layer.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="elements">The elements to be copied</param>
            <remarks>Only elements from a single graphics layer can be copied at one time. To copy
            elements from multiple graphics layers CopyElements must be called each time.<br/>
            If a group element is provided in the list of elements to be copied then the
            group element and all its children will be copied.<br/>If a child of a group element is
            provided in the list in <i>addition</i> to its parent then the parent takes precedence
            (i.e. the entire group element is copied and not just <i>that</i> child).<br/>
            If a child element of a group element is provided in the list but its parent is
            <i>not</i> then only the child element is copied. The parent of the copied
            element will be the target graphics layer.<br/>
            The map view displaying the graphics layers should be initialized.</remarks>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements must belong to a graphics layer</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics count limit of 4000 elements. One or more elements cannot be created.</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics size limit of 10 MB. One or more elements cannot be created.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CopyElements(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.GroupElement,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Copy the elements into a group element within the graphics layer.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="group">A group element within the graphics layer</param>
            <param name="elements">The elements to be copied</param>
            <remarks>The group element must belong to the graphics layer into which the elements
            are being copied. Only elements from a single graphics layer can be copied at one time.
            To copy elements from multiple graphics layers CopyElements must be called each time.<br/>
            If a group element is provided in the list of elements to be copied then the
            group element and all its children will be copied.<br/>If a child of a group element is
            provided in the list in <i>addition</i> to its parent then the parent takes precedence
            (i.e. the entire group element is copied and not just <i>that</i> child).<br/>
            If a child element of a group element is provided in the list but its parent is
            <i>not</i> then only the child element is copied. The parent of the copied
            element will be the target group element.<br/>
            The map view displaying the graphics layers should be initialized.</remarks>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements must belong to a graphics layer</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics count limit of 4000 elements. One or more elements cannot be created.</exception>
            <exception cref="T:System.InvalidOperationException">Map has reached maximum graphics size limit of 10 MB. One or more elements cannot be created.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.FindElement(ArcGIS.Desktop.Mapping.GraphicsLayer,System.String)">
            <summary>
            Finds the element recursively with the given name within the GraphicsLayer collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer">The graphics layer being extended</param>
            <param name="elementName">The name of the element to find. Cannot be null</param>
            <remarks>Find recurses nested groups to find the given element.<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <returns>The <see cref="T:ArcGIS.Desktop.Layouts.Element"/> or null if it is not found</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: elementName</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.FindElements(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds the elements recursively with the given names within the GraphicsLayer collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <remarks>Find recurses nested groups to find the given elements.<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <param name="graphicsLayer">The graphics layer being extended</param>
            <param name="elementNames">The names of the elements to find. Cannot be null</param>
            <remarks>Find recurses nested groups to find the given elements.<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> or an empty list if no elements are found</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: elementNames</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.RemoveElement(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Remove the element from the GraphicsLayer collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer">The graphics layer being extended</param>
            <param name="element">The element being removed.</param>
            <remarks>Removing a group element removes its children.<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.RemoveElements(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Remove the elements from the GraphicsLayer collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer">The graphics layer being extended</param>
            <param name="elements">The elements being removed</param>
            <remarks>If elements is null then all elements are removed.<br/>
            If a group element is provided in the list of elements to be removed then the
            group element and all its children will be removed.<br/>If a child of a group element is
            provided in the list in <i>addition</i> to its parent then the parent takes precedence
            (i.e. the entire group element is removed and not just <i>that</i> child).<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CanBringForward(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Checks whether the given element can be moved forward within its parent's
            element collection. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="element">The element to check</param>
            <remarks>Element z order is relative to the element collection within their
            parent. The bottom element has a z order of 0. The top element has a z order of N - 1.
            If the element is already at the top 0 false is returned. False can also be returned if
            the element's z order cannot be checked (i.e. the element is not a graphic element, a
            group element, does not belong to the graphics layer, etc.).<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <returns>True if the element can be moved forward.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CanBringForward(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Checks whether the given elements can be moved forward within their parent's
            element collection. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="elements">The elements to check</param>
            <remarks>Element z order is relative to the element collection within their
            parent. The bottom element has a z order of 0. The top element has a z order of N - 1.
            All elements must have the same parent or false is returned. If any one of the elements
            is already at the top of their parent's element collection, false is returned. False can
            also be returned if any of the elements' z order cannot be checked (i.e. an element is
            not a graphic element, a group element, does not belong to the graphics layer, etc.).
            <br/>The map view displaying the graphics layer should be initialized.</remarks>
            <returns>True if the elements can be moved forward.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CanSendBackward(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Checks whether the given element can be moved back within its parent's
            element collection. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="element">The element to check</param>
            <remarks>Element z order is relative to the element collection within their
            parent. The bottom element has a z order of 0. The top element has a z order of N - 1.
            If the element is already at the bottom of its parent's element collection, false is returned.
            False can also be returned if the element's z order cannot be checked (i.e. the element is
            not a graphic element, a group element, does not belong to the graphics layer, etc.).
            <br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <returns>True if the element can be moved back.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CanSendBackward(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Checks whether the given elements can be moved back within their parent's
            element collection. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="elements">The elements to check</param>
            <remarks>Element z order is relative to the element collection within their
            parent. The bottom element has a z order of 0. The top element has a z order of N - 1.
            All elements must have the same parent or false is returned. If any one of the elements
            is already at the bottom of their parent's element collection, false is returned.
            False can also be returned if any of the elements' z order cannot be checked (i.e. an
            element is not a graphic element, a group element, does not belong to the graphics layer,
            etc.).<br/>The map view displaying the graphics layer should be initialized.</remarks>
            <returns>True if the elements can be moved back.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.BringToFront(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Bring the element to the front of its parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="element">The element to bring to the front</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CanBringForward(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)"/> to check whether an element
            can be brought forward. Element z order can only be changed relative to its parent's element
            collection. The top element will have a z order of N - 1 where N is equal to
            the number of elements within the element parent's element collection. Check
            z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
            <exception cref="T:System.ArgumentException">elements must belong to graphicsLayer</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.BringToFront(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Bring the elements to the front of their parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="elements">The elements to bring to the front</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CanBringForward(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})"/> to
            check whether the elements can be brought forward.<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">elements must belong to graphicsLayer</exception>
            <exception cref="T:System.ArgumentException">element parents must be the same and non-null</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.BringForward(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Bring the element forward within its parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="element">The element to bring forward</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CanBringForward(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)"/> to check
            whether an element can be brought forward.Element z order can only be changed
            relative to its parent's element collection. The top element will have a z order
            of N - 1 where N is equal to the number of elements within the element parent's
            element collection. Check z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
            <exception cref="T:System.ArgumentException">elements must belong to graphicsLayer</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.BringForward(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Bring the elements forward within their parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="elements">The elements to bring forward</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CanBringForward(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})"/> to
            check whether the elements can be brought forward. Element z order can only be changed relative to their parent's element
            collection. All elements must have the same parent. The top element will have a
            z order of N - 1 where N is equal to the number of elements within the element parent's
            element collection. Check individual element z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.
            <br/>The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">elements must belong to graphicsLayer</exception>
            <exception cref="T:System.ArgumentException">element parents must be the same and non-null</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.SendToBack(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Send the element to the back of its parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="element">The element to send to the back</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CanSendBackward(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)"/> to check whether an element
            can be sent back. Element z order can only be changed relative to its parent's element
            collection. The bottom element will have a z order of 0 within the element parent's
            element collection. Check z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
            <exception cref="T:System.ArgumentException">elements must belong to graphicsLayer</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.SendToBack(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Send the elements to the back of their parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="elements">The elements to send to the back</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CanSendBackward(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})"/> to
            check whether the elements can be sent back. Element z order can only be changed relative to their parent's element
            collection. All elements must have the same parent. The bottom element will have a
            z order of 0 within the element parent's element collection. Check individual
            element z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">elements must belong to graphicsLayer</exception>
            <exception cref="T:System.ArgumentException">element parents must be the same and non-null</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.SendBackward(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Send the element backward within its parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="element">The element to send backward</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CanSendBackward(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)"/> to check whether an element
            can be sent backward. Element z order can only be changed relative to its parent's element
            collection. The bottom element will have a z order of 0 within the element parent's
            element collection. Check z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
            <exception cref="T:System.ArgumentException">elements must belong to graphicsLayer</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.SendBackward(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Send the elements backward within their parent's element collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="elements">The elements to send backward</param>
            <remarks>Refer to <see cref="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.CanSendBackward(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})"/> to
            check whether the elements can be sent backward. Element z order can only be changed relative to their parent's element
            collection. All elements must have the same parent. The bottom element will have a
            z order of 0 within the element parent's element collection. Check individual
            element z order with <see cref="P:ArcGIS.Desktop.Layouts.Element.ZOrder"/>.<br/>
            The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">elements cannot be null or empty</exception>
            <exception cref="T:System.ArgumentException">elements must belong to graphicsLayer</exception>
            <exception cref="T:System.ArgumentException">element parents must be the same and non-null</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.SelectElement(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Select the element within the GraphicsLayer collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer">The graphics layer being extended</param>
            <param name="element">The element to select. Cannot be null</param>
            <remarks>The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.SelectElements(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
             <summary>
             Select the elements within the GraphicsLayer collection.
             This method must be called on the MCT. Use QueuedTask.Run.
             </summary>
             <param name="graphicsLayer">The graphics layer being extended</param>
             <param name="elements">The elements to select. If null then all elements are selected</param>
            <remarks>If a child of a group element is provided in the list of elements to be
            selected in <i>addition</i> to its parent then the parent is the element selected.<br/>
             The map view displaying the graphics layer should be initialized.</remarks>
             <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.UnSelectElement(ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Unselect the element within the GraphicsLayer collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="element">The selected element to unselect. Cannot be null</param>
            <remarks>The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.UnSelectElements(ArcGIS.Desktop.Mapping.GraphicsLayer,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Unselect the elements within the GraphicsLayer collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <param name="elements">The selected elements to unselect. If null then all elements are unselected</param>
            <remarks>The map view displaying the graphics layer should be initialized.<br/>
            If a child of a group element is provided in the list of elements to be
            unselected in <i>addition</i> to its parent then the parent is the element unselected.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.GetSelectedElements(ArcGIS.Desktop.Mapping.GraphicsLayer)">
            <summary>
            Gets the currently selected elements within the GraphicsLayer collection.
            </summary>
            <param name="graphicsLayer"></param>
            <remarks>The map view displaying the graphics layer should be initialized.</remarks>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.GraphicsLayerExtensions.ClearSelection(ArcGIS.Desktop.Mapping.GraphicsLayer)">
            <summary>
            Clears the current element selection within the GraphicsLayer collection.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="graphicsLayer"></param>
            <remarks>The map view displaying the graphics layer should be initialized.</remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="T:ArcGIS.Desktop.Core.LayoutFrameworkExtender">
            <summary>
            Contains extension methods to extend the <see cref="T:ArcGIS.Desktop.Framework.PaneCollection">PaneCollection</see> class. 
            </summary>
            <remarks>
            The class is primarily used to extend application panes that display the contents of a layout view.  The same members will appear on both the extension class
            and the <see cref="T:ArcGIS.Desktop.Framework.PaneCollection">PaneCollection</see> class.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Open a layout project item in a new view" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_LayoutFrameWorkExtender" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_FindAndCloseLayoutPanes" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Core.LayoutFrameworkExtender.CreateLayoutPaneAsync(ArcGIS.Desktop.Framework.PaneCollection,ArcGIS.Desktop.Layouts.Layout)">
            <summary>
            Create and activate a new layout pane using a Layout reference. Must be called on GUI thread.
            </summary>
            <param name="paneCollection">Does not need to be specified.</param>
            <param name="layout"><see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see></param>
            <remarks>Be sure to call this on the GUI thread.  Do not execute within a QueuedTask.Run block.</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.ILayoutPane">ILayoutPane</see></returns>
            <exception cref="T:System.InvalidOperationException"> Must be called on GUI thread</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippets.cs" region="Open a layout project item in a new view" lang="CS"></code>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_LayoutFrameWorkExtender" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Core.LayoutFrameworkExtender.FindLayoutPanes(ArcGIS.Desktop.Framework.PaneCollection,ArcGIS.Desktop.Layouts.Layout)">
            <summary>
            Find the layout panes that reference a specific layout.
            </summary>
            <param name="paneCollection">Does not need to be specified.</param>
            <param name="layout"><see cref="T:ArcGIS.Desktop.Layouts.Layout">Layout</see></param>
            <returns><see cref="T:ArcGIS.Desktop.Layouts.ILayoutPane">ILayoutPane</see></returns>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_FindAndCloseLayoutPanes" lang="CS"></code> 
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Core.LayoutFrameworkExtender.CloseLayoutPanes(ArcGIS.Desktop.Framework.PaneCollection,System.String)">
            <summary>
            Close the layout panes that reference the specified layout path.
            </summary>
            <param name="paneCollection">Does not need to be specified.</param>
            <param name="layoutUri">Layout path.</param>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\LayoutViewClass.cs" region="LayoutView_FindAndCloseLayoutPanes" lang="CS"></code> 
            </example>
        </member>
        <member name="T:ArcGIS.Desktop.Core.ReportFrameworkExtender">
            <summary>
            Contains extension methods to extend the <see cref="T:ArcGIS.Desktop.Framework.PaneCollection">PaneCollection</see> class. 
            </summary>
            <remarks>
            The class is primarily used to extend application panes that display the contents of a rerport view. The same members will appear on both the extension class
            and the <see cref="T:ArcGIS.Desktop.Framework.PaneCollection">PaneCollection</see> class.
            </remarks>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Core.ReportFrameworkExtender.CreateReportPaneAsync(ArcGIS.Desktop.Framework.PaneCollection,ArcGIS.Desktop.Reports.Report)">
            <summary>
            Create and activate a new report pane using a Report reference. Must be called on GUI thread.
            </summary>
            <param name="panes">Does not need to be specified.</param>
            <param name="report"><see cref="T:ArcGIS.Desktop.Reports.Report">Report</see></param>
            <remarks>Be sure to call this on the GUI thread.  Do not execute within a QueuedTask.Run block.</remarks>
            <returns><see cref="T:ArcGIS.Desktop.Framework.Contracts.Pane">Pane</see></returns>
            <exception cref="T:System.InvalidOperationException"> Must be called on GUI thread</exception>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Core.ReportFrameworkExtender.FindReportPanes(ArcGIS.Desktop.Framework.PaneCollection,ArcGIS.Desktop.Reports.Report)">
            <summary>
            Find the report panes that reference a specific report.
            </summary>
            <param name="panes">Does not need to be specified.</param>
            <param name="report"><see cref="T:ArcGIS.Desktop.Reports.Report">Report</see></param>
            <returns><see cref="T:ArcGIS.Desktop.Framework.Contracts.Pane">Pane</see> or all report panes if Report is not specified.</returns>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Core.ReportFrameworkExtender.CloseReportPanes(ArcGIS.Desktop.Framework.PaneCollection,System.String)">
            <summary>
            Close the report panes that reference the specified report path or all report panes if reportUri is not specified.
            </summary>
            <param name="panes">Does not need to be specified.</param>
            <param name="reportUri">Report path.</param>
            <example>
            </example>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.Events.ReportEventHint">
            <summary>
            Specifies the Report's properties that are modified in the event.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.ReportName">
            <summary>
            Report's Name property changed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.ReportDefinition">
            <summary>
            Report's Definition property changed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.DataSource">
            <summary>
            Report or Related Report data source changed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.DataSourceFields">
            <summary>
            Report or Related Report data source fields changed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.DefinitionQuery">
            <summary>
            Report or Related Report definition query changed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.RelatedReportAdded">
            <summary>
            Related Report added
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.RelatedReportRemoved">
            <summary>
            Related Report removed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.GroupAdded">
            <summary>
            Group sections added
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.GroupRemoved">
            <summary>
            Group sections removed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.SupplementalPageAdded">
            <summary>
            Supplemental page section added
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.SupplementalPageRemoved">
            <summary>
            Supplemental page section removed
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.SupplementalPageReplaced">
            <summary>
            Supplemental page section replaced
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.SectionOrder">
            <summary>
            Report section reordered
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.SectionElementAdded">
            <summary>
            Report section element added
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.Events.ReportEventHint.SectionElementRemoved">
            <summary>
            Report section element removed
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.Events.ReportAddedEvent">
            <summary>
            Occurs when a <see cref="T:ArcGIS.Desktop.Reports.Report">Report</see> is added to the project.
            </summary>
            <remarks>
            This event will be called if a report is manually inserted using the UI, copied and pasted into a project, or if a report is imported from another file.
            Reference <see cref="T:ArcGIS.Desktop.Reports.Events.ReportUpdatedEventArgs">ReportUpdatedEventArgs</see> to get a list of arguments.
            </remarks>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportAddedEvent.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportAddedEvent.Subscribe(System.Action{ArcGIS.Desktop.Reports.Events.ReportUpdatedEventArgs},System.Boolean)">
            <summary>
            Subscribe to the ReportAddedEvent.
            </summary>
            <param name="action">The delegate that gets executed when the event is published.</param>
            <param name="keepSubscriberAlive">When <c>false</c> the <see cref="T:ArcGIS.Core.Events.CompositePresentationEvent`1">CompositePresentationEvent</see>
            will maintain a weak delegate reference to the subscriber. Using a weak delegate reference relieves the subscriber from the need to unsubscribe to enable 
            proper garbage collection. The default is <c>false</c>.</param>
            <returns>A <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> that uniquely identifies the added subscription.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportAddedEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Reports.Events.ReportUpdatedEventArgs})">
            <summary>
            Removes the first subscriber matching the provided delegate from the subscribers' list. 
            </summary>
            <param name="action">The delegate used when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportAddedEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
            Removes the subscriber matching the <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see>.
            </summary>
            <param name="token">The <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> returned when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportAddedEvent.Publish(ArcGIS.Desktop.Reports.Events.ReportUpdatedEventArgs)">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.Events.ReportRemovedEvent">
            <summary>
            Occurs when a <see cref="T:ArcGIS.Desktop.Reports.Report">Report</see> is removed.
            </summary>
            <remarks>
            Reference <see cref="T:ArcGIS.Desktop.Reports.Events.ReportUpdatedEventArgs">ReportUpdatedEventArgs</see> to get a list of arguments.
            </remarks>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportRemovedEvent.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportRemovedEvent.Subscribe(System.Action{ArcGIS.Desktop.Reports.Events.ReportUpdatedEventArgs},System.Boolean)">
            <summary>
            Subscribe to the ReportRemovedEvent.
            </summary>
            <param name="action">The delegate that gets executed when the event is published.</param>
            <param name="keepSubscriberAlive">When <c>false</c> the <see cref="T:ArcGIS.Core.Events.CompositePresentationEvent`1">CompositePresentationEvent</see>
            will maintain a weak delegate reference to the subscriber. Using a weak delegate reference relieves the subscriber from the need to unsubscribe to enable 
            proper garbage collection. The default is <c>false</c>.</param>
            <returns>A <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> that uniquely identifies the added subscription.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportRemovedEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Reports.Events.ReportUpdatedEventArgs})">
            <summary>
            Removes the first subscriber matching the provided delegate from the subscribers' list. 
            </summary>
            <param name="action">The delegate used when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportRemovedEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
            Removes the subscriber matching the <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see>.
            </summary>
            <param name="token">The <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> returned when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportRemovedEvent.Publish(ArcGIS.Desktop.Reports.Events.ReportUpdatedEventArgs)">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.Events.ReportUpdatedEventArgs">
            <summary>
            Provides data for the <see cref="T:ArcGIS.Desktop.Reports.Events.ReportAddedEvent">ReportAddedEvent</see>
            and the <see cref="T:ArcGIS.Desktop.Reports.Events.ReportRemovedEvent">ReportRemovedEvent</see>.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportUpdatedEventArgs.#ctor(ArcGIS.Desktop.Reports.Report)">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Events.ReportUpdatedEventArgs.Report">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Reports.Report">Report</see> that was removed.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEvent">
            <summary>
            Occurs when a name or definition changes occur in a <see cref="T:ArcGIS.Desktop.Reports.Report">Report</see>
            </summary>
            <remarks>
            Reference <see cref="T:ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEventArgs">ReportPropertyChangedEventArgs</see> to get a list of arguments.
            </remarks>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEvent.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEvent.Subscribe(System.Action{ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEventArgs},System.Boolean)">
            <summary>
            Subscribe to the ReportPropertyChangedEvent.
            </summary>
            <param name="action">The delegate that gets executed when the event is published.</param>
            <param name="keepSubscriberAlive">When <c>false</c> the <see cref="T:ArcGIS.Core.Events.CompositePresentationEvent`1">CompositePresentationEvent</see>
            will maintain a weak delegate reference to the subscriber. Using a weak delegate reference relieves the subscriber from the need to unsubscribe to enable 
            proper garbage collection. The default is <c>false</c>.</param>
            <returns>A <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> that uniquely identifies the added subscription.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEventArgs})">
            <summary>
            Removes the first subscriber matching the provided delegate from the subscribers' list. 
            </summary>
            <param name="action">The delegate used when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
            Removes the subscriber matching the <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see>.
            </summary>
            <param name="token">The <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> returned when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEvent.Publish(ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEventArgs)">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEventArgs">
            <summary>
            Provides data for the <see cref="T:ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEvent">ReportPropertyChangedEvent</see>.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEventArgs.#ctor(ArcGIS.Desktop.Reports.Report,ArcGIS.Desktop.Reports.Events.ReportEventHint)">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEventArgs.Report">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Reports.Report">Report</see> that was changed.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Events.ReportPropertyChangedEventArgs.ReportEventHint">
            <summary>
            Gets the property that was changed.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEvent">
            <summary>
            Occurs when a property of the <see cref="T:ArcGIS.Desktop.Reports.ReportDataSource">ReportDataSource</see> changes for
            a <see cref="T:ArcGIS.Desktop.Reports.Report">Report</see> or <see cref="T:ArcGIS.Desktop.Reports.ReportRelateSection">ReportRelateSection</see>.
            </summary>
            <remarks>
            Reference <see cref="T:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEventArgs">ReportDataSourceChangedEventArgs</see> to get a list of arguments.
            </remarks>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEvent.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEvent.Subscribe(System.Action{ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEventArgs},System.Boolean)">
            <summary>
            Subscribe to the ReportDataSourceChangedEvent.
            </summary>
            <param name="action">The delegate that gets executed when the event is published.</param>
            <param name="keepSubscriberAlive">When <c>false</c> the <see cref="T:ArcGIS.Core.Events.CompositePresentationEvent`1">CompositePresentationEvent</see>
            will maintain a weak delegate reference to the subscriber. Using a weak delegate reference relieves the subscriber from the need to unsubscribe to enable 
            proper garbage collection. The default is <c>false</c>.</param>
            <returns>A <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> that uniquely identifies the added subscription.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEventArgs})">
            <summary>
            Removes the first subscriber matching the provided delegate from the subscribers' list. 
            </summary>
            <param name="action">The delegate used when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
            Removes the subscriber matching the <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see>.
            </summary>
            <param name="token">The <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> returned when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEvent.Publish(ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEventArgs)">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEventArgs">
            <summary>
            Provides data for the <see cref="T:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEvent">ReportDataSourceChangedEvent</see>.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEventArgs.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEventArgs.#ctor(ArcGIS.Desktop.Reports.Report,ArcGIS.Desktop.Reports.ReportSectionElement,ArcGIS.Desktop.Reports.ReportDataSource,ArcGIS.Desktop.Reports.Events.ReportEventHint)">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEventArgs.Report">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Reports.Report">Report</see> that changed.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEventArgs.ReportSectionElement">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Reports.ReportSectionElement">ReportSectionElement</see> that changed.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEventArgs.DataSource">
            <summary>
            Gets the new <see cref="T:ArcGIS.Desktop.Reports.ReportDataSource">ReportDataSource</see> properties.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Events.ReportDataSourceChangedEventArgs.ReportEventHint">
            <summary>
            Gets the property of the <see cref="T:ArcGIS.Desktop.Reports.ReportDataSource">ReportDataSource</see> that changed.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEvent">
            <summary>
            Occurs when different types of sections are added, removed, or reordered in the <see cref="T:ArcGIS.Desktop.Reports.Report">Report</see>.
            </summary>
            <remarks>
            Reference <see cref="T:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEventArgs">ReportSectionChangedEventArgs</see> to get a list of arguments.
            </remarks>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEvent.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEvent.Subscribe(System.Action{ArcGIS.Desktop.Reports.Events.ReportSectionChangedEventArgs},System.Boolean)">
            <summary>
            Subscribe to the ReportSectionChangedEvent.
            </summary>
            <param name="action">The delegate that gets executed when the event is published.</param>
            <param name="keepSubscriberAlive">When <c>false</c> the <see cref="T:ArcGIS.Core.Events.CompositePresentationEvent`1">CompositePresentationEvent</see>
            will maintain a weak delegate reference to the subscriber. Using a weak delegate reference relieves the subscriber from the need to unsubscribe to enable 
            proper garbage collection. The default is <c>false</c>.</param>
            <returns>A <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> that uniquely identifies the added subscription.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Reports.Events.ReportSectionChangedEventArgs})">
            <summary>
            Removes the first subscriber matching the provided delegate from the subscribers' list. 
            </summary>
            <param name="action">The delegate used when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
            Removes the subscriber matching the <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see>.
            </summary>
            <param name="token">The <see cref="T:ArcGIS.Core.Events.SubscriptionToken">SubscriptionToken</see> returned when subscribing to the event.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEvent.Publish(ArcGIS.Desktop.Reports.Events.ReportSectionChangedEventArgs)">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEventArgs">
            <summary>
            Provides data for the <see cref="T:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEvent">ReportSectionChangedEvent</see>.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEventArgs.#ctor">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEventArgs.#ctor(ArcGIS.Desktop.Reports.Report,ArcGIS.Desktop.Reports.ReportSectionElement,System.String,ArcGIS.Desktop.Reports.Events.ReportEventHint)">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEventArgs.Report">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Reports.Report">Report</see> that changed.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEventArgs.ReportSectionElement">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Reports.ReportSectionElement">ReportSectionElement</see> that changed.
            This object will be null if the element was removed.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEventArgs.ElementName">
            <summary>
            Gets the name of the section element that changed.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Events.ReportSectionChangedEventArgs.ReportEventHint">
            <summary>
            Gets the hint to indicate what changed.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.Report">
            <summary>
            Represent a report.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.Finalize">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.Dispose(System.Boolean)">
            <summary>
            Disposes the current object
            </summary>
            <param name="disposing">True when being called from an IDisposable.Dispose method. False when called from the finalizer and in the GC Finalizer's thread.</param>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.ConnectionStatus">
            <summary>
            Gets a value indicating the report's connection status.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.URI">
            <summary>
            Gets or sets the URI property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.Name">
            <summary>
            Gets or sets the Name property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.Page">
            <summary>
            Gets or sets the Page property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.PageHeight">
            <summary>
            Gets or sets the PageHeight property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.OperationManager">
            <summary>
            Gets the OperationManager which is responsible for managing the undo/redo stack.
            </summary>
            <value>
            Type: <see cref="T:ArcGIS.Desktop.Framework.OperationManager">OperationManager</see>
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.DataSource">
            <summary>
            Gets the data source of the report.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.DataSources">
            <summary>
            Gets the data source of the report.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.Elements">
            <summary>
            Gets the collection of elements in the report.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetName(System.String)">
            <summary>
            Updates the name of the report.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="name">Name of the report.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetPageHeight(System.Double)">
            <summary>
            Updates the page height of the report.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="pageHeight">Page height of the report.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetPage(ArcGIS.Core.CIM.CIMPage)">
            <summary>
            Sets the page of the report.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="page">The new page for the report.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetDefinitionQuery(System.String)">
            <summary>
            Updates the definition query of the report.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="defQuery">Definition query of the report.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetDefinitionQuery(System.String,System.String)">
            <summary>
            Updates the definition query of the report.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="defQuery">Definition query of the report.</param>
            <param name="datasourceSection">Name of section containing datasource.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetDataSource(ArcGIS.Desktop.Reports.ReportDataSource)">
            <summary>
            Updates the data source of the report.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="dataSource">The source for the report.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetDataSource(ArcGIS.Desktop.Reports.ReportDataSource,System.String)">
            <summary>
            Updates the data source of the report.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="dataSource">The source for the report.</param>
            <param name="reportSectionName">Name of the report section.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.AddGroup(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Adds a group section to the report. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="fieldName">The name of the field for the group.</param>
            <param name="sortAscending">Sort the group field data in ascending order.</param>
            <param name="caseSensitiveSort">Use case sensitive compares when sorting the group field data.</param>
            <param name="parentGroupFieldName">The name of the parent group. If empty, the group will be the topmost group.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.AddGroup(System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Adds a group section to the report. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="fieldName">The name of the field for the group.</param>
            <param name="sortAscending">Sort the group field data in ascending order.</param>
            <param name="caseSensitiveSort">Use case sensitive compares when sorting the group field data.</param>
            <param name="parentGroupFieldName">The name of the parent group. If empty, the group will be the topmost group.</param>
            <param name="containerSectionName">The name of the section to add the group.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.RemoveGroups(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes the group from the report. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="groupFieldNames">The array of group field names.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">The report does not have a valid report section.</exception>
            <exception cref="T:System.ArgumentException">The group field names must be associated by a header and footer section.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.RemoveGroups(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes the group from the report. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="groupFieldNames">The array of group field names.</param>
            <param name="parentSectionNames">The array of section names containing group.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">The report does not have a valid report section.</exception>
            <exception cref="T:System.ArgumentException">The group field names must be associated by a header and footer section.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.AddRelatedReport(System.String,System.String,System.String,ArcGIS.Core.CIM.CIMReportDataSource,ArcGIS.Core.CIM.CIMReportElementFieldProperties[],System.String,System.String)">
            <summary>
            Adds a related report section to the report. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="relateName">The name of the relationship.</param>
            <param name="relateTitle">The user provided name of the related report section.</param>
            <param name="insertSectionName">The report section name to insert relate report.</param>
            <param name="reportDataSource">Object defining data source, fields, and definition query for the report.</param>
            <param name="statProperties">An array CIMReportElementFieldProperties that includes the statatistics that will be used in the footer sections.</param>
            <param name="templatePath">The path to the report template.</param>
            <param name="styling">The name of the report styling.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.RemoveRelatedReport(System.String)">
            <summary>
            Removes the related report from the report. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="relatedReportName">The related report name.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">The report does not have a valid report section.</exception>
            <exception cref="T:System.ArgumentException">The relatedReportName is empty or null.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetRelatedReportName(System.String,System.String)">
            <summary>
            Updates the name of the related report element.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="relatedReportElementName">Name of the related report element to change.</param>
            <param name="newName">Name of the related report.</param>
            <exception cref="T:System.InvalidOperationException">The relatedReportElementName is not valid.</exception>
            <exception cref="T:System.ArgumentException">The newName is empty or null.</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetDataSourceFields(System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMReportField})">
            <summary>
            Updates the grouping and sorting fields of the report.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="reportFields">Array of grouping and sorting fields for the report.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetDataSourceFields(System.String,System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMReportField})">
            <summary>
            Updates the grouping and sorting fields of the report.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="reportSectionName">Name of the report section.</param>
            <param name="reportFields">Array of grouping and sorting fields for the report section.</param>
            <exception cref="T:System.ArgumentException">The reportSectionName is empty or null.</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetRelatedDataSourceFields(System.String,System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMReportField})">
            <summary>
            Updates the grouping and sorting fields of the related report section.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="relatedReportElementName">Name of the related report element to update.</param>
            <param name="reportFields">Array of grouping and sorting fields for the related report.</param>
            <exception cref="T:System.ArgumentException">The newName is empty or null.</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetRelatedDataSource(ArcGIS.Desktop.Reports.ReportDataSource,System.String,System.String)">
            <summary>
            Updates the data source of the related report section.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="dataSource">The source for the related report.</param>
            <param name="relatedReportElementName">Name of the related report element to update.</param>
            <param name="relateName">Name of the new relationship.</param>
            <exception cref="T:System.ArgumentException">The relatedReportElementName is empty or null.</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.GetDefinition">
            <summary>
            Returns the element's CIM definition.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            </example>
            <returns><see cref="T:ArcGIS.Core.CIM.CIMReport"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SetDefinition(ArcGIS.Core.CIM.CIMReport)">
            <summary>
            Applies the changes made to a modified <see cref="T:ArcGIS.Core.CIM.CIMReport"></see> back to the report. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="cimReport"><see cref="T:ArcGIS.Core.CIM.CIMReport">CIMReport</see></param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.AddLayoutPage(ArcGIS.Desktop.Core.Item,System.String)">
            <summary>
            Adds a layout page section to the report. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="layoutItem">The layout item.</param>
            <param name="insertSectionName">The name of the report section that the page will be added after. If null, the page is added to the end of the report. If empty, the page is added to the beginning of the report.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">The layoutItem is invalid.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ReplaceLayoutPage(ArcGIS.Desktop.Core.Item,System.String)">
            <summary>
            Replaces a layout page section with a new layout definition. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="layoutItem">The layout item.</param>
            <param name="layoutPageSectionName">The report section name to insert relate report.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">The layoutItem is invalid.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.RemoveSupplementalPage(System.String)">
            <summary>
            Removes the supplemental page from the report. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="pageName">The supplemental page section name.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">The pageName is empty or null.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.MoveReportSectionElement(ArcGIS.Desktop.Reports.ReportSectionElement,System.Int32)">
            <summary>
            Moves the report section element to new index location. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="reportSectionElement">The report section element.</param>
            <param name="newIndex">The new index location.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">The section must be a report section or supplemental page section.</exception>
            <exception cref="T:System.ArgumentException">The newIndex parameter is out of range.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.AddSubReport(ArcGIS.Desktop.Core.Item,System.Int32,System.Boolean)">
            <summary>
            Adds a subreport to the report. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="reportItem">The subreport item.</param>
            <param name="insertIndex">Position to add subreport. If -1, the subreport is added to the end of the report. If 0, the subreport is added to the beginning of the report.</param>
            <param name="adjustPageSize">Adjust the size of the subreport to match main report.</param>"
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">The reportItem is invalid.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.RemoveSectionElement(System.String)">
            <summary>
            Removes the report section element from the report. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="sectionName">The report section element name.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">The sectionName is empty or null.</exception>
            <exception cref="T:System.ArgumentException">The sectionElement is not valid.</exception>
            <exception cref="T:System.InvalidOperationException">Cannot remove last report section.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.FindElement(System.String)">
            <summary>
            Finds the report element by name. 
            </summary>
            <param name="elementName">the element name.</param>
            <returns>The report element.  Null if no element with the name can be found. </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.FindElements(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Finds the elements with the given names on the report.
            </summary>
            <param name="elementNames">The names of the elements to find. Cannot be null.</param>
            <remarks>Find recurses nested groups to find the given elements.</remarks>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> or an empty list if no elements are found</returns>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: elementNames</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.GetElementsAsFlattenedList">
            <summary>
            Get the collection of <see cref="T:ArcGIS.Desktop.Layouts.Element"/> from the report as a flattened list.
            Nested groups within <see cref="T:ArcGIS.Desktop.Layouts.GroupElement"/> are <b>not</b> preserved.
            </summary>
            <returns>A readonly list of the report elements.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.DeleteElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Deletes the specified element from the report.  Note that section elements cannot be deleted and will be ignored if specified.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="element">The element to be deleted.</param>
            <exception cref="T:System.ArgumentNullException">The value cannot be null: element</exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.DeleteElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Deletes the set of elements from the report.  Note that section elements cannot be deleted and will be ignored if specified.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elements">The set of elements to be deleted.</param>
            <remarks>
            If a group element is provided in the list of elements to be deleted then the
            group element and all its children will be deleted.<br/>If a child of a group element is
            provided in the list in <i>addition</i> to its parent then the parent takes precedence
            (i.e. the entire group element is deleted and not just <i>that</i> child)
            </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">The value cannot be null: elements</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SelectElement(ArcGIS.Desktop.Layouts.Element)">
             <summary>
             Selects the specified element in the report.
             </summary>
             <param name="element">The element to be selected.</param>
            <exception cref="T:System.ArgumentException">The element must belong to the report.</exception>
             <exception cref="T:System.ArgumentNullException">The value cannot be null: element</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SelectElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
             <summary>
             Selects the set of elements in the report.
             </summary>
             <param name="elements">The set of elements to be selected. If null, then all elements are unselected.</param>
             <remarks>
             If a child of a group element is provided in the list of elements to be
             selected in <i>addition</i> to its parent then the parent is the element selected.
             In addition if multiple section elements are in the list of elements, then only the first section element specified is selected.
             </remarks>
            <exception cref="T:System.ArgumentException">Elements must belong to the report.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SelectAllElements">
            <summary>
            Select all report elements in a report.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ClearElementSelection">
            <summary>
            Clears all selected elements in the report.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.GetSelectedElements">
            <summary>
            Gets the set of selected elements on the report.
            </summary>
            <returns>The set of selected elements.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.UnSelectElement(ArcGIS.Desktop.Layouts.Element)">
             <summary>
             Unselect the element on the report.
             </summary>
             <param name="element">The selected element to unselect. Cannot be null.</param>
             <exception cref="T:System.ArgumentNullException">Value cannot be null: element</exception>
            <exception cref="T:System.ArgumentException">The element must belong to the report.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.UnSelectElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Unselect the elements on the report.
            </summary>
            <param name="elements">The selected elements to unselect. If null then all elements are unselected.</param>
            <remarks>If a child of a group element is provided in the list of elements to be
            unselected in <i>addition</i> to its parent then the parent is the element unselected.<br/></remarks>
            <exception cref="T:System.ArgumentException">elements must belong to report.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ExportToPDF(System.String,ArcGIS.Desktop.Mapping.PDFFormat,ArcGIS.Desktop.Reports.ReportExportOptions,System.Boolean)">
            <summary>
            Export a report to a PDF format. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="outputName">Output file name.</param>
            <param name="exportFormat">Provides <see cref="T:ArcGIS.Desktop.Mapping.ExportFormat">PDFFormat</see> export options.</param>
            <param name="reportExportOptions">Report export options.</param>
            <param name="useSelection">Use the MapMember selection. If set to false, will override the default behavior and force all records to be exported.</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">The OutputFileName is invalid.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.Export(ArcGIS.Desktop.Mapping.ExportFormat,ArcGIS.Desktop.Internal.Mapping.IExportEventsCallback)">
            <summary>
            Export a layout to a variety of formats.
            </summary>
            <remarks>
            Multiple examples are provided with each format derived from <see cref="T:ArcGIS.Desktop.Mapping.ExportFormat"/>.
            </remarks>
            <param name="exportFormat"><see cref="T:ArcGIS.Desktop.Mapping.ExportFormat">ExportFormat</see></param>
            <param name="exportEventsCallback"></param>
            <exception cref="T:System.ArgumentException">The OutputFileName is invalid.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.Export(ArcGIS.Desktop.Mapping.ExportFormat,ArcGIS.Desktop.Internal.Mapping.IExportEventsCallback,System.Int64,System.Int64,ArcGIS.Desktop.Mapping.ExportPageOptions,System.String,System.Boolean,System.String)">
            <summary>
            Export a layout to a variety of formats.
            </summary>
            <remarks>
            Multiple examples are provided with each format derived from <see cref="T:ArcGIS.Desktop.Mapping.ExportFormat"/>.
            </remarks>
            <param name="exportFormat"><see cref="T:ArcGIS.Desktop.Mapping.ExportFormat">ExportFormat</see></param>
            <param name="exportEventsCallback">Callback getting exporting exents.</param>
            <param name="startingPageNumberLabelOffset">Starting page number offset.</param>
            <param name="totalPageNumberOverride">Total page number override.</param>
            <param name="pageRangeOption">Pages to export</param>
            <param name="selectedPageRanges">Range of pages to export (for example: "1, 3, 5-12").</param>
            <param name="useSelection">Use the MapMember selection.</param>
            <param name="appendQuery">Append additional definition query.</param>
            <exception cref="T:System.ArgumentException">The OutputFileName is invalid.</exception>
            <exception cref="T:ArcGIS.Desktop.Reports.ReportsException">Report export failed.</exception>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.Layout">
            <summary>
            Gets or sets the Report Designer Layout.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.ReportSection">
            <summary>
            The first report section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.ReportSections">
            <summary>
            The report sections.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.IsInitialized">
            <summary>
            Gets or sets the Initialized property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.ProjectItem">
            <summary>
            Gets the report project item associated with this report.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.ReportSync">
            <summary>
            IReportSync helper.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.ActiveSection">
            <summary>
            Gets or sets the ActiveSection property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.SelectedReportSections">
            <summary>
            The sections with selected elements.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.OpenView">
            <summary>
            Opens the view for this report.
            </summary>
            <returns>the opened view.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SelectElements(System.String[],System.Boolean,System.Boolean)">
            <summary>
            Handles selection from the native side.
            </summary>
            <param name="elementNames">Name of selected elements.</param>
            <param name="syncViewer">Flag indicating that the cim event should be ignored.</param>
            <param name="syncTOC"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SyncActiveReportSection">
            <summary>
            Syncs the current active section based on the current selection
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.CheckActivateReportSection(System.String[],System.Boolean)">
            <summary>
            Checks to see if the Active report section needs to change based on the selected element.
            
            If needed the report section is activated.
            </summary>
            <param name="elementNames">Array of selected elements to check.</param>
            <param name="checkAllElementContainers"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ActivateReportSectionFromOverlayName(System.String,System.Boolean)">
            <summary>
            Activates the report section.
            </summary>
            <param name="sectionName">The name of the report section to activate</param>
            <param name="selectReportSection">Indicates the report section should be selected</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ActivateReportSection(ArcGIS.Desktop.Reports.ReportSectionElement,System.Boolean)">
            <summary>
            Activates the report section.
            </summary>
            <param name="sectionElement">The report section to activate</param>
            <param name="selectReportSection">Indicates the report section should be selected</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.FindReportElement(System.String)">
            <summary>
            Finds the main Report element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.FindContainerReportSectionElement(System.String)">
            <summary>
            Finds the parent container report section element for the element with the specified name
            </summary>
            <param name="elementName">The name of the element</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.FindContainerReportSectionElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Finds the parent container report section element for the element
            </summary>
            <param name="element">The name of the element</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.FindContainerReportSection(System.String)">
            <summary>
            Finds the parent container report section for the element
            </summary>
            <param name="elementName">The name of the element</param>
            <returns></returns>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.IsReportSectionSelected">
            <summary>
            Checks to see if a report section element is in the SelectedElements collection 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.GetFieldDescriptions">
            <summary>
            Get the field descriptions for the report data source
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.SelectAll">
            <summary>
            Selects all elements in the active section.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.InitExternalPage">
            <summary>
            Initializes the extenal Table
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.RefreshTOCs(System.Boolean)">
            <summary>
            Refreshes the TOCs of all report panes
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ForEachReportPane(System.Action{ArcGIS.Desktop.Internal.Reports.ReportPaneViewModel})">
            <summary>
            Helper Method the calls an action on all open panes for the current report.
            </summary>
            <param name="action">The action to call.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ServiceContracts#IReportSync#OnReportCreated(System.Int32,System.String,System.String,ArcGIS.Desktop.Mapping.ConnectionStatus,System.Boolean)">
            <summary>
            Called from the Native side to indicate that a report object has been created.
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="reportXML">The report definition</param>
            <param name="status"></param>
            <param name="fireEvent">Fire the ReportAddedEvent</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ServiceContracts#IReportSync#OnReportRemoved(System.Int32,System.String)">
            <summary>
            Called from the native service to indicate that a report has been deleted.
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ServiceContracts#IReportSync#OnReportRenamed(System.Int32,System.String,System.String)">
            <summary>
            Called from the native service to indicate that a report has been renamed.
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="newName">The new name of the report.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ServiceContracts#IReportSync#OnReportSectionChanged(System.Int32,System.String,System.String,System.String,System.String,ServiceContracts.ReportSectionUpdateHint)">
            <summary>
            Called when the report section has changed height. Groups added or removed.
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="reportSectionName">The Name of the report section.</param>
            <param name="reportSectionXml">The Xml definition of the report section.</param>
            <param name="pageXml">The Xml definition of the page.</param>
            <param name="updateHint">Indicates UI properties the changed.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ServiceContracts#IReportSync#OnElementChanged(System.Int32,System.String,System.String[],System.String[])">
            <summary>
            Called when the report service updates the definition of elements
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="layoutPath">The report URI.</param>
            <param name="elementNames">The names of the elements that were udpated.</param>
            <param name="elementXMLs">The Xml definitions of the updated elements.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ServiceContracts#IReportSync#OnElementsInserted(System.Int32,System.String,System.String[],System.String[],System.String[],System.Int32[])">
            <summary>
            Called when the report service adds the definition of elements
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="elementNames">The names of the elements that were udpated.</param>
            <param name="elementXMLs">The Xml definitions of the updated elements.</param>
            <param name="groupElementNames"></param>
            <param name="indices"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ServiceContracts#IReportSync#OnElementsDeleted(System.Int32,System.String,System.String[])">
            <summary>
            Called when the report service deletes elements
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="elementNames">The names of the elements that were udpated.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ServiceContracts#IReportSync#OnReportSectionElementMoved(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Called when the report service deletes elements
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="elementName">Name of report section element to move.</param>
            <param name="newIndex">New index of element.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.Report.ServiceContracts#IReportSync#OnReportPageHeightChanged(System.Int32,System.String,System.Double)">
            <summary>
            Called from the native service to indicate that a report page height has changed.
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="newHeight"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.Report.Active">
            <summary>
            The report for the active report Pane.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.IReportElementFactory">
            <summary>
            Provides a mechanism for creating report elements. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.IReportElementFactory.CreateRectangleParagraphGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,System.String)">
            <summary>
            Creates a graphic rectangle text element on a layout from an envelope geometry with an added parameter to set the text symbol. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="text"><see cref="T:System.String">String</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement.</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.IReportElementFactory.CreateRectangleParagraphGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,System.String,ArcGIS.Core.CIM.CIMTextSymbol)">
            <summary>
            Creates a dynamic picture element defined by a field on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="text">The paragraph text content</param>
            <param name="textSymbol">The text symbol (optional) or null to assign the current default</param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement.</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.IReportElementFactory.CreateDynamicPictureGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,System.String)">
            <summary>
            Creates a dynamic picture element on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="url"><see cref="T:System.String">The url to the picture resource</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement.</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.IReportElementFactory.CreateDynamicPictureGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,ArcGIS.Core.CIM.CIMReportField)">
            <summary>
            Creates a dynamic picture element defined by a field on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="reportField"><see cref="T:ArcGIS.Core.CIM.CIMReportField">A field as the source.</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement.</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.IReportElementFactory.CreateAttachmentFrame(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope)">
            <summary>
            Creates an attachment frame element on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.AttachmentFrame">AttachmentFrame.</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.IReportElementFactory.CreateChartFrame(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,ArcGIS.Desktop.Mapping.MapMember,System.String)">
            <summary>
            Creates a chartFrame element on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="mapMember"></param>
            <param name="chartName"></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.ChartFrame">ChartFrame.</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.IReportElementFactory.CreateFieldStatisticTextElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,ArcGIS.Desktop.Reports.ReportFieldStatistic,ArcGIS.Core.CIM.CIMTextSymbol)">
            <summary>
            Creates a field statistic text element on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="reportFieldStatistic"><see cref="T:ArcGIS.Desktop.Reports.ReportFieldStatistic">ReportFieldStatistic</see></param>
            <param name="textSymbol"><see cref="T:ArcGIS.Core.CIM.CIMTextSymbol">CIMTextSymbol</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.IReportElementFactory.CreateFieldValueTextElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,ArcGIS.Core.CIM.CIMReportField,ArcGIS.Core.CIM.CIMTextSymbol)">
            <summary>
            Creates a field value text element on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="reportField"><see cref="T:ArcGIS.Core.CIM.CIMReportField">CIMReportField</see></param>
            <param name="textSymbol"><see cref="T:ArcGIS.Core.CIM.CIMTextSymbol">CIMTextSymbol</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportElementFactory">
            <summary>
            Provides methods to create the different types of report elements.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportElementFactory.Instance">
            <summary>
            Provides access to helper functions that create report elements.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportElementFactory.Create(ArcGIS.Core.CIM.CIMElement,ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Desktop.Layouts.Layout)">
            <summary>
            Creates a report element.
            </summary>
            <param name="cimElement">The CIMElement to create the model for.</param>
            <param name="container">The container of the element.</param>
            <param name="layout">The layout owner of the element.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportElementFactory.Create(ArcGIS.Core.CIM.CIMElement,ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Desktop.Reports.Report)">
            <summary>
            Creates a report element.
            </summary>
            <param name="cimElement">The CIMElement to create the model for.</param>
            <param name="container">The container of the element.</param>
            <param name="report">The report owner of the element</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportElementFactory.CalcNewElementPoint(ArcGIS.Desktop.Layouts.Layout)">
            <summary>
            Calculates the insertion point for new elements
            </summary>
            <param name="layout">The layout view to create it in.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportElementFactory.CreateRectangleParagraphGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,System.String)">
            <summary>
            Creates a graphic rectangle text element on a layout from an envelope geometry with an added parameter to set the text symbol. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="text"><see cref="T:System.String">String</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement.</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report section.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report.</exception>
            <exception cref="T:System.InvalidOperationException">Element extents outside section.</exception>
            <exception cref="T:System.InvalidOperationException">Failed to create text element.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportElementFactory.CreateRectangleParagraphGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,System.String,ArcGIS.Core.CIM.CIMTextSymbol)">
            <summary>
            Creates a graphic rectangle text element on a layout from an envelope geometry with an added parameter to set the text symbol. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="text"><see cref="T:System.String">String</see></param>
            <param name="textSymbol"><see cref="T:ArcGIS.Core.CIM.CIMTextSymbol">CIMTextSymbol</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement.</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report section.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report.</exception>
            <exception cref="T:System.InvalidOperationException">Element extents outside section.</exception>
            <exception cref="T:System.InvalidOperationException">Failed to create text element.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportElementFactory.CreateDynamicPictureGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,System.String)">
            <summary>
            Creates a dynamic picture element on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="arcadeExpression"><see cref="T:System.String">A string that represents an arcade expression defining the source.</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement.</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report section.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report.</exception>
            <exception cref="T:System.InvalidOperationException">Element extents outside section.</exception>
            <exception cref="T:System.InvalidOperationException">Dynamic picture elements only valid in details section.</exception>
            <exception cref="T:System.InvalidOperationException">Failed to create picture graphic.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportElementFactory.CreateDynamicPictureGraphicElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,ArcGIS.Core.CIM.CIMReportField)">
            <summary>
            Creates a dynamic picture element defined by a field on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="reportField"><see cref="T:ArcGIS.Core.CIM.CIMReportField">A field as the source.</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement.</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">reportField is null.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report section.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report.</exception>
            <exception cref="T:System.InvalidOperationException">Element extents outside section.</exception>
            <exception cref="T:System.InvalidOperationException">Dynamic picture elements only valid in details section.</exception>
            <exception cref="T:System.InvalidOperationException">Failed to create picture graphic.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportElementFactory.CreateAttachmentFrame(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope)">
            <summary>
            Creates an attachment frame element on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.AttachmentFrame">AttachmentFrame.</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report section.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report.</exception>
            <exception cref="T:System.InvalidOperationException">Element extents outside section.</exception>
            <exception cref="T:System.InvalidOperationException">Attachment frame elements only valid in details section.</exception>
            <exception cref="T:System.InvalidOperationException">Failed to create attachment frame.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportElementFactory.CreateChartFrame(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,ArcGIS.Desktop.Mapping.MapMember,System.String)">
            <summary>
            Creates a chartFrame element on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="mapMember"></param>
            <param name="chartName"></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.ChartFrame">ChartFrame.</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report section.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report.</exception>
            <exception cref="T:System.InvalidOperationException">Element extents outside section.</exception>
            <exception cref="T:System.InvalidOperationException">Cannot add chart frame to this section type.</exception>
            <exception cref="T:System.InvalidOperationException">Failed to create chart frame.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportElementFactory.CreateFieldStatisticTextElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,ArcGIS.Desktop.Reports.ReportFieldStatistic,ArcGIS.Core.CIM.CIMTextSymbol)">
            <summary>
            Creates a field statistic text element on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="reportFieldStatistic"><see cref="T:ArcGIS.Desktop.Reports.ReportFieldStatistic">ReportFieldStatistic</see></param>
            <param name="textSymbol"><see cref="T:ArcGIS.Core.CIM.CIMTextSymbol">CIMTextSymbol</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report section.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report.</exception>
            <exception cref="T:System.InvalidOperationException">Element extents outside section.</exception>
            <exception cref="T:System.InvalidOperationException">Cannot add element to this section type.</exception>
            <exception cref="T:System.InvalidOperationException">Failed to create text element.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportElementFactory.CreateFieldValueTextElement(ArcGIS.Desktop.Mapping.IElementContainer,ArcGIS.Core.Geometry.Envelope,ArcGIS.Core.CIM.CIMReportField,ArcGIS.Core.CIM.CIMTextSymbol)">
            <summary>
            Creates a field value text element on a report from an envelope geometry. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="elementContainer"><see cref="T:ArcGIS.Desktop.Mapping.IElementContainer">IElementContainer</see></param>
            <param name="envelope"><see cref="T:ArcGIS.Core.Geometry.Envelope">Envelope</see></param>
            <param name="reportField"><see cref="T:ArcGIS.Core.CIM.CIMReportField">CIMReportField</see></param>
            <param name="textSymbol"><see cref="T:ArcGIS.Core.CIM.CIMTextSymbol">CIMTextSymbol</see></param>
            <returns>Returns a <see cref="T:ArcGIS.Desktop.Layouts.GraphicElement">GraphicElement</see></returns>
            <remarks>The element gets added to the group at the topmost position. </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report section.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid report.</exception>
            <exception cref="T:System.InvalidOperationException">Element extents outside section.</exception>
            <exception cref="T:System.InvalidOperationException">Failed to create text element.</exception>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportDataSource">
            <summary>
            Represents the data source for a report.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportDataSource.#ctor(ArcGIS.Desktop.Mapping.MapMember,System.String,System.Boolean,System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMReportField})">
            <summary>
            Creates a ReportDataSource object using a MapMember.
            </summary>
            <param name="mapMember">The MapMember of the data source.</param>
            <param name="definitionQuery">The definition expression for the report.</param>
            <param name="useSelectionSet">Flag indicating that it should used the selection set of the MapMember.</param>
            <param name="fields"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportDataSource.#ctor(ArcGIS.Core.CIM.CIMDataConnection,System.String,System.Boolean,System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMReportField})">
            <summary>
            Creates a ReportDataSource object using a data connection.
            </summary>
            <param name="dataConnection">The Data connection of the source.</param>
            <param name="definitionQuery">The definition expression for the report.</param>
            <param name="useSelectionSet">Flag indicating that it should used the selection set of the MapMember.</param>
            <param name="fields"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportDataSource.#ctor(ArcGIS.Desktop.Mapping.MapMember,ArcGIS.Core.CIM.CIMDataConnection,System.String,System.Boolean,System.Collections.Generic.IEnumerable{ArcGIS.Core.CIM.CIMReportField})">
            <summary>
            Creates a ReportDataSource object.
            </summary>
            <param name="mapMember">The MapMember of the data source.</param>
            <param name="dataConnection">The Data connection of the source.</param>
            <param name="definitionQuery">The definition expression for the report.</param>
            <param name="useSelectionSet">Flag indicating that it should used the selection set of the MapMember.</param>
            <param name="fields"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDataSource.DataConnection">
            <summary>
            Gets the data connection to the source.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDataSource.MapMember">
            <summary>
            Gets the Layer or Standalone table in the project.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDataSource.DefinitionQuery">
            <summary>
            Gets the definition query.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDataSource.UseSelectionSet">
            <summary>
            Gets the value indicating that the selection of the Layer or Table should be used for the report.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDataSource.SupportsSelection">
            <summary>
            Gets the value indicating that the source supports selection.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDataSource.ConnectionStatus">
            <summary>
            Gets a value indicating the DataSource's connection status.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDataSource.Fields">
            <summary>
            Gets the report fields.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDataSource.GroupFields">
            <summary>
            Gets all the group fields
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDataSource.GroupFieldNames">
            <summary>
            Gets all the group field names.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportDataSource.FindField(System.String)">
            <summary>
            Finds a field with in the collection
            </summary>
            <param name="fieldName">The field name to search for.</param>
            <returns>The found field or null.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportDataSource.GetAddField(System.String)">
            <summary>
            Gets a field to be inserted at the end of the collection
            </summary>
            <param name="fieldName">The name of the fields</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportDataSource.ToCIMReportDataSource">
            <summary>
            Create a CIMReportDataSource from the current values.
            </summary>
            <returns>The CIMReportDataSource.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportFieldStatistic">
            <summary>
            Represents a field statistic.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportFieldStatistic.Field">
            <summary>
            Gets and sets the name of the field.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportFieldStatistic.Statistic">
            <summary>
            Gets and sets the statistic required for the field.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportSectionElement">
            <summary>
            Represents an abstract report element.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.ReportSectionElement._report">
            <exclude></exclude>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.ReportSectionElement._overlayElement">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportSectionElement.ClearElementSelection">
            <summary>
            Clear all report elements in the report section.
            </summary>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportSectionElement.GetSelectedElements">
            <summary>
            Returns a collection of selected report elements in the report section.
            </summary>
            <returns>A collection of page report elements.</returns>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportSectionElement.SelectAllElements">
            <summary>
            Select all report elements in the report section.
            </summary>  
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportSectionElement.SelectElements(System.Collections.Generic.IReadOnlyList{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Set the selected report elements for the report section.
            </summary>
            <param name="elements">A list of existing report elements.</param>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportSectionElement.ZoomToSelectedElements">
            <summary>
            Zoom the report view to the extent of the selected elements of the section.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportSectionElement.OverlayElement">
            <summary>
            The overlay element for the section.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportSectionElement.UpdateOverlayElement(ArcGIS.Core.CIM.CIMGroupElement)">
            <summary>
            Finds the overlay element and removed it from the group elements.
            </summary>
            <param name="sectionElement">Section element</param>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportSection">
            <summary>
            Represents a report section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportSection.DataSource">
            <summary>
            Gets or sets the DataSource property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportSection.FindGroupSections(System.String)">
            <summary>
            Find the group header and footer sections for a field.
            </summary>
            <param name="fieldName">The name of the field.</param>
            <returns>A tuple of the report header and footer or null, if not found.</returns>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.ReportSection.TypeName">
            <summary>
            Gets the type string of for report element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportSection.CaptionElement">
            <summary>
            The caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportSection.CaptionFormat">
            <summary>
            The Caption of the Format caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportSection.CaptionForSubElement">
            <summary>
            The Caption of the element for its subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportSection.ConditionElement">
            <summary>
            The Condition for element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportSection.ConditionSubElement">
            <summary>
            The Condition for subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportSection.ContextMenuId">
            <summary>
            The daml id for the element context menu.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportHeader">
            <summary>
            Represents a report header.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.ReportHeader.TypeName">
            <summary>
            Gets the type string of for report element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportHeader.CaptionElement">
            <summary>
            The caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportHeader.CaptionFormat">
            <summary>
            The Caption of the Format caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportHeader.CaptionForSubElement">
            <summary>
            The Caption of the element for its subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportHeader.ConditionElement">
            <summary>
            The Condition for element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportHeader.ConditionSubElement">
            <summary>
            The Condition for subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportHeader.ContextMenuId">
            <summary>
            The daml id for the element context menu.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportFooter">
            <summary>
            Represents a report footer.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.ReportFooter.TypeName">
            <summary>
            Gets the type string of for report element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportFooter.CaptionElement">
            <summary>
            The caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportFooter.CaptionFormat">
            <summary>
            The Caption of the Format caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportFooter.CaptionForSubElement">
            <summary>
            The Caption of the element for its subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportFooter.ConditionElement">
            <summary>
            The Condition for element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportFooter.ConditionSubElement">
            <summary>
            The Condition for subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportFooter.ContextMenuId">
            <summary>
            The daml id for the element context menu.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportPageHeader">
            <summary>
            Represents a report page header.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.ReportPageHeader.TypeName">
            <summary>
            Gets the type string of for report element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportPageHeader.CaptionElement">
            <summary>
            The caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportPageHeader.CaptionFormat">
            <summary>
            The Caption of the Format caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportPageHeader.CaptionForSubElement">
            <summary>
            The Caption of the element for its subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportPageHeader.ConditionElement">
            <summary>
            The Condition for element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportPageHeader.ConditionSubElement">
            <summary>
            The Condition for subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportPageHeader.ContextMenuId">
            <summary>
            The daml id for the element context menu.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportPageFooter">
            <summary>
            Represents a report page footer.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.ReportPageFooter.TypeName">
            <summary>
            Gets the type string of for report element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportPageFooter.CaptionElement">
            <summary>
            The caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportPageFooter.CaptionFormat">
            <summary>
            The Caption of the Format caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportPageFooter.CaptionForSubElement">
            <summary>
            The Caption of the element for its subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportPageFooter.ConditionElement">
            <summary>
            The Condition for element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportPageFooter.ConditionSubElement">
            <summary>
            The Condition for subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportPageFooter.ContextMenuId">
            <summary>
            The daml id for the element context menu.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportGroupHeader">
            <summary>
            Represents a report group header.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupHeader.GroupFieldName">
            <summary>
            Gets the name of the group field.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.ReportGroupHeader.TypeName">
            <summary>
            Gets the type string of for report element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupHeader.CaptionElement">
            <summary>
            The caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupHeader.CaptionFormat">
            <summary>
            The Caption of the Format caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupHeader.CaptionForSubElement">
            <summary>
            The Caption of the element for its subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupHeader.ConditionElement">
            <summary>
            The Condition for element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupHeader.ConditionSubElement">
            <summary>
            The Condition for subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupHeader.ContextMenuId">
            <summary>
            The daml id for the element context menu.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportGroupFooter">
            <summary>
            Represents a report group footer.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupFooter.GroupFieldName">
            <summary>
            Gets the name of the group field.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.ReportGroupFooter.TypeName">
            <summary>
            Gets the type string of for report element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupFooter.CaptionElement">
            <summary>
            The caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupFooter.CaptionFormat">
            <summary>
            The Caption of the Format caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupFooter.CaptionForSubElement">
            <summary>
            The Caption of the element for its subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupFooter.ConditionElement">
            <summary>
            The Condition for element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupFooter.ConditionSubElement">
            <summary>
            The Condition for element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportGroupFooter.ContextMenuId">
            <summary>
            The daml id for the element context menu.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportDetails">
            <summary>
            Represents a report details.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.ReportDetails.TypeName">
            <summary>
            Gets the type string of for report Details
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDetails.CaptionElement">
            <summary>
            The caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDetails.CaptionFormat">
            <summary>
            The Caption of the Format caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDetails.CaptionForSubElement">
            <summary>
            The Caption of the element for its subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDetails.ConditionElement">
            <summary>
            The Condition for element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDetails.ConditionSubElement">
            <summary>
            The Condition for subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportDetails.ContextMenuId">
            <summary>
            The daml id for the element context menu.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportRelateSection">
            <summary>
            Represents a report section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportRelateSection.DataSource">
            <summary>
            Gets or sets the DataSource property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportRelateSection.RelateName">
            <summary>
            Gets or sets the RelateName property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportRelateSection.FindGroupSections(System.String)">
            <summary>
            Find the group header and footer sections for a field.
            </summary>
            <param name="fieldName">The name of the field.</param>
            <returns>A tuple of the report header and footer or null, if not found.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportRelateSection.SelectAllElements">
            <summary>
            Select all report elements in the related report section.
            </summary>  
            <example>
            </example>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.ReportRelateSection.TypeName">
            <summary>
            Gets the type string of for report element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportRelateSection.CaptionElement">
            <summary>
            The caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportRelateSection.CaptionFormat">
            <summary>
            The Caption of the Format caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportRelateSection.CaptionForSubElement">
            <summary>
            The Caption of the element for its subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportRelateSection.ConditionElement">
            <summary>
            The Condition for element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportRelateSection.ConditionSubElement">
            <summary>
            The Condition for subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportRelateSection.ContextMenuId">
            <summary>
            The daml id for the element context menu.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportPageSection">
            <summary>
            Represents a supplemental page section of a report
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportLayoutPageSection">
            <summary>
            Represents a layout supplemental page section.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportLayoutPageSection.LayoutURI">
            <summary>
            Gets the CIMLayout uri property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Reports.ReportLayoutPageSection.TypeName">
            <summary>
            Gets the type string of for report element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportLayoutPageSection.CaptionElement">
            <summary>
            The caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportLayoutPageSection.CaptionFormat">
            <summary>
            The Caption of the Format caption for the element
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportLayoutPageSection.CaptionForSubElement">
            <summary>
            The Caption of the element for its subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportLayoutPageSection.ConditionElement">
            <summary>
            The Condition for element.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportLayoutPageSection.ConditionSubElement">
            <summary>
            The Condition for subelement.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportLayoutPageSection.ContextMenuId">
            <summary>
            The daml id for the element context menu.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.IReportFactory">
            <summary>
            Provides access to report creation members.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.IReportFactory.CreateReport(System.String,ArcGIS.Desktop.Reports.ReportDataSource,ArcGIS.Core.CIM.CIMPage,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Reports.ReportFieldStatistic},ArcGIS.Desktop.Reports.ReportTemplate,System.String)">
            <summary>
            Creates a new report and adds it to a project. The source data for the report can be either 
            a Layer or Table or a data connection to the data. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="name">The name of the report.</param>
            <param name="reportDataSource">Object defining data source, fields, and definition query for the report.</param>
            <param name="page">The page definition for the report.</param>
            <param name="statistics">An array of <see cref="T:ArcGIS.Desktop.Reports.ReportFieldStatistic">.</see> that includes the statistics that will be used in the footer sections.</param>
            <param name="template">The report template.</param>
            <param name="styling">The name of the report styling.</param>
            <returns>The created report.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.IReportFactory.CreateReport(System.String,ArcGIS.Desktop.Reports.ReportDataSource)">
            <summary>
            Creates a new report and adds it to a project. The source data for the report can be either 
            a Layer or Table or a data connection to the data. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="name">The name of the report.</param>
            <param name="reportDataSource">Object defining data source, fields, and definition query for the report.</param>
            <returns>The created report.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.IReportFactory.CopyReport(ArcGIS.Desktop.Reports.Report)">
            <summary>
            Copy an existing report.
            </summary>
            <param name="report">The report to copy.</param>
            <returns>The copied report.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportFactory">
            <summary>
            Provides methods to create new report project items.
            </summary>
            <remarks>
            <para>
            Creating a new report generates a new report project item that appears in the Reports folder in the Contents pane.  
            </para>
            <para>
            A new report project item is not automatically opened in a report view pane.  
            </para>
            </remarks>
            <example>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportFactory.Instance">
            <summary>
            Gets the singleton instance for IReportFactory.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportFactory.CreateReport(System.String,ArcGIS.Desktop.Reports.ReportDataSource,ArcGIS.Core.CIM.CIMPage,System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Reports.ReportFieldStatistic},ArcGIS.Desktop.Reports.ReportTemplate,System.String)">
            <summary>
            Creates a new report and adds it to a project. The source data for the report can be either 
            a Layer or Table or a data connection to the data. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="name">The name of the report.</param>
            <param name="reportDataSource"><see cref="T:ArcGIS.Desktop.Reports.ReportDataSource">ReportDataSource</see> object defining data source, fields, and definition query for the report.</param>
            <param name="page">The<see cref="T:ArcGIS.Core.CIM.CIMPage"> CIMPage</see> definition for the report.</param>
            <param name="statistics">An array of <see cref="T:ArcGIS.Desktop.Reports.ReportFieldStatistic">.</see> that includes the statistics that will be used in the footer sections.</param>
            <param name="template">The report template.</param>
            <param name="styling">The name of the report styling.</param>
            <returns>The created report.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">reportDataSource</exception>
            <exception cref="T:System.InvalidOperationException">Must provide valid page with units defined.</exception>
            <exception cref="T:System.InvalidOperationException">Grouping template specified but no group field defined.</exception>
            <exception cref="T:System.InvalidOperationException">Group field defined for a non-grouping template.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportFactory.CreateReport(System.String,ArcGIS.Desktop.Reports.ReportDataSource)">
            <summary>
            Creates a new report and adds it to a project. The source data for the report can be either 
            a Layer or Table or a data connection to the data. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="name">The name of the report.</param>
            <param name="reportDataSource"><see cref="T:ArcGIS.Desktop.Reports.ReportDataSource">ReportDataSource</see> object defining data source, fields, and definition query for the report.</param>
            <returns>The created report.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">reportDataSource</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportFactory.CopyReport(ArcGIS.Desktop.Reports.Report)">
            <summary>
            Copy an existing report.  This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="report">The report to copy.</param>
            <returns>The copied report.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Null input report</exception>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportExportOptions">
            <summary>
            Represents a collection of settings for exporting a report.
            </summary>
            <remarks>
            Before you can export a report, you need to configure your <see cref="T:ArcGIS.Desktop.Mapping.ExportFormat">ExportFormat</see>
            and you need to construct your export settings.
            </remarks>
            <example>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportExportOptions.#ctor">
            <summary>
            Creates a collection of export options specific to exporting a report.
            </summary>
            <example>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportExportOptions.StartingPageNumberLabelOffset">
            <summary>
            Gets and sets the starting page number label offset.
            </summary>
            <remarks>
            <para>Specify the starting page number for this report.</para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportExportOptions.TotalPageNumberOverride">
            <summary>
            Gets and sets the total page number label offset.
            </summary>
            <remarks>
            <para>Specify the total page number for this report.</para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportExportOptions.ExportPageOption">
            <summary>
            Gets and sets the collection of report pages to be exported.
            </summary>
            <remarks>
            <para>Specify the collection of pages by choosing one of the <see cref="T:ArcGIS.Desktop.Mapping.ExportPageOptions">ExportPageOption</see>.</para>
            <para>The <c>Custom</c> option requires that you also set the CustomPages property.</para>
            <para>The <c>SelectedIndexFeatures</c> option only applies to a spatial map series.</para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportExportOptions.CustomPages">
            <summary>
            Gets or sets a string that represents a list of pages and/or page ranges.
            </summary>
            <remarks>
            <para>The values in the string represent the pages to export. You can create a comma-delimited list of pages or you can use a hyphen
            to designate a range.  An example might be, "1-3, 5" or , "1, 2, 23-28, 45, 63-65".  When using a hyphen, it  must be used between
            two existing values. You can't use the hyphen as a wildcard like "65-".</para>
            </remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportStylingManager">
            <summary>
            Manages the report styling.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportStylingManager.GetStylings">
            <summary>
            Gets the list of report stylings.  This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <returns>A list of report stylings.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportStylingManager.GetStylingsAsync">
            <summary>
            Gets the report templates. They are loaded if needed.
            </summary>
            <returns>Awaitable task for a collection of report templates.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportTemplate">
            <summary>
            Represents the basic information of report templates.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportTemplate.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a report template
            </summary>
            <param name="path"></param>
            <param name="name"></param>
            <param name="isGrouping"></param>
            <param name="isRelated"></param>
            <param name="description"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportTemplate.Path">
            <summary>
            Gets and sets the Path property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportTemplate.Name">
            <summary>
            Gets and sets the Name property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportTemplate.IsGrouping">
            <summary>
            Gets and sets the IsGrouping property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportTemplate.IsRelated">
            <summary>
            Gets and sets the IsRelated property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportTemplate.Description">
            <summary>
            Gets and sets the Description property.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportTemplateManager">
            <summary>
            Manages the report templates.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportTemplateManager.GetTemplates">
            <summary>
            Gets the report templates. They are loaded if needed.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <returns>A collection of report templates.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportTemplateManager.GetTemplatesAsync">
            <summary>
            Gets the report templates. They are loaded if needed.
            </summary>
            <returns>Awaitable task for a collection of report templates.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportProjectItem">
            <summary> 
            Represents a report project item.
            </summary>
            <remarks>
            <para>Each <see cref="T:ArcGIS.Desktop.Internal.Reports.Report">Report</see> in a project is associated with a ReportProjectItem.  This item contains numerous 
            read-only metadata properties about the report. Although a report may exist in the project, it may not be loaded (an open report view).  To reference the 
            actual report and ensure it is loaded into memory, you must use the <see cref="M:ArcGIS.Desktop.Internal.Reports.ReportProjectItem.GetReport">GetReport</see> method.</para>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportProjectItem.#ctor(ESRI.ArcGIS.ItemIndex.ItemInfoValue)">
            <summary>
            For internal use. Do not use.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportProjectItem.GetReport">
            <summary>
            Loads and returns the <see cref="T:ArcGIS.Desktop.Reports.Report">Report</see> associated with the ReportProjectItem.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns><see cref="T:ArcGIS.Desktop.Internal.Reports.Report">Report</see></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportProjectItem.ArcGIS#Desktop#Internal#Core#IProjectItemRename#PreviewRenameAsync(System.String)">
            <summary>
            PreviewRenameAsync is called first by the rename operation. The implementation should set the `name`
            property of a new ItemInfoValue and return it.
            </summary>
            <param name="newName">The new name</param>
            <returns>The updated ItemInfoValue</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportProjectItem.ArcGIS#Desktop#Internal#Core#IProjectItemRename#PreviewRename(System.String)">
            <summary>
            PreviewRename is called first by the rename operation. The implementation should set the `name`
            property of a new ItemInfoValue and return it.
            </summary>
            <param name="newName">The new name</param>
            <returns>The updated ItemInfoValue</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportProjectItem.ArcGIS#Desktop#Internal#Core#IProjectItemRename#Rename(System.String)">
            <summary>
            Rename will be called after PreviewRename and will pass the `name` property 
            of the ItemInfoValue returned by PreviewRename.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="newName">The new name</param>
            <returns>Awaitable task.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportProjectItem.ArcGIS#Desktop#Internal#Core#IProjectItemRename#RenameAsync(System.String)">
            <summary>
            RenameAsync will be called after PreviewRenameAsync and will pass the `name` property 
            of the ItemInfoValue returned by PreviewRenameAsync
            </summary>
            <param name="newName">The new name</param>
            <returns>Awaitable task.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportProjectItem.ArcGIS#Desktop#Internal#Core#IProjectItemRename#CanRename">
            <summary>
            CanRename called by command processor for context menu to enable/disable menu item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportProjectItem.IsModelInitialized">
            <summary>
            Checks to see if the report model has been initialized.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportProjectItem.Report">
            <summary>
            Helper to get the associated Report. The Project Item must be initialized, before accessing this property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportProjectItem.OnRemoveFromProject">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportProjectItem.InitializeModelAsync">
            <summary>
            Initialized the report model for this project item.
            </summary>
            <returns>Awaitable task.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportProjectItem.OnOpenView">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportProjectItem.CanOpenView">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportProjectItem.OpenReportViewAsync">
            <summary>
            Wrapper for the protected OnOpenView method.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportProjectItem.DisplayType">
            <summary>
            Gets the report item display type string.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportsException">
            <summary>
            Represent a report exception.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportsModule">
            <summary>
            Represents the reports module.
            </summary>
            <remarks>
            <para>
            Modules are what make the framework system extensible.  The framework loads modules and when your module loads, everything in it loads as well, for example, 
            commands, widgets, a custom about panel, and so on.
            </para>
            <para> 
            The ONLY member that you can use is <see cref="P:ArcGIS.Desktop.Internal.Reports.ReportsModule.Current">Current</see>.  The API reference help displays many more protected 
            members that are inherited from <see cref="T:ArcGIS.Desktop.Framework.Contracts.Module"/> but these are not available to the report module. They would only be 
            accessible if you were to create your own custom module.
            </para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportsModule.ReportService">
            <summary>
            The report Service
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.AdviceSync">
            <summary>
            Registers its syncs
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.Initialize">
            <summary>
            Called by framework to initialize the report module.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.Uninitialize">
            <summary>
            Called by the framework to uninitialize the report module.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.OnPaneActivated(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <summary>
            Called by the Framework when a Pane is activated. 
            </summary>
            <param name="incomingPane">The Pane being activated.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.OnPaneClosed(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <summary>
             Called by the Framework when a Pane is closed.
            </summary>
            <param name="pane">The Pane being closed.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.OnPaneClosing(ArcGIS.Desktop.Framework.Contracts.Pane,ArcGIS.Desktop.Framework.Events.CancelRoutedEventArgs)">
            <summary>
            Called by the Framework when one of the Module's Pane is about to close.
            </summary>
            <param name="pane">The Pane being closed.</param>
            <param name="e">The event data associated with the closing event. Set the Cancel property to false to cancel the action.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.OnPaneDeactivated(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <summary>
            Called by the Framework when a Pane is deactivated.
            </summary>
            <param name="outgoingPane">The Pane being deactivated.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.OnPaneOpened(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <summary>
            Called by the Framework when a new Pane is opened. This occurs after the pane has been fully initialized.
            </summary>
            <param name="pane">The new Pane.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.OnProjectClosed(ArcGIS.Desktop.Core.Events.ProjectEventArgs)">
            <summary>
            Occurs when the project is closed
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportsModule.Current">
            <summary>
            Returns a reference to the current report module in the application.  There is only one report module.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportsModule.Reports">
            <summary>
            Gets a list of the current open Reports.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.CreateReport(System.Int32,System.String,ArcGIS.Core.CIM.CIMReportDataSource,ArcGIS.Core.CIM.CIMPage,ArcGIS.Core.CIM.CIMReportElementFieldProperties[],System.String,System.String)">
            <summary>
            Creates a new report and adds it to a project. The source data for the report can be either 
            a Layer or Table or a data connection to the data.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="projectId">Target project</param>
            <param name="name">The name of the report.</param>
            <param name="reportDataSource">Object defining data source, fields, and definition query for the report.</param>
            <param name="page">The page definition for the report.</param>
            <param name="statProperties">An array CIMReportElementFieldProperties that includes the statatistics that will be used in the footer sections.</param>
            <param name="templatePath">The path to the report template.</param>
            <param name="styling">The name of the report styling.</param>
            <returns>The created report.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.GetReport(System.String)">
            <summary>
            Gets a opened report by Uri. If the report has not been loaded call the OpenReport method.
            </summary>
            <param name="reportUri">The uri of the report.</param>
            <returns>The report.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.LoadReportModel(System.String)">
            <summary>
            Loads a report model from the native side.
            </summary>
            <param name="reportPath">Uri of the report</param>
            <returns>The loaded report</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.RemoveReport(System.String)">
            <summary>
            Removed a report from a project.
            </summary>
            <param name="reportUri">The uri of the report</param>
            <returns>An awaitable task.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.CopyReport(System.String)">
            <summary>
            Copies the source report and return the uri of the new report.
            </summary>
            <param name="sourceReportUri">The uri to the report to copy.</param>
            <returns>The uri of the new report.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.ExportReport(System.String)">
            <summary>
            Exports a report
            </summary>
            <param name="reportUri"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.FindReport(ArcGIS.Desktop.Layouts.Layout)">
            <summary>
            Finds the report for a layout.
            </summary>
            <param name="layout">The layout to search for.</param>
            <returns>The report or null.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportsModule.Commands">
            <summary>
            Helper to bind DAML commands to the ReportCommands Class.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportsModule.LayoutSync">
            <summary>
            Layout sync to forward events
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.ServiceContracts#IReportSync#OnReportCreated(System.Int32,System.String,System.String,ArcGIS.Desktop.Mapping.ConnectionStatus,System.Boolean)">
            <summary>
            Called from the Native side to indicate that a report object has been created.
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="reportXML">The report definition</param>
            <param name="status"></param>
            <param name="fireEvent">Fire the ReportAddedEvent</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.ServiceContracts#IReportSync#OnReportRemoved(System.Int32,System.String)">
            <summary>
            Called from the native service to indicate that a report has been deleted.
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.ServiceContracts#IReportSync#OnReportRenamed(System.Int32,System.String,System.String)">
            <summary>
            Called from the native service to indicate that a report has been renamed.
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="newName">The new name of the report.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.ServiceContracts#IReportSync#OnReportSectionChanged(System.Int32,System.String,System.String,System.String,System.String,ServiceContracts.ReportSectionUpdateHint)">
            <summary>
            Called when the report section has changed height. Groups added or removed.
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="reportSectionName">The Name of the report section.</param>
            <param name="reportSectionXml">The Xml definition of the report section.</param>
            <param name="pageXml">The Xml definition of the page.</param>
            <param name="updateHint">Indicates UI properties the changed.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.ServiceContracts#IReportSync#OnElementChanged(System.Int32,System.String,System.String[],System.String[])">
            <summary>
            Called when the report service updates the definition of elements
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="elementNames">The names of the elements that were udpated.</param>
            <param name="elementXMLs">The Xml definitions of the updated elements.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.ServiceContracts#IReportSync#OnElementsInserted(System.Int32,System.String,System.String[],System.String[],System.String[],System.Int32[])">
            <summary>
            Called when the report service adds the definition of elements
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="elementNames">The names of the elements that were udpated.</param>
            <param name="elementXMLs">The Xml definitions of the updated elements.</param>
            <param name="groupElementNames"></param>
            <param name="indices"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.ServiceContracts#IReportSync#OnElementsDeleted(System.Int32,System.String,System.String[])">
            <summary>
            Called when the report service deletes elements
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="elementNames">The names of the elements that were udpated.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.ServiceContracts#IReportSync#OnReportSectionElementMoved(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Called when the report service deletes elements
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="elementName">Name of report section element to move.</param>
            <param name="newIndex">New index of element.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportsModule.ServiceContracts#IReportSync#OnReportPageHeightChanged(System.Int32,System.String,System.Double)">
            <summary>
            Called from the native service to indicate that a report's page height has changed.
            </summary>
            <param name="projectID">Project Id of the report.</param>
            <param name="reportPath">The report URI.</param>
            <param name="newHeight">The new page height of the report.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.IReportPane">
            <summary>
            Represents a pane which contains a report view.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.IReportPane.Caption">
            <summary>
            Gets or sets the caption for the pane the way it appears on the tab.  
            </summary>
            <remarks>By default the caption is equal to the name of the report.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.IReportPane.ReportView">
            <summary>
            Gets the report view contained within the pane.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.IReportPane.ViewState">
            <summary>
            Gets the definition of the view within the pane.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Reports.ReportView">
            <summary>
            Represents the view of report in a pane.
            </summary>
            <remarks>
            <para>
            A project can contain multiple rerports.  A report view is a pane that displays the view of a report.  
            Report views are the primary interface used to display, navigate, and select report elements.  
            The report being visualized in the view can be accessed via the <see cref="P:ArcGIS.Desktop.Reports.ReportView.Report">Report </see> property.
            </para>
            <para>
            There can be multiple report views open at a given time, but there can only be one active report view.  
            The active report view will set the context for the ribbon and many of the dock panes in the application.
            The <see cref="P:ArcGIS.Desktop.Reports.ReportView.Active">Active </see> property will return null if there is no active report view.
            </para>
            <para>
            The report view has several "ZoomTo" nagivation methods and it also provides the context for managing selected items in the Contents pane.  
            For example, the <see cref="M:ArcGIS.Desktop.Reports.ReportView.GetSelectedElements">GetSelectedElements </see> method returns a collection of selected page report elements.
            </para>
            </remarks>
            <example>
            The following examples demonstrate different ways of working with report views.
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippetsReports.cs" region="Activate an already open report view" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.#ctor">
            <exclude></exclude>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportView.Active">
            <summary>
            Gets the active report view. 
            </summary>
            <remarks>Returns null if there is no active report view.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Reports.ReportView.Report">
            <summary>
            Gets the report associated with the report view.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.ZoomTo(ArcGIS.Core.Geometry.Geometry)">
            <summary>
            Zoom the report view to the extent defined by a geometry.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="geometry">The geometry defining the extent in which to pan.</param>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippetsReports.cs" region="Zoom to specific location on Report view" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.ZoomToWholePage">
            <summary>
            Zoom the report view to the whole page.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippetsReports.cs" region="Zoom to whole page" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.ZoomToPageWidth">
            <summary>
            Zoom the report view to the width of the page.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippetsReports.cs" region="Zoom to page width" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.ZoomToSelectedElements">
            <summary>
            Zoom the report view to the extent of the selected elements.  This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippetsReports.cs" region="Zoom to selected elements" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.ZoomToElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Zoom to the extent of the element.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="element">The eleemnt to zoom to.</param>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">The value cannot be null: element</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.ZoomToElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Zoom to the extent of the elements.
            This method must be called on the MCT.  Use QueuedTask.Run.
            </summary>
            <param name="elements">The set of elements to zoom to.</param>
            <returns>Returns <c>true</c> if the navigation is completed, <c>false</c> if it was interrupted by another view navigation.</returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">The value cannot be null: elements</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.GetSelectedElements">
            <summary>
            Returns a collection of selected report elements.
            </summary>
            <returns>A collection of page report elements.</returns>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippetsReports.cs" region="Get selected elements" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.SelectElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Set the element selected for the report view.
            </summary>
            <param name="element">The element to select. Cannot be null.</param>
            <exception cref="T:System.ArgumentNullException">The value cannot be null: element</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.SelectElements(System.Collections.Generic.IReadOnlyList{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Set the selected report elements for the report view.
            </summary>
            <param name="elements">A list of existing report elements. If null then all elements are unselected.</param>
            <remarks>
            If a child of a group element is provided in the list of elements to be
            selected in <i>addition</i> to its parent then the parent is the element selected.
            In addition if multiple section elements are in the list of elements, then only the first section element is selected.
            </remarks>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippetsReports.cs" region="Select elements" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.SelectAllElements">
            <summary>
            Select all report elements in a report view.
            </summary>  
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippetsReports.cs" region="Select all elements" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.ClearElementSelection">
            <summary>
            Clear all report elements in the report view.
            </summary>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippetsReports.cs" region="Clear element selection" lang="CS"></code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.UnSelectElement(ArcGIS.Desktop.Layouts.Element)">
            <summary>
            Unselect the element within the report view.
            </summary>
            <param name="element">The selected element to unselect. Cannot be null.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.UnSelectElements(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Layouts.Element})">
            <summary>
            Unselect the elements within the report view.
            </summary>
            <param name="elements">The selected elements to unselect. If null then all elements are unselected.</param>
            <remarks>If a child of a group element is provided in the list of elements to be
            unselected in <i>addition</i> to its parent then the parent is the element unselected.<br/>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Reports.ReportView.Refresh">
            <summary>
            Force the report view to redraw. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <example>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Layouts\ProSnippetsReports.cs" region="Refresh the report view" lang="CS"></code>
            </example>
        </member>
        <member name="T:ServiceContracts.ReportSectionUpdateHint">
            <summary>
            The type of update from the OnReportSectionChanged event.
            </summary>
        </member>
        <member name="T:ServiceContracts.IReportSync">
            <summary>
            The interface defining the native notifications from reports.
            </summary>
        </member>
        <member name="T:ServiceContracts.IReportService">
            <summary>
            The interface defining the contract between the managed and native reporting components.
            </summary>
        </member>
        <member name="M:ServiceContracts.IReportService.SetActiveReportSection(System.Int32,System.String,System.String)">
            <summary>
            Sets the name of the current report section.
            </summary>
            <param name="projectID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="sectionElementName">The name of the active report section.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.CreateReport(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new report in a project given the report definition.
            </summary>
            <param name="projectID">The project to create the report in.</param>
            <param name="name">The name for the report.</param>
            <param name="reportDataSourceXml">The data source for the report.</param>
            <param name="pageXml">The page definition for the report.</param>
            <param name="statPropertiesXml">The xml for an array CIMReportElementFieldProperties that includes the stats that will be used in the footer sections</param>
            <param name="templatePath">The path to the report template.</param>
            <param name="styling">The name of the report styling.</param>
            <returns>The Uri of the created report.</returns>
        </member>
        <member name="M:ServiceContracts.IReportService.CopyReport(System.Int32,System.String)">
            <summary>
            Makes a copy of a report.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="sourceReportPath">The uri of the report to copy.</param>
            <returns>The uri of the created report.</returns>
        </member>
        <member name="M:ServiceContracts.IReportService.RemoveReport(System.Int32,System.String,System.Boolean)">
            <summary>
            Removed a report from the repository.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The uri of the report to remove.</param>
            <param name="removeMaps"></param>
        </member>
        <member name="M:ServiceContracts.IReportService.SetName(System.Int32,System.String,System.String)">
            <summary>
            Change the name of a report.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The uri of the report to rename.</param>
            <param name="name">The new name for the report.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.SetDataSource(System.Int32,System.String,System.String,System.String)">
            <summary>
            Sets the source object of a report.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The uri of the report to rename.</param>
            <param name="mapMemberURI">Map member cim path.</param>
            <param name="dataConnectionXml">Data connection xml</param>
        </member>
        <member name="M:ServiceContracts.IReportService.ApplyDataSource(System.Int32,System.String,System.String,System.String)">
            <summary>
            Sets the source object of a report.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The uri of the report to rename.</param>
            <param name="cimDataSourceXml">Data connection xml</param>
            <param name="reportSectionName">Name of report section to update data source</param>
        </member>
        <member name="M:ServiceContracts.IReportService.OpenReport(System.Int32,System.String)">
            <summary>
            Opens the active object of a report.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The uri of the report to open.</param>
            <returns></returns>
        </member>
        <member name="M:ServiceContracts.IReportService.ExportReport(System.IntPtr,System.Int32,System.String,System.String,ArcGIS.Desktop.Internal.Mapping.esriBGLExploratoryAnalysisProps@,ArcGIS.Desktop.Internal.Mapping.IExportEventsCallback)">
            <summary>
            Starts the export report process.
            </summary>
            <param name="hWnd">The parent handle for the export dialog.</param>
            <param name="projectID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="reportName">The name of the report</param>
            <param name="analysisProps">The exploratory analysis properties.</param>
            <param name="exportEventsCallback">The call back to receive the export events.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.CancelExportReport">
            <summary>
            Cancels the current export.
            </summary>
        </member>
        <member name="M:ServiceContracts.IReportService.Export(System.Int32,System.String,ArcGIS.Desktop.Internal.DesktopService.AdvancedExportFormat,ArcGIS.Desktop.Internal.DesktopService.ExportParameters@,ArcGIS.Desktop.Internal.Mapping.esriBGLExploratoryAnalysisProps@,ArcGIS.Desktop.Internal.Mapping.IExportEventsCallback,System.Int64,System.Int64,ArcGIS.Desktop.Mapping.ExportPageOptions,System.String,System.Boolean,System.String)">
            <summary>
            Exports the report, give the export options.
            </summary>
            <param name="projectID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="format">The target format. PDF is the only one supported for now.</param>
            <param name="parameters">The export options</param>
            <param name="analysisProps"></param>
            <param name="exportEventsCallback">The call back to receive the export events.</param>
            <param name="startingPageNumberLabelOffset">An offset added to the page number in the footer</param>
            <param name="totalPageNumberOverride">A number that overrides the page count in the footer.</param>
            <param name="pageRangeOption">PageRangeOptions</param>
            <param name="selectedPageRanges">Print selected numbers or ranges (for example: "1, 3, 5-12").</param>
            <param name="useSelection">Use the MapMember selection..</param>
            <param name="appendQuery">Append additional definition query.</param>
            <returns>Error/warning message, if any.</returns>
        </member>
        <member name="M:ServiceContracts.IReportService.AddGroup(System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Adds a group header and footer to a report.
            </summary>
            <param name="projectID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="fieldName">The name of the field to be used for the group.</param>
            <param name="sortAscending">Sort the group field data in ascending order.</param>
            <param name="caseSensitiveSort">Use case sensitive compares when sorting the group field data.</param>
            <param name="parentGroupFieldName">The name of the parent group's field. If empty, above and below the details section.</param>
            <param name="containerSectionName">The name of the section to add group.</param>
            <returns></returns>
        </member>
        <member name="M:ServiceContracts.IReportService.RemoveGroup(System.Int32,System.String,System.String[],System.String[])">
            <summary>
            Removes the group header and footer given a group header or group footer name.
            </summary>
            <param name="projectID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="groupFieldNames">The name of the group field to remove.</param>
            <param name="parentSectionNames">The name of the section of the group field to remove.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.UpdateReportSection(System.Int32,System.String,System.String,System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Update the report section and report page.
            </summary>
            <param name="projectID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="reportSectionName">Then name of the report section element.</param>
            <param name="reportSectionXml">The definition for the report section.</param>
            <param name="pageXml"></param>
            <param name="elementNamesAddedOrRemoved">The name of elements added or removed.</param>
            <param name="elementAddedOrRemoved">True elements added, else elements removed</param>
        </member>
        <member name="M:ServiceContracts.IReportService.SetReportSectionFields(System.Int32,System.String,System.String,System.String,System.String[],System.String[])">
            <summary>
            Sets the fields for the main report section and/or the field element properties of a report section.
            </summary>
            <param name="projectID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="mainReportSectionName">The name of the main report section</param>
            <param name="reportFieldsXml">The report fields for the main report section datasource.</param>
            <param name="sectionNames">The name of the section set the field properties of.</param>
            <param name="sectionElementFieldPropertiesXmls">The element field properties for the section.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.GetReportTemplates(System.String[]@,System.String[]@,System.Boolean[]@,System.Boolean[]@)">
            <summary>
            Gets information about the current report templates.
            </summary>
            <param name="templatePaths">Array that includes the paths of the templates.</param>
            <param name="templateNames">Array that includes the names of the templates.</param>
            <param name="templateGrouping">Array that includes the grouping flags for the templates.</param>
            <param name="templateRelated">Array that includes the related flags for the templates.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.SetDefinitionQuery(System.Int32,System.String,System.String,System.String)">
            <summary>
            Change the definition query of a report section.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="defQuery">The new definition query for the report.</param>
            <param name="sectionName">Name of section containing definition query.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.SetDataSourceFields(System.Int32,System.String,System.String,System.String)">
            <summary>
            Change the grouping and sorting fields of a report section.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="fieldsXml">The array of grouping and sorting fields for the report section.</param>
            <param name="sectionName">Name of section containing data source.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.SetPageHeight(System.Int32,System.String,System.Double)">
            <summary>
            Change the page height of a report.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The uri of the report to rename.</param>
            <param name="pageHeight">The new page height for the report.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.SetExternalPage(System.Int32,System.String,System.String,ServiceContracts.PageUpdateHint)">
            <summary>
            Sets the page of the report, calculates report designer size based on the 
            the margins and moves the sections as necessary.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="pageXML">The page definition for the report.</param>
            <param name="hint"></param>
        </member>
        <member name="M:ServiceContracts.IReportService.RestoreReport(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Restores the state of the report
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="reportSectionName">Then name of the report section element.</param>
            <param name="reportSectionXml">The definition for the report section.</param>
            <param name="pageXml">The page definition for the report.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.SetSectionHeight(System.Int32,System.String,System.String,System.Double,System.Int32)">
            <summary>
            Change the page height of a report.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The uri of the report to rename.</param>
            <param name="sectionName">The of the section.</param>
            <param name="height">The new page height for the report.</param>
            <param name="interactiveToken">The interactive token.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.GetReport(System.Int32,System.String)">
            <summary>
            Get the report definition as a XML string.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The uri of the report.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.SetReport(System.Int32,System.String,System.String)">
            <summary>
            Change the report definition.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The uri of the report.</param>
            <param name="reportXML">The new report definition.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.AddRelatedReport(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a related report section and adds to the given report.
            </summary>
            <param name="projectID">The project to create the report in.</param>
            <param name="reportPath">The uri of the report.</param>
            <param name="relateName">The name of the relationship.</param>
            <param name="relateTitle">The user provided name of the related report section.</param>
            <param name="insertSectionName">The report section name to insert relate report.</param>
            <param name="reportDataSourceXml">The data source for the related report.</param>
            <param name="statPropertiesXml">The xml for an array CIMReportElementFieldProperties that includes the stats that will be used in the related report section</param>
            <param name="templatePath">The path to the report template.</param>
            <param name="styling">The name of the report styling.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.RemoveRelatedReport(System.Int32,System.String,System.String)">
            <summary>
            Removes the related report.
            </summary>
            <param name="projectID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="relatedReportName">The name of the related report to remove.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.SetRelatedDataSourceFields(System.Int32,System.String,System.String,System.String)">
            <summary>
            Change the grouping and sorting fields of a related report.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="fieldsXml">The array of grouping and sorting fields for the report.</param>
            <param name="relatedReportElementName">The name of related data element.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.SetRelatedDataSource(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Sets the source object of a report.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The uri of the report to rename.</param>
            <param name="relatedReportSectionName">Name of related report section to update data source.</param>
            <param name="cimDataSourceXml">Data connection xml.</param>
            <param name="relateName">Name of the relationship.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.DataSourceHasAttachments(System.Int32,System.String,System.String)">
            <summary>
            Returns true if report's datasource contains any attachments.
            </summary>
            <param name="projectID">The project id of the report.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="reportSectionName">Name of section containing data source.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.AddLayoutPage(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a layout page supplemental section and adds to the given report.
            </summary>
            <param name="projectID">The project to create the report in.</param>
            <param name="reportPath">The uri of the report.</param>
            <param name="layoutPath">The uri of the layout.</param>
            <param name="layoutPageElementName">The name of the layout page section element.</param>
            <param name="insertSectionName">The name of report section to insert before.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.AddLayoutPageFromFile(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a layout page supplemental section and adds to the given report.
            </summary>
            <param name="projectID">The project to create the report in.</param>
            <param name="reportPath">The uri of the report.</param>
            <param name="layoutFilePath">The path to the .pagx file.</param>
            <param name="layoutPageElementName">The name of the layout page section element.</param>
            <param name="insertSectionName">The name of report section to insert before.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.LoadLayoutFromFile(System.Int32,System.String)">
            <summary>
            Loads a layout from a pagx file and returns the URI of the layout.
            </summary>
            <param name="projectID">The project to load the layout in.</param>
            <param name="layoutFilePath">The path to the .pagx file.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.RemoveSupplementalPage(System.Int32,System.String,System.String)">
            <summary>
            Removes a supplemental page from the report.
            </summary>
            <param name="projectID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="pageName">The name of the supplemental page to remove.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.InsertReportSectionElement(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Inserts a report section element into the report at the given index.
            </summary>
            <param name="repositoryID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="sectionXml">The report section element.</param>
            <param name="index">The position to insert section.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.MoveReportSectionElement(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Moves a report section element from old index position to the new index position.
            </summary>
            <param name="repositoryID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="elementName">The name of the report section element to move.</param>
            <param name="newIndex">The position to insert section.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.AddSubReport(System.Int32,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Adds a subreport to the given report.
            </summary>
            <param name="projectID">The project to create the report in.</param>
            <param name="reportPath">The uri of the report.</param>
            <param name="reportXml">The report to add.</param>
            <param name="insertIndex">The position to insert section.</param>
            <param name="adjustPageSize">Adjust page size to match report document.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.AddSubReportFromFile(System.Int32,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Adds a subreport to the given report.
            </summary>
            <param name="projectID">The project to create the report in.</param>
            <param name="reportPath">The uri of the report.</param>
            <param name="subReportFilePath">The path to the .rptx file.</param>
            <param name="insertIndex">The position to insert section.</param>
            <param name="adjustPageSize">Adjust page size to match report document.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.LoadSubReportFromFile(System.Int32,System.String)">
            <summary>
            Loads a subreport from a rptx file and returns the URI of the report.
            </summary>
            <param name="projectID">The project to load the layout in.</param>
            <param name="subReportFilePath">The path to the .rptx file.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.RemoveReportSectionElement(System.Int32,System.String,System.String)">
            <summary>
            Removes a report section element from the report.
            </summary>
            <param name="projectID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="reportSectionElementName">The name of the report section element to remove.</param>
        </member>
        <member name="M:ServiceContracts.IReportService.UpdateReportSectionElementProperties(System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the report section and report page.
            </summary>
            <param name="projectID">The reports project id.</param>
            <param name="reportPath">The path to the report in the project.</param>
            <param name="reportSectionName">Then name of the report section element.</param>
            <param name="elementPropsXml">The definition for the report section element properties.</param>
        </member>
        <member name="M:ServiceContracts.ILayoutViewerService.FindMapViewer(System.String,System.String)">
            <summary>
            Finds an embedded map viewer.
            </summary>
            <param name="cimLayoutPath">CIM path of the layout</param>
            <param name="elementName">Map frame name</param>
            <returns></returns>
        </member>
        <member name="F:ServiceContracts.LayoutErrorCodes.E_GRAPHIC_ELEMENT_COUNT_LIMIT_REACHED">
            <summary>
            Corresponds to MAPPING_E_GRAPHIC_ELEMENT_COUNT_LIMIT_REACHED in MappingCodes.idl
            </summary>
        </member>
        <member name="F:ServiceContracts.LayoutErrorCodes.E_GRAPHIC_ELEMENT_SIZE_LIMIT_REACHED">
            <summary>
            Corresponds to MAPPING_E_GRAPHIC_ELEMENT_SIZE_LIMIT_REACHED in MappingCodes.idl
            </summary>
        </member>
    </members>
</doc>
